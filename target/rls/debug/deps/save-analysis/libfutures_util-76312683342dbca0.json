{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23","program":"/Users/iliashuianov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"channel\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=76312683342dbca0","-C","extra-filename=-76312683342dbca0","--out-dir","/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps","-L","dependency=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps","--extern","futures_channel=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_channel-f967c0838e6f372a.rmeta","--extern","futures_core=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_core-c555c29cde9879f3.rmeta","--extern","futures_io=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_io-0b11101e3f84243c.rmeta","--extern","futures_macro=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_macro-d6151afba5799674.dylib","--extern","futures_sink=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_sink-1df00105c5de5ca4.rmeta","--extern","futures_task=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_task-931cfc43469f6aab.rmeta","--extern","memchr=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libmemchr-54533d773aa50cec.rmeta","--extern","pin_project_lite=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libpin_project_lite-a8cbf2d117032b57.rmeta","--extern","pin_utils=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libpin_utils-4aec3f9b84208619.rmeta","--extern","slab=/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libslab-11b69ea0e7dd080d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/iliashuianov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/iliashuianov/projects/rust_projects/rust-fullstack-vocab/target/rls/debug/deps/libfutures_util-76312683342dbca0.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[12175404020858527337,0]},"crate_root":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src","external_crates":[{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[18338419660800184296,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[12557825491168679058,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/join_mod.rs","num":22,"id":{"name":"futures_macro","disambiguator":[4972436298818201597,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","num":23,"id":{"name":"futures_task","disambiguator":[3662609493183552618,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","num":24,"id":{"name":"futures_sink","disambiguator":[1966089476409262764,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[2195601292183713147,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","num":26,"id":{"name":"futures_channel","disambiguator":[8700200015226508154,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","num":27,"id":{"name":"slab","disambiguator":[9565651436511482883,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","num":28,"id":{"name":"futures_io","disambiguator":[17841281005635505360,0]}},{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","num":29,"id":{"name":"memchr","disambiguator":[17884485153969449349,0]}}],"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":11913,"byte_end":11914,"line_start":12,"line_end":12,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":12042,"byte_end":12043,"line_start":17,"line_end":17,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/join_mod.rs","byte_start":18637,"byte_end":18650,"line_start":84,"line_end":84,"column_start":24,"column_end":37},"alias_span":null,"name":"join_internal","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":22,"index":171},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/join_mod.rs","byte_start":18717,"byte_end":18734,"line_start":88,"line_end":88,"column_start":24,"column_end":41},"alias_span":null,"name":"try_join_internal","value":"","parent":{"krate":0,"index":75}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":12265,"byte_end":12266,"line_start":24,"line_end":24,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":172},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/select_mod.rs","byte_start":31999,"byte_end":32014,"line_start":309,"line_end":309,"column_start":24,"column_end":39},"alias_span":null,"name":"select_internal","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":22,"index":173},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/select_mod.rs","byte_start":32081,"byte_end":32103,"line_start":313,"line_end":313,"column_start":24,"column_end":46},"alias_span":null,"name":"select_biased_internal","value":"","parent":{"krate":0,"index":84}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":12492,"byte_end":12493,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":175},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/stream_select_mod.rs","byte_start":32759,"byte_end":32781,"line_start":6,"line_end":6,"column_start":24,"column_end":46},"alias_span":null,"name":"stream_select_internal","value":"","parent":{"krate":0,"index":93}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":12733,"byte_end":12734,"line_start":38,"line_end":38,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":12971,"byte_end":12972,"line_start":46,"line_end":46,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1033,"byte_end":1034,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1142,"byte_end":1143,"line_start":43,"line_end":43,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47183},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1181,"byte_end":1187,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47185},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47186},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47187},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47188},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47302},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":46,"line_end":46,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47316},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47313},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47314},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1332,"byte_end":1333,"line_start":51,"line_end":51,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":2,"index":13541},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35783,"byte_end":35789,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35849,"byte_end":35858,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35860,"byte_end":35874,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35908,"byte_end":35919,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35921,"byte_end":35930,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35956,"byte_end":35965,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35967,"byte_end":35981,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35983,"byte_end":35998,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":40072,"byte_end":40076,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":11071},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":41796,"byte_end":41807,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":11114},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42141,"byte_end":42147,"line_start":111,"line_end":111,"column_start":31,"column_end":37},"alias_span":null,"name":"Remote","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":11107},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42149,"byte_end":42161,"line_start":111,"line_end":111,"column_start":39,"column_end":51},"alias_span":null,"name":"RemoteHandle","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42324,"byte_end":42330,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42332,"byte_end":42342,"line_start":117,"line_end":117,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":10566},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36113,"byte_end":36120,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36122,"byte_end":36126,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":687},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36128,"byte_end":36137,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10917},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36139,"byte_end":36146,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10732},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36148,"byte_end":36158,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10672},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36160,"byte_end":36163,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10782},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36165,"byte_end":36172,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10977},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36174,"byte_end":36184,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10844},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36186,"byte_end":36190,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11025},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36192,"byte_end":36201,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":10614},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36297,"byte_end":36310,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11071},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36359,"byte_end":36370,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11114},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36499,"byte_end":36505,"line_start":36,"line_end":36,"column_start":24,"column_end":30},"alias_span":null,"name":"Remote","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11107},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36507,"byte_end":36519,"line_start":36,"line_end":36,"column_start":32,"column_end":44},"alias_span":null,"name":"RemoteHandle","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36570,"byte_end":36576,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36578,"byte_end":36588,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11155},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":87748,"byte_end":87758,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":768}},{"kind":"Use","ref_id":{"krate":0,"index":11539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36640,"byte_end":36647,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11686},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36649,"byte_end":36656,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11869},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36658,"byte_end":36668,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11808},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36670,"byte_end":36679,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11155},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36681,"byte_end":36691,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11991},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36693,"byte_end":36699,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11930},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36701,"byte_end":36706,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12053},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36708,"byte_end":36719,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11747},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36721,"byte_end":36727,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11613},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36733,"byte_end":36739,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11288},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36741,"byte_end":36751,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11409},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36753,"byte_end":36769,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36771,"byte_end":36783,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12126},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36785,"byte_end":36797,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":11467},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36902,"byte_end":36913,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36969,"byte_end":36973,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12184},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":36975,"byte_end":36979,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37020,"byte_end":37027,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12190},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37029,"byte_end":37036,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37083,"byte_end":37093,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12196},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37095,"byte_end":37104,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1235},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37159,"byte_end":37173,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12209},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37175,"byte_end":37187,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12222},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37225,"byte_end":37237,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37277,"byte_end":37284,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1312},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37286,"byte_end":37292,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1376},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37347,"byte_end":37361,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12261},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37363,"byte_end":37376,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37413,"byte_end":37416,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37418,"byte_end":37420,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1418},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37422,"byte_end":37427,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12300},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37429,"byte_end":37434,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37469,"byte_end":37473,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37475,"byte_end":37480,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1481},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37482,"byte_end":37487,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37489,"byte_end":37494,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12402},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37496,"byte_end":37500,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12447},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37502,"byte_end":37507,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12504},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37509,"byte_end":37514,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12573},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37516,"byte_end":37521,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1580},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37616,"byte_end":37624,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1567},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37626,"byte_end":37633,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37672,"byte_end":37678,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12654},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37680,"byte_end":37686,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1679},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37785,"byte_end":37795,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12662},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37797,"byte_end":37806,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37854,"byte_end":37862,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1738},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37864,"byte_end":37873,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1742},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37875,"byte_end":37884,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1747},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37886,"byte_end":37895,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12738},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37897,"byte_end":37904,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12783},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37906,"byte_end":37914,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12840},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37916,"byte_end":37924,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12909},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":37926,"byte_end":37934,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38039,"byte_end":38051,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1845},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38053,"byte_end":38063,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1903},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38110,"byte_end":38120,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12990},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38122,"byte_end":38131,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38228,"byte_end":38237,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":12998},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38239,"byte_end":38247,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":13004},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38285,"byte_end":38291,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":18728},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38458,"byte_end":38469,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":18724},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38471,"byte_end":38488,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":18681},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38490,"byte_end":38499,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":18739},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":18740},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":38591,"byte_end":38600,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":2,"index":13541},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":687},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176667,"byte_end":176676,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176678,"byte_end":176692,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176726,"byte_end":176737,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176739,"byte_end":176745,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176747,"byte_end":176756,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13021},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181062,"byte_end":181067,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13070},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181182,"byte_end":181189,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13119},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181300,"byte_end":181305,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13181},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181418,"byte_end":181424,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13258},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181651,"byte_end":181656,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13298},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181775,"byte_end":181784,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13346},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":181897,"byte_end":181903,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13415},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":182024,"byte_end":182033,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13600},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":182421,"byte_end":182425,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13914},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":183139,"byte_end":183146,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13971},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":183255,"byte_end":183259,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":183382,"byte_end":183394,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14103},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":183757,"byte_end":183760,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14249},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184143,"byte_end":184147,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14257},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184280,"byte_end":184294,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14395},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184404,"byte_end":184410,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14444},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184412,"byte_end":184420,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14313},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184422,"byte_end":184426,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14354},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184428,"byte_end":184435,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14265},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184437,"byte_end":184445,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14493},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184555,"byte_end":184559,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14541},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184680,"byte_end":184689,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14614},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184798,"byte_end":184802,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14662},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":184923,"byte_end":184932,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":185053,"byte_end":185062,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14796},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":185171,"byte_end":185175,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14861},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":185282,"byte_end":185285,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14918},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":185450,"byte_end":185456,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":14970},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":185633,"byte_end":185644,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15022},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":185753,"byte_end":185757,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15095},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":186012,"byte_end":186027,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15144},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":186266,"byte_end":186274,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15390},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187216,"byte_end":187233,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187613,"byte_end":187625,"line_start":237,"line_end":237,"column_start":23,"column_end":35},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":4390},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187613,"byte_end":187625,"line_start":237,"line_end":237,"column_start":23,"column_end":35},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15458},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187627,"byte_end":187636,"line_start":237,"line_end":237,"column_start":37,"column_end":46},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15451},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187638,"byte_end":187649,"line_start":237,"line_end":237,"column_start":48,"column_end":59},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":15467},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187823,"byte_end":187834,"line_start":243,"line_end":243,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2174}},{"kind":"Use","ref_id":{"krate":0,"index":13021},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176872,"byte_end":176877,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13070},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176879,"byte_end":176886,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13181},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176888,"byte_end":176894,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13258},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176896,"byte_end":176901,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13298},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176903,"byte_end":176912,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13346},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176914,"byte_end":176920,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13415},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176922,"byte_end":176931,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14160},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176933,"byte_end":176940,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176942,"byte_end":176949,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13600},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176951,"byte_end":176955,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13914},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176957,"byte_end":176964,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13971},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176970,"byte_end":176974,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14028},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176976,"byte_end":176983,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14103},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176985,"byte_end":176988,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14249},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176990,"byte_end":176994,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14395},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176996,"byte_end":177002,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14444},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177004,"byte_end":177012,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14313},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177014,"byte_end":177018,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14354},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177020,"byte_end":177027,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14265},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177029,"byte_end":177037,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15022},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177039,"byte_end":177043,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14257},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177045,"byte_end":177059,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14493},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177065,"byte_end":177069,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14541},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177071,"byte_end":177080,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":4468},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177082,"byte_end":177091,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177093,"byte_end":177105,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14614},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177107,"byte_end":177111,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177113,"byte_end":177122,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14662},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177124,"byte_end":177133,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14796},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177135,"byte_end":177139,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13119},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177141,"byte_end":177146,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14861},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177148,"byte_end":177151,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15467},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177203,"byte_end":177214,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14918},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177265,"byte_end":177271,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":14970},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177322,"byte_end":177333,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":13856},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177431,"byte_end":177438,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15095},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177525,"byte_end":177540,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15144},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177542,"byte_end":177550,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15390},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177552,"byte_end":177569,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177730,"byte_end":177742,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":4390},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177730,"byte_end":177742,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15458},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177744,"byte_end":177753,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15451},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177755,"byte_end":177766,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":358944,"byte_end":358951,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":15810},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":359946,"byte_end":359956,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16010},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":360636,"byte_end":360642,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16075},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":360759,"byte_end":360766,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16083},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":360891,"byte_end":360901,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16140},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361022,"byte_end":361031,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16209},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361160,"byte_end":361172,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16274},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361295,"byte_end":361305,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16322},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361428,"byte_end":361438,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361559,"byte_end":361568,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16411},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361742,"byte_end":361751,"line_start":103,"line_end":103,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16463},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361753,"byte_end":361767,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16464},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361753,"byte_end":361767,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16484},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":361885,"byte_end":361892,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":5476},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":362014,"byte_end":362024,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16553},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":362026,"byte_end":362035,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16610},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":362165,"byte_end":362177,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16683},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":362306,"byte_end":362318,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16756},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":362581,"byte_end":362599,"line_start":127,"line_end":127,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16808},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":362846,"byte_end":362857,"line_start":135,"line_end":135,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16860},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363126,"byte_end":363146,"line_start":143,"line_end":143,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":16921},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363417,"byte_end":363430,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":4694}},{"kind":"Use","ref_id":{"krate":0,"index":5476},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177818,"byte_end":177828,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177830,"byte_end":177837,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15579},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177839,"byte_end":177846,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177848,"byte_end":177858,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15657},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177860,"byte_end":177869,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15810},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177871,"byte_end":177881,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15935},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177883,"byte_end":177889,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":15857},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177891,"byte_end":177896,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16010},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177898,"byte_end":177904,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16322},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177910,"byte_end":177920,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177922,"byte_end":177931,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16140},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177933,"byte_end":177942,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16209},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177944,"byte_end":177956,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16274},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177958,"byte_end":177968,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16484},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177970,"byte_end":177977,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16083},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177979,"byte_end":177989,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16075},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":177991,"byte_end":177998,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16610},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178004,"byte_end":178016,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":5885},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178018,"byte_end":178030,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16683},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178032,"byte_end":178044,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16553},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178046,"byte_end":178055,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16921},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178180,"byte_end":178193,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16756},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178284,"byte_end":178302,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16808},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178304,"byte_end":178315,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16860},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178317,"byte_end":178337,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16411},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178394,"byte_end":178403,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16463},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178405,"byte_end":178419,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16464},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178405,"byte_end":178419,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178476,"byte_end":178480,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16973},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178482,"byte_end":178486,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178525,"byte_end":178531,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16982},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178533,"byte_end":178539,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6130},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178588,"byte_end":178599,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":16991},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178601,"byte_end":178611,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6164},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178648,"byte_end":178653,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17000},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178655,"byte_end":178660,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6216},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178695,"byte_end":178699,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17006},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178701,"byte_end":178705,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6260},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178746,"byte_end":178753,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178755,"byte_end":178762,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6310},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178803,"byte_end":178810,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6302},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178812,"byte_end":178818,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6351},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178873,"byte_end":178887,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17048},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178889,"byte_end":178902,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6394},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178941,"byte_end":178947,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17087},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":178949,"byte_end":178955,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6465},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179022,"byte_end":179042,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17132},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179044,"byte_end":179052,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17151},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179054,"byte_end":179072,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6554},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179111,"byte_end":179117,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17224},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179119,"byte_end":179125,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":6654},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179303,"byte_end":179317,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17356},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488989,"byte_end":488997,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":17347},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488999,"byte_end":489003,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":17348},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488999,"byte_end":489003,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":17327},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489005,"byte_end":489012,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":17328},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489005,"byte_end":489012,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":17317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489014,"byte_end":489024,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":17336},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489026,"byte_end":489036,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6696}},{"kind":"Use","ref_id":{"krate":0,"index":7017},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179517,"byte_end":179533,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":7177},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179720,"byte_end":179730,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":17363},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179732,"byte_end":179741,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":18728},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179909,"byte_end":179920,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":18724},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179922,"byte_end":179939,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":18681},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179941,"byte_end":179950,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":18739},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179952,"byte_end":179959,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":18740},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179952,"byte_end":179959,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":7248},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":180042,"byte_end":180051,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4468},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5885},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537823,"byte_end":537827,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17421},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537862,"byte_end":537867,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":7372},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537903,"byte_end":537908,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17432},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537910,"byte_end":537915,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17438},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537953,"byte_end":537959,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17483},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537992,"byte_end":537996,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17494},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538031,"byte_end":538036,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538077,"byte_end":538088,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17569},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538127,"byte_end":538137,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17628},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538170,"byte_end":538174,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":7692},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538215,"byte_end":538222,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":7754},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538260,"byte_end":538266,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17638},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538268,"byte_end":538274,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538308,"byte_end":538312,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17779},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538363,"byte_end":538374,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":0,"index":17866},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538463,"byte_end":538469,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":7282}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10975,"byte_end":10979,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7997},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10981,"byte_end":10988,"line_start":307,"line_end":307,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13843},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577860,"byte_end":577867,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":2,"index":50105},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577869,"byte_end":577873,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":2,"index":50141},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577875,"byte_end":577883,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":2,"index":50150},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577885,"byte_end":577899,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":2,"index":13853},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577901,"byte_end":577906,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577933,"byte_end":577942,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577944,"byte_end":577958,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":18},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577960,"byte_end":577970,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":15},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577972,"byte_end":577977,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":21},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577979,"byte_end":577989,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577991,"byte_end":578006,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":378},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578032,"byte_end":578042,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":379},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578066,"byte_end":578080,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":94},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578166,"byte_end":578173,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":122},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578259,"byte_end":578264,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":170},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578351,"byte_end":578360,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":23,"index":407},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578362,"byte_end":578370,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578449,"byte_end":578460,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":0,"index":8140},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578496,"byte_end":578509,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":0,"index":8135},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":578511,"byte_end":578519,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":8042}},{"kind":"Use","ref_id":{"krate":1,"index":3959},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586747,"byte_end":586752,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":1,"index":10572},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586754,"byte_end":586763,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":1,"index":10696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586765,"byte_end":586772,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":1,"index":4558},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586774,"byte_end":586784,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":1,"index":3957},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586786,"byte_end":586792,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":1,"index":10708},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586794,"byte_end":586802,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":28,"index":49},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586827,"byte_end":586839,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":28,"index":39},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586841,"byte_end":586850,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":28,"index":47},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586852,"byte_end":586861,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":28,"index":42},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586863,"byte_end":586873,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":17923},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587300,"byte_end":587310,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":17956},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587356,"byte_end":587365,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18009},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587367,"byte_end":587379,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587425,"byte_end":587434,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18068},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587481,"byte_end":587491,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18104},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587526,"byte_end":587531,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18153},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587566,"byte_end":587571,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":8655},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587605,"byte_end":587609,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18161},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587611,"byte_end":587615,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":8700},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587658,"byte_end":587666,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18215},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587668,"byte_end":587675,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":8758},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587738,"byte_end":587756,"line_start":70,"line_end":70,"column_start":36,"column_end":54},"alias_span":null,"name":"copy_buf_abortable","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18277},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587758,"byte_end":587774,"line_start":70,"line_end":70,"column_start":56,"column_end":72},"alias_span":null,"name":"CopyBufAbortable","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18343},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587812,"byte_end":587818,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":8863},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587854,"byte_end":587859,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":8861},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587861,"byte_end":587866,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587908,"byte_end":587915,"line_start":79,"line_end":79,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18379},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":587950,"byte_end":587955,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18394},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588144,"byte_end":588152,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18443},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588187,"byte_end":588192,"line_start":92,"line_end":92,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18491},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588225,"byte_end":588229,"line_start":95,"line_end":95,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18500},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588280,"byte_end":588292,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18509},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588337,"byte_end":588346,"line_start":101,"line_end":101,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18518},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588389,"byte_end":588397,"line_start":104,"line_end":104,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18529},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588444,"byte_end":588453,"line_start":107,"line_end":107,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588506,"byte_end":588518,"line_start":110,"line_end":110,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18550},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588563,"byte_end":588572,"line_start":113,"line_end":113,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":9355},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588610,"byte_end":588616,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":9353},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588618,"byte_end":588624,"line_start":116,"line_end":116,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18561},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588658,"byte_end":588662,"line_start":119,"line_end":119,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":9431},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588696,"byte_end":588700,"line_start":122,"line_end":122,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":9429},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588702,"byte_end":588706,"line_start":122,"line_end":122,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18570},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588743,"byte_end":588751,"line_start":125,"line_end":125,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":9513},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588753,"byte_end":588765,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":9514},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588753,"byte_end":588765,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18576},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588767,"byte_end":588776,"line_start":125,"line_end":125,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18582},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588810,"byte_end":588814,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18626},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588851,"byte_end":588857,"line_start":131,"line_end":131,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18633},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588892,"byte_end":588897,"line_start":134,"line_end":134,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18642},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":588950,"byte_end":588963,"line_start":137,"line_end":137,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":0,"index":18651},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589006,"byte_end":589014,"line_start":140,"line_end":140,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":8154}},{"kind":"Use","ref_id":{"krate":28,"index":49},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9756},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":39},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9721},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":47},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9751},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":42},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9738},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10074},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":699198,"byte_end":699214,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":9795}},{"kind":"Use","ref_id":{"krate":0,"index":9960},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":699216,"byte_end":699221,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":9795}},{"kind":"Use","ref_id":{"krate":0,"index":10051},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":699223,"byte_end":699233,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":9795}},{"kind":"Use","ref_id":{"krate":0,"index":10032},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":699235,"byte_end":699250,"line_start":17,"line_end":17,"column_start":42,"column_end":57},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":9795}},{"kind":"Use","ref_id":{"krate":0,"index":10016},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":699252,"byte_end":699267,"line_start":17,"line_end":17,"column_start":59,"column_end":74},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":9795}},{"kind":"Use","ref_id":{"krate":0,"index":9999},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":699269,"byte_end":699289,"line_start":17,"line_end":17,"column_start":76,"column_end":96},"alias_span":null,"name":"OwnedMutexLockFuture","value":"","parent":{"krate":0,"index":9795}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":7269},{"krate":0,"index":7270},{"krate":0,"index":7273},{"krate":0,"index":7276},{"krate":0,"index":7279},{"krate":0,"index":7282},{"krate":0,"index":8035},{"krate":0,"index":8036},{"krate":0,"index":8039},{"krate":0,"index":8042},{"krate":0,"index":8152},{"krate":0,"index":8154},{"krate":0,"index":9770},{"krate":0,"index":9771},{"krate":0,"index":9774},{"krate":0,"index":9777},{"krate":0,"index":9780},{"krate":0,"index":9783},{"krate":0,"index":9786},{"krate":0,"index":9789},{"krate":0,"index":9792},{"krate":0,"index":9795},{"krate":0,"index":10131},{"krate":0,"index":10193},{"krate":0,"index":10407}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","byte_start":14000,"byte_end":14004,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"fn poll<F>(F) -> PollOnce<F> where F: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","byte_start":14145,"byte_end":14153,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","byte_start":14079,"byte_end":14118,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","byte_start":14284,"byte_end":14288,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollOnce<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/pending.rs","byte_start":15214,"byte_end":15226,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/pending.rs","byte_start":15351,"byte_end":15362,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/pending.rs","byte_start":15285,"byte_end":15324,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/pending.rs","byte_start":15447,"byte_end":15451,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<PendingOnce as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/random.rs","byte_start":34247,"byte_end":34254,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":13015,"byte_end":13027,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"fn assert_unpin<T>(&T) where T: Unpin","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":12990,"byte_end":13007,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":13089,"byte_end":13108,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"fn assert_fused_future<T>(&T) where T: Future + FusedFuture","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":13064,"byte_end":13081,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":13185,"byte_end":13204,"line_start":58,"line_end":58,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"fn assert_fused_stream<T>(&T) where T: Stream + FusedStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/mod.rs","byte_start":13160,"byte_end":13177,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1111,"byte_end":1120,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1056,"byte_end":1087,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":1282,"byte_end":1293,"line_start":50,"line_end":50,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2140}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35316,"byte_end":35340,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35341,"byte_end":35344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35345,"byte_end":35370,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35371,"byte_end":35374,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35375,"byte_end":35402,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35403,"byte_end":35482,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35483,"byte_end":35520,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35521,"byte_end":35600,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35601,"byte_end":35676,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/mod.rs","byte_start":35677,"byte_end":35741,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":10431},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59123,"byte_end":59128,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":10428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10432},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59138,"byte_end":59139,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::future::flatten::Flatten::First::f","value":"Fut1","parent":{"krate":0,"index":10431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10433},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59157,"byte_end":59163,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":10428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10434},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59173,"byte_end":59174,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::future::flatten::Flatten::Second::f","value":"Fut2","parent":{"krate":0,"index":10433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10435},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59192,"byte_end":59197,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":10428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10428},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59093,"byte_end":59100,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":10431},{"krate":0,"index":10433},{"krate":0,"index":10435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59445,"byte_end":59458,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59729,"byte_end":59733,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":60458,"byte_end":60471,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":60738,"byte_end":60747,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":61608,"byte_end":61618,"line_start":112,"line_end":112,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Flatten<Fut, Fut::Output> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":62168,"byte_end":62178,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Flatten<Fut, Fut::Output> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":62511,"byte_end":62521,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Flatten<Fut, Fut::Output> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":62850,"byte_end":62860,"line_start":143,"line_end":143,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Flatten<Fut, Fut::Output> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63554,"byte_end":63558,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10477}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65377,"byte_end":65387,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63755,"byte_end":63823,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63828,"byte_end":63831,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63836,"byte_end":63904,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63909,"byte_end":63954,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63959,"byte_end":63962,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63967,"byte_end":63981,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63986,"byte_end":63989,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63994,"byte_end":64001,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64006,"byte_end":64047,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64052,"byte_end":64083,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64088,"byte_end":64144,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64149,"byte_end":64173,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64178,"byte_end":64213,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64218,"byte_end":64243,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64248,"byte_end":64251,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64256,"byte_end":64305,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64310,"byte_end":64313,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64318,"byte_end":64360,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64365,"byte_end":64404,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64409,"byte_end":64448,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64453,"byte_end":64470,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64475,"byte_end":64478,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64483,"byte_end":64553,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64558,"byte_end":64597,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64602,"byte_end":64643,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64648,"byte_end":64674,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64679,"byte_end":64682,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64687,"byte_end":64697,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64702,"byte_end":64719,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64724,"byte_end":64758,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64763,"byte_end":64810,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64815,"byte_end":64864,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64869,"byte_end":64931,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64936,"byte_end":64960,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":64965,"byte_end":65008,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65013,"byte_end":65070,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65075,"byte_end":65150,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65155,"byte_end":65185,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65190,"byte_end":65207,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65212,"byte_end":65226,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65231,"byte_end":65315,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65320,"byte_end":65329,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65334,"byte_end":65339,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65344,"byte_end":65353,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65358,"byte_end":65365,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65491,"byte_end":65504,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65640,"byte_end":65644,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fuse<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Fut::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10514},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66445,"byte_end":66455,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":10511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10515},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66489,"byte_end":66495,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"future","qualname":"::future::future::map::Map::Incomplete::future","value":"Fut","parent":{"krate":0,"index":10514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10516},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66514,"byte_end":66515,"line_start":19,"line_end":19,"column_start":13,"column_end":14},"name":"f","qualname":"::future::future::map::Map::Incomplete::f","value":"F","parent":{"krate":0,"index":10514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10517},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66539,"byte_end":66547,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":10511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66423,"byte_end":66426,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":10514},{"krate":0,"index":10517}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845711,"byte_end":14845720,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66828,"byte_end":66841,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":67115,"byte_end":67119,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10566},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":39549,"byte_end":39556,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":10568}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10614},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":39807,"byte_end":39820,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":10616}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10672},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":40160,"byte_end":40163,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10675}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10732},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":40370,"byte_end":40380,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":10734}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10782},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":40586,"byte_end":40593,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":10785}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10844},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":40786,"byte_end":40790,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10848}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10917},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":41035,"byte_end":41042,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":10920}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10977},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":41283,"byte_end":41293,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":10979}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11025},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":41506,"byte_end":41515,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":11027}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11071},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/catch_unwind.rs","byte_start":68143,"byte_end":68154,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":11073}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/catch_unwind.rs","byte_start":68494,"byte_end":68498,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<CatchUnwind<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11107},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70192,"byte_end":70204,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"RemoteHandle","qualname":"::future::future::remote_handle::RemoteHandle","value":"RemoteHandle {  }","parent":null,"children":[{"krate":0,"index":11109},{"krate":0,"index":11110}],"decl_id":null,"docs":" The handle to a remote future returned by\n [`remote_handle`](crate::future::FutureExt::remote_handle). When you drop this,\n the remote future will be woken up to be dropped by the executor.","sig":null,"attributes":[{"value":"/ The handle to a remote future returned by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69133,"byte_end":69178,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/ [`remote_handle`](crate::future::FutureExt::remote_handle). When you drop this,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69179,"byte_end":69262,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ the remote future will be woken up to be dropped by the executor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69263,"byte_end":69332,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69333,"byte_end":69336,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Unwind safety","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69337,"byte_end":69357,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69358,"byte_end":69361,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ When the remote future panics, [Remote] will catch the unwind and transfer it to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69362,"byte_end":69446,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ the thread where `RemoteHandle` is being awaited. This is good for the common","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69447,"byte_end":69528,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ case where [Remote] is spawned on a threadpool. It is unlikely that other code","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69529,"byte_end":69611,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ in the executor working thread shares mutable data with the spawned future and we","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69612,"byte_end":69697,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ preserve the executor from losing its working threads.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69698,"byte_end":69756,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69757,"byte_end":69760,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If you run the future locally and send the handle of to be awaited elsewhere, you","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69761,"byte_end":69846,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/ must be careful with regard to unwind safety because the thread in which the future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69847,"byte_end":69934,"line_start":36,"line_end":36,"column_start":1,"column_end":88}},{"value":"/ is polled will keep running after the panic and the thread running the [RemoteHandle]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":69935,"byte_end":70024,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ will unwind.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70025,"byte_end":70041,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"must_use = \"dropping a remote handle cancels the underlying future\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70042,"byte_end":70112,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70503,"byte_end":70509,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"forget","qualname":"<RemoteHandle<T>>::forget","value":"fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this handle *without* canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drops this handle *without* canceling the underlying future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70315,"byte_end":70379,"line_start":48,"line_end":48,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70384,"byte_end":70387,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method can be used if you want to drop the handle, but let the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70392,"byte_end":70463,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ execution continue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70468,"byte_end":70491,"line_start":51,"line_end":51,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70659,"byte_end":70663,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"poll","qualname":"<RemoteHandle<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11114},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71440,"byte_end":71446,"line_start":78,"line_end":78,"column_start":16,"column_end":22},"name":"Remote","qualname":"::future::future::remote_handle::Remote","value":"Remote {  }","parent":null,"children":[{"krate":0,"index":11116},{"krate":0,"index":11117},{"krate":0,"index":11118}],"decl_id":null,"docs":" A future which sends its output to the corresponding `RemoteHandle`.\n Created by [`remote_handle`](crate::future::FutureExt::remote_handle).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71686,"byte_end":71689,"line_start":87,"line_end":87,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Remote<Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71885,"byte_end":71889,"line_start":95,"line_end":95,"column_start":8,"column_end":12},"name":"poll","qualname":"<Remote<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73384,"byte_end":73390,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73241,"byte_end":73304,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73305,"byte_end":73372,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73764,"byte_end":73774,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73675,"byte_end":73752,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73861,"byte_end":73866,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"clone","qualname":"<WeakShared<Fut> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74117,"byte_end":74120,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared<Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74544,"byte_end":74547,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WeakShared<Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75876,"byte_end":75880,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75607,"byte_end":75681,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75686,"byte_end":75759,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75764,"byte_end":75832,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75837,"byte_end":75864,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76375,"byte_end":76384,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76232,"byte_end":76285,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76290,"byte_end":76293,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76298,"byte_end":76363,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76978,"byte_end":76990,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76566,"byte_end":76624,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76629,"byte_end":76632,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76637,"byte_end":76702,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76707,"byte_end":76710,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76715,"byte_end":76727,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76732,"byte_end":76735,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76740,"byte_end":76833,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76838,"byte_end":76932,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":76937,"byte_end":76966,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77498,"byte_end":77508,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77090,"byte_end":77146,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77151,"byte_end":77154,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77159,"byte_end":77224,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77229,"byte_end":77232,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77237,"byte_end":77249,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77254,"byte_end":77257,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77262,"byte_end":77355,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77360,"byte_end":77452,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77457,"byte_end":77486,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":79383,"byte_end":79396,"line_start":214,"line_end":214,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Shared<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":79573,"byte_end":79577,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"poll","qualname":"<Shared<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":82974,"byte_end":82979,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared<Fut> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83139,"byte_end":83143,"line_start":341,"line_end":341,"column_start":8,"column_end":12},"name":"drop","qualname":"<Shared<Fut> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":84108,"byte_end":84115,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83918,"byte_end":83980,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83985,"byte_end":83988,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83993,"byte_end":84073,"line_start":370,"line_end":370,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":84078,"byte_end":84096,"line_start":371,"line_end":371,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":687},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42497,"byte_end":42506,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42398,"byte_end":42472,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42473,"byte_end":42486,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43338,"byte_end":43341,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42521,"byte_end":42596,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42601,"byte_end":42624,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42629,"byte_end":42632,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42637,"byte_end":42711,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42716,"byte_end":42787,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42792,"byte_end":42854,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42859,"byte_end":42862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42867,"byte_end":42938,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42943,"byte_end":43014,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43019,"byte_end":43040,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43045,"byte_end":43048,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43053,"byte_end":43067,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43072,"byte_end":43075,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43080,"byte_end":43087,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43092,"byte_end":43133,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43138,"byte_end":43173,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43178,"byte_end":43181,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43186,"byte_end":43215,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43220,"byte_end":43263,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43268,"byte_end":43304,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43309,"byte_end":43318,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43323,"byte_end":43330,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43738,"byte_end":43746,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43511,"byte_end":43586,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43591,"byte_end":43614,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43619,"byte_end":43622,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43627,"byte_end":43705,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43710,"byte_end":43730,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44758,"byte_end":44762,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnOnce(Self::Output)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43905,"byte_end":43981,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":43986,"byte_end":44029,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44034,"byte_end":44037,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44042,"byte_end":44113,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44118,"byte_end":44192,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44197,"byte_end":44213,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44218,"byte_end":44221,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44226,"byte_end":44301,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44306,"byte_end":44317,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44322,"byte_end":44325,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44330,"byte_end":44401,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44406,"byte_end":44432,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44437,"byte_end":44440,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44445,"byte_end":44459,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44464,"byte_end":44467,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44472,"byte_end":44479,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44484,"byte_end":44525,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44530,"byte_end":44565,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44570,"byte_end":44573,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44578,"byte_end":44612,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44617,"byte_end":44682,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44687,"byte_end":44724,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44729,"byte_end":44738,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44743,"byte_end":44750,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45632,"byte_end":45643,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":44974,"byte_end":45049,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45054,"byte_end":45075,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45080,"byte_end":45083,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45088,"byte_end":45168,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45173,"byte_end":45245,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45250,"byte_end":45253,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45258,"byte_end":45272,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45277,"byte_end":45280,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45285,"byte_end":45292,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45297,"byte_end":45338,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45343,"byte_end":45378,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45383,"byte_end":45386,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45391,"byte_end":45405,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45410,"byte_end":45438,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45443,"byte_end":45479,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45484,"byte_end":45496,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45501,"byte_end":45539,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45544,"byte_end":45550,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45555,"byte_end":45558,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45563,"byte_end":45598,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45603,"byte_end":45612,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45617,"byte_end":45624,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46482,"byte_end":46494,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45823,"byte_end":45899,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45904,"byte_end":45925,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45930,"byte_end":45933,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":45938,"byte_end":46017,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46022,"byte_end":46094,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46099,"byte_end":46102,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46107,"byte_end":46121,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46126,"byte_end":46129,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46134,"byte_end":46141,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46146,"byte_end":46187,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46192,"byte_end":46227,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46232,"byte_end":46235,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46240,"byte_end":46254,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46259,"byte_end":46287,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46292,"byte_end":46328,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46333,"byte_end":46345,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46350,"byte_end":46388,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46393,"byte_end":46399,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46404,"byte_end":46407,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46412,"byte_end":46448,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46453,"byte_end":46462,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46467,"byte_end":46474,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47273,"byte_end":47284,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46675,"byte_end":46728,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46733,"byte_end":46736,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46741,"byte_end":46815,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46820,"byte_end":46883,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46888,"byte_end":46891,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46896,"byte_end":46910,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46915,"byte_end":46918,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46923,"byte_end":46930,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46935,"byte_end":46976,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":46981,"byte_end":47016,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47021,"byte_end":47056,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47061,"byte_end":47064,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47069,"byte_end":47099,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47104,"byte_end":47142,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47147,"byte_end":47198,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47203,"byte_end":47239,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47244,"byte_end":47253,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47258,"byte_end":47265,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48149,"byte_end":48156,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47423,"byte_end":47487,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47492,"byte_end":47528,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47533,"byte_end":47536,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47541,"byte_end":47610,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47615,"byte_end":47652,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47657,"byte_end":47660,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47665,"byte_end":47725,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47730,"byte_end":47733,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47738,"byte_end":47809,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47814,"byte_end":47840,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47845,"byte_end":47848,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47853,"byte_end":47867,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47872,"byte_end":47875,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47880,"byte_end":47887,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47892,"byte_end":47933,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47938,"byte_end":47973,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47978,"byte_end":47981,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":47986,"byte_end":48032,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48037,"byte_end":48078,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48083,"byte_end":48115,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48120,"byte_end":48129,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48134,"byte_end":48141,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49261,"byte_end":49275,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48370,"byte_end":48445,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48450,"byte_end":48473,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48478,"byte_end":48481,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48486,"byte_end":48558,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48563,"byte_end":48636,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48641,"byte_end":48655,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48660,"byte_end":48663,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48668,"byte_end":48738,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48743,"byte_end":48761,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48766,"byte_end":48769,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48774,"byte_end":48788,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48793,"byte_end":48796,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48801,"byte_end":48808,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48813,"byte_end":48854,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48859,"byte_end":48894,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48899,"byte_end":48942,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48947,"byte_end":48950,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":48955,"byte_end":48995,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49000,"byte_end":49066,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49071,"byte_end":49074,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49079,"byte_end":49132,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49137,"byte_end":49183,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49188,"byte_end":49227,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49232,"byte_end":49241,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49246,"byte_end":49253,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50363,"byte_end":50367,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49468,"byte_end":49541,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49546,"byte_end":49612,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49617,"byte_end":49635,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49640,"byte_end":49643,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49648,"byte_end":49715,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49720,"byte_end":49785,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49790,"byte_end":49862,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49867,"byte_end":49941,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49946,"byte_end":49972,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49977,"byte_end":49980,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":49985,"byte_end":50056,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50061,"byte_end":50136,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50141,"byte_end":50195,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50200,"byte_end":50203,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50208,"byte_end":50282,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50287,"byte_end":50355,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51207,"byte_end":51214,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Output) -> (), Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50513,"byte_end":50579,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50584,"byte_end":50587,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50592,"byte_end":50667,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50672,"byte_end":50745,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50750,"byte_end":50819,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50824,"byte_end":50874,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50879,"byte_end":50882,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50887,"byte_end":50901,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50906,"byte_end":50909,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50914,"byte_end":50921,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50926,"byte_end":50967,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":50972,"byte_end":51007,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51012,"byte_end":51015,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51020,"byte_end":51049,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51054,"byte_end":51132,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51137,"byte_end":51173,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51178,"byte_end":51187,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51192,"byte_end":51199,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52752,"byte_end":52764,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51396,"byte_end":51450,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51455,"byte_end":51458,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51463,"byte_end":51538,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51543,"byte_end":51617,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51622,"byte_end":51696,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51701,"byte_end":51752,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51757,"byte_end":51760,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51765,"byte_end":51840,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51845,"byte_end":51915,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51920,"byte_end":51987,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":51992,"byte_end":52067,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52072,"byte_end":52144,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52149,"byte_end":52152,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52157,"byte_end":52221,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52226,"byte_end":52283,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52288,"byte_end":52291,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52296,"byte_end":52310,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52315,"byte_end":52318,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52323,"byte_end":52330,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52335,"byte_end":52376,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52381,"byte_end":52431,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52436,"byte_end":52439,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52444,"byte_end":52478,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52483,"byte_end":52532,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52537,"byte_end":52540,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52545,"byte_end":52594,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52599,"byte_end":52623,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52628,"byte_end":52635,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52640,"byte_end":52690,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52695,"byte_end":52704,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52709,"byte_end":52716,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52721,"byte_end":52744,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54516,"byte_end":54522,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":52994,"byte_end":53069,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53074,"byte_end":53097,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53102,"byte_end":53105,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53110,"byte_end":53184,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53189,"byte_end":53262,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53267,"byte_end":53279,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53284,"byte_end":53287,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53292,"byte_end":53356,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53361,"byte_end":53418,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53423,"byte_end":53426,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53431,"byte_end":53445,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53450,"byte_end":53453,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53458,"byte_end":53465,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53470,"byte_end":53511,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53516,"byte_end":53551,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53556,"byte_end":53559,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53564,"byte_end":53593,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53598,"byte_end":53632,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53637,"byte_end":53671,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53676,"byte_end":53679,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53684,"byte_end":53717,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53722,"byte_end":53755,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53760,"byte_end":53769,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53774,"byte_end":53781,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53786,"byte_end":53789,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53794,"byte_end":53801,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53806,"byte_end":53875,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53880,"byte_end":53955,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53960,"byte_end":53991,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":53996,"byte_end":53999,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54004,"byte_end":54045,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54050,"byte_end":54085,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54090,"byte_end":54126,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54131,"byte_end":54151,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54156,"byte_end":54159,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54164,"byte_end":54193,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54198,"byte_end":54232,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54237,"byte_end":54271,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54276,"byte_end":54321,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54326,"byte_end":54367,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54372,"byte_end":54379,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54384,"byte_end":54417,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54422,"byte_end":54454,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54459,"byte_end":54468,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54473,"byte_end":54480,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54485,"byte_end":54508,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55223,"byte_end":55236,"line_start":505,"line_end":505,"column_start":8,"column_end":21},"name":"remote_handle","qualname":"::future::future::FutureExt::remote_handle","value":"fn remote_handle(Self) -> (Remote<Self>, RemoteHandle<Self::Output>) where\nSelf: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Turn this future into a future that yields `()` on completion and sends\n its output to another future on a separate task.","sig":null,"attributes":[{"value":"/ Turn this future into a future that yields `()` on completion and sends","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54682,"byte_end":54757,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ its output to another future on a separate task.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54762,"byte_end":54814,"line_start":495,"line_end":495,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54819,"byte_end":54822,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This can be used with spawning executors to easily retrieve the result","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54827,"byte_end":54901,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ of a future executing on a separate task or thread.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54906,"byte_end":54961,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54966,"byte_end":54969,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":54974,"byte_end":55038,"line_start":500,"line_end":500,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55043,"byte_end":55100,"line_start":501,"line_end":501,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55105,"byte_end":55132,"line_start":502,"line_end":502,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55192,"byte_end":55215,"line_start":504,"line_end":504,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55684,"byte_end":55689,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55455,"byte_end":55496,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55501,"byte_end":55504,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55509,"byte_end":55584,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55589,"byte_end":55646,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55651,"byte_end":55676,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56149,"byte_end":56160,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55848,"byte_end":55889,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55894,"byte_end":55897,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55902,"byte_end":55961,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55966,"byte_end":55969,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":55974,"byte_end":56049,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56054,"byte_end":56111,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56116,"byte_end":56141,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56450,"byte_end":56460,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56317,"byte_end":56366,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56371,"byte_end":56442,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56745,"byte_end":56756,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56609,"byte_end":56658,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56663,"byte_end":56737,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56987,"byte_end":56997,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where Self: Unpin","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":56910,"byte_end":56979,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58393,"byte_end":58405,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57133,"byte_end":57205,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57210,"byte_end":57273,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57278,"byte_end":57281,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57286,"byte_end":57352,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57357,"byte_end":57360,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57365,"byte_end":57438,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57443,"byte_end":57512,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57517,"byte_end":57587,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57592,"byte_end":57595,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57600,"byte_end":57614,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57619,"byte_end":57622,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57627,"byte_end":57634,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57639,"byte_end":57669,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57674,"byte_end":57724,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57729,"byte_end":57768,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57773,"byte_end":57824,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57829,"byte_end":57832,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57837,"byte_end":57897,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57902,"byte_end":57954,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57959,"byte_end":57966,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57971,"byte_end":57974,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":57979,"byte_end":58048,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58053,"byte_end":58126,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58131,"byte_end":58163,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58168,"byte_end":58171,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58176,"byte_end":58183,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58188,"byte_end":58235,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58240,"byte_end":58279,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58284,"byte_end":58287,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58292,"byte_end":58373,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":58378,"byte_end":58385,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11155},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106407,"byte_end":106417,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":11157}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106666,"byte_end":106679,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoFuture<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106861,"byte_end":106865,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<IntoFuture<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106844,"byte_end":106853,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":11194},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107391,"byte_end":107396,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11195},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107406,"byte_end":107407,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::First::f","value":"Fut1","parent":{"krate":0,"index":11194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11196},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107425,"byte_end":107431,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11197},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107441,"byte_end":107442,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::Second::f","value":"Fut2","parent":{"krate":0,"index":11196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11198},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107460,"byte_end":107465,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11191},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107358,"byte_end":107368,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":11194},{"krate":0,"index":11196},{"krate":0,"index":11198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107737,"byte_end":107750,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":108057,"byte_end":108061,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":108953,"byte_end":108966,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":109271,"byte_end":109280,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":110284,"byte_end":110294,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":110983,"byte_end":110993,"line_start":136,"line_end":136,"column_start":8,"column_end":18},"name":"start_send","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":111335,"byte_end":111345,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":111683,"byte_end":111693,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11241},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112334,"byte_end":112339,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":11238},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11242},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112349,"byte_end":112350,"line_start":11,"line_end":11,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First::f","value":"Fut1","parent":{"krate":0,"index":11241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11243},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112368,"byte_end":112374,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":11238},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11244},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112384,"byte_end":112385,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second::f","value":"Fut2","parent":{"krate":0,"index":11243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11245},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112403,"byte_end":112408,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":11238},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11238},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112298,"byte_end":112311,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":11241},{"krate":0,"index":11243},{"krate":0,"index":11245}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112686,"byte_end":112699,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":113012,"byte_end":113016,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11288},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":85094,"byte_end":85104,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":11291}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11349},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":85352,"byte_end":85365,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":11352}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11409},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":85633,"byte_end":85649,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":11411}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11467},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":85992,"byte_end":86003,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":11470}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":86237,"byte_end":86244,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":11543}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11613},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":86484,"byte_end":86490,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11617}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11686},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":86740,"byte_end":86747,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11689}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11747},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":86955,"byte_end":86961,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":11750}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11808},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":87180,"byte_end":87189,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11811}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11869},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":87461,"byte_end":87471,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11872}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11930},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":87844,"byte_end":87849,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11933}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11991},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88090,"byte_end":88096,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11994}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12053},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88353,"byte_end":88364,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":12057}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12126},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88648,"byte_end":88660,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":12129}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":988},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88950,"byte_end":88962,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88886,"byte_end":88939,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90114,"byte_end":90126,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88980,"byte_end":89056,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89061,"byte_end":89086,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89091,"byte_end":89094,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89099,"byte_end":89169,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89174,"byte_end":89247,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89252,"byte_end":89266,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89271,"byte_end":89274,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89279,"byte_end":89349,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89354,"byte_end":89372,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89377,"byte_end":89380,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89385,"byte_end":89399,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89404,"byte_end":89407,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89412,"byte_end":89419,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89424,"byte_end":89472,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89477,"byte_end":89505,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89510,"byte_end":89562,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89567,"byte_end":89586,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89591,"byte_end":89616,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89621,"byte_end":89624,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89629,"byte_end":89685,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89690,"byte_end":89722,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89727,"byte_end":89737,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89742,"byte_end":89759,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89764,"byte_end":89811,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89816,"byte_end":89852,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89857,"byte_end":89864,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89869,"byte_end":89930,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89935,"byte_end":89938,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89943,"byte_end":89975,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":89980,"byte_end":90013,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90018,"byte_end":90025,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90030,"byte_end":90054,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91722,"byte_end":91728,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90350,"byte_end":90408,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90413,"byte_end":90416,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90421,"byte_end":90496,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90501,"byte_end":90571,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90576,"byte_end":90649,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90654,"byte_end":90683,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90688,"byte_end":90691,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90696,"byte_end":90771,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90776,"byte_end":90851,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90856,"byte_end":90903,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90908,"byte_end":90911,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90916,"byte_end":90991,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":90996,"byte_end":91022,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91027,"byte_end":91030,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91035,"byte_end":91049,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91054,"byte_end":91057,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91062,"byte_end":91069,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91074,"byte_end":91112,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91117,"byte_end":91120,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91125,"byte_end":91166,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91171,"byte_end":91216,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91221,"byte_end":91263,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91268,"byte_end":91304,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91309,"byte_end":91318,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91323,"byte_end":91330,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91335,"byte_end":91338,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91343,"byte_end":91415,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91420,"byte_end":91431,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91436,"byte_end":91439,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91444,"byte_end":91451,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91456,"byte_end":91494,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91499,"byte_end":91502,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91507,"byte_end":91548,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91553,"byte_end":91599,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91604,"byte_end":91646,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91651,"byte_end":91688,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91693,"byte_end":91702,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91707,"byte_end":91714,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93287,"byte_end":93301,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":91919,"byte_end":92036,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92041,"byte_end":92044,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92049,"byte_end":92171,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92176,"byte_end":92226,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92231,"byte_end":92234,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92239,"byte_end":92314,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92319,"byte_end":92394,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92399,"byte_end":92446,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92451,"byte_end":92454,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92459,"byte_end":92534,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92539,"byte_end":92614,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92619,"byte_end":92666,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92671,"byte_end":92674,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92679,"byte_end":92754,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92759,"byte_end":92785,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92790,"byte_end":92793,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92798,"byte_end":92812,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92817,"byte_end":92820,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92825,"byte_end":92832,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92837,"byte_end":92875,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92880,"byte_end":92883,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92888,"byte_end":92929,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92934,"byte_end":92979,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":92984,"byte_end":93045,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93050,"byte_end":93082,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93087,"byte_end":93090,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93095,"byte_end":93141,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93146,"byte_end":93207,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93212,"byte_end":93245,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93250,"byte_end":93259,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93264,"byte_end":93271,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93276,"byte_end":93279,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95058,"byte_end":95065,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error) ->\nE, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93535,"byte_end":93591,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93596,"byte_end":93599,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93604,"byte_end":93678,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93683,"byte_end":93744,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93749,"byte_end":93819,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93824,"byte_end":93899,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93904,"byte_end":93939,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93944,"byte_end":93947,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":93952,"byte_end":94027,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94032,"byte_end":94107,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94112,"byte_end":94159,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94164,"byte_end":94167,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94172,"byte_end":94247,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94252,"byte_end":94278,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94283,"byte_end":94286,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94291,"byte_end":94305,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94310,"byte_end":94313,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94318,"byte_end":94325,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94330,"byte_end":94368,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94373,"byte_end":94376,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94381,"byte_end":94422,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94427,"byte_end":94473,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94478,"byte_end":94521,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94526,"byte_end":94563,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94568,"byte_end":94577,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94582,"byte_end":94589,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94594,"byte_end":94597,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94602,"byte_end":94675,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94680,"byte_end":94694,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94699,"byte_end":94702,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94707,"byte_end":94714,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94719,"byte_end":94757,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94762,"byte_end":94765,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94770,"byte_end":94811,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94816,"byte_end":94861,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94866,"byte_end":94909,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94914,"byte_end":94950,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94955,"byte_end":94964,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94969,"byte_end":94976,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94981,"byte_end":94984,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":94989,"byte_end":95015,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95020,"byte_end":95050,"line_start":307,"line_end":307,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96229,"byte_end":96237,"line_start":341,"line_end":341,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95258,"byte_end":95328,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95333,"byte_end":95382,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95387,"byte_end":95390,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95395,"byte_end":95458,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95463,"byte_end":95531,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95536,"byte_end":95609,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95614,"byte_end":95690,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95695,"byte_end":95740,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95745,"byte_end":95748,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95753,"byte_end":95828,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95833,"byte_end":95859,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95864,"byte_end":95867,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95872,"byte_end":95886,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95891,"byte_end":95894,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95899,"byte_end":95906,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95911,"byte_end":95949,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95954,"byte_end":95957,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":95962,"byte_end":96003,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96008,"byte_end":96059,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96064,"byte_end":96121,"line_start":335,"line_end":335,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96126,"byte_end":96135,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96140,"byte_end":96147,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96152,"byte_end":96155,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96160,"byte_end":96186,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96191,"byte_end":96221,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96533,"byte_end":96540,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized, Self::Ok: Into<U>","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96413,"byte_end":96471,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96476,"byte_end":96525,"line_start":350,"line_end":350,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98095,"byte_end":98103,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96714,"byte_end":96783,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96788,"byte_end":96862,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96867,"byte_end":96870,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96875,"byte_end":96950,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":96955,"byte_end":97025,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97030,"byte_end":97095,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97100,"byte_end":97166,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97171,"byte_end":97205,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97210,"byte_end":97213,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97218,"byte_end":97293,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97298,"byte_end":97324,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97329,"byte_end":97332,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97337,"byte_end":97351,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97356,"byte_end":97359,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97364,"byte_end":97371,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97376,"byte_end":97414,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97419,"byte_end":97422,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97427,"byte_end":97468,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97473,"byte_end":97518,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97523,"byte_end":97598,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97603,"byte_end":97639,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97644,"byte_end":97653,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97658,"byte_end":97665,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97670,"byte_end":97673,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97678,"byte_end":97754,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97759,"byte_end":97770,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97775,"byte_end":97778,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97783,"byte_end":97790,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97795,"byte_end":97833,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97838,"byte_end":97841,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97846,"byte_end":97887,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97892,"byte_end":97938,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":97943,"byte_end":98019,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98024,"byte_end":98061,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98066,"byte_end":98075,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98080,"byte_end":98087,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99724,"byte_end":99731,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98357,"byte_end":98422,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98427,"byte_end":98499,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98504,"byte_end":98507,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98512,"byte_end":98587,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98592,"byte_end":98662,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98667,"byte_end":98732,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98737,"byte_end":98813,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98818,"byte_end":98836,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98841,"byte_end":98844,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98849,"byte_end":98924,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98929,"byte_end":98955,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98960,"byte_end":98963,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98968,"byte_end":98982,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98987,"byte_end":98990,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":98995,"byte_end":99002,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99007,"byte_end":99045,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99050,"byte_end":99053,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99058,"byte_end":99099,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99104,"byte_end":99150,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99155,"byte_end":99230,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99235,"byte_end":99272,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99277,"byte_end":99286,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99291,"byte_end":99298,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99303,"byte_end":99306,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99311,"byte_end":99384,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99389,"byte_end":99403,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99408,"byte_end":99411,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99416,"byte_end":99423,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99428,"byte_end":99466,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99471,"byte_end":99474,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99479,"byte_end":99520,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99525,"byte_end":99570,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99575,"byte_end":99649,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99654,"byte_end":99690,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99695,"byte_end":99704,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99709,"byte_end":99716,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100707,"byte_end":100717,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":99980,"byte_end":100053,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100058,"byte_end":100061,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100066,"byte_end":100141,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100146,"byte_end":100219,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100224,"byte_end":100293,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100298,"byte_end":100351,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100356,"byte_end":100359,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100364,"byte_end":100378,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100383,"byte_end":100386,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100391,"byte_end":100398,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100403,"byte_end":100444,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100449,"byte_end":100487,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100492,"byte_end":100495,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100500,"byte_end":100542,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100547,"byte_end":100628,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100633,"byte_end":100673,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100678,"byte_end":100687,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100692,"byte_end":100699,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101643,"byte_end":101654,"line_start":493,"line_end":493,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100916,"byte_end":100987,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":100992,"byte_end":100995,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101000,"byte_end":101075,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101080,"byte_end":101153,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101158,"byte_end":101227,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101232,"byte_end":101286,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101291,"byte_end":101294,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101299,"byte_end":101313,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101318,"byte_end":101321,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101326,"byte_end":101333,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101338,"byte_end":101379,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101384,"byte_end":101422,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101427,"byte_end":101430,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101435,"byte_end":101478,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101483,"byte_end":101563,"line_start":489,"line_end":489,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101568,"byte_end":101609,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101614,"byte_end":101623,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101628,"byte_end":101635,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102039,"byte_end":102050,"line_start":505,"line_end":505,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101858,"byte_end":101933,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101938,"byte_end":101967,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101972,"byte_end":101975,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":101980,"byte_end":102031,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103229,"byte_end":103247,"line_start":538,"line_end":538,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102285,"byte_end":102360,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102365,"byte_end":102388,"line_start":514,"line_end":514,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102393,"byte_end":102396,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102401,"byte_end":102473,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102478,"byte_end":102551,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102556,"byte_end":102570,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102575,"byte_end":102578,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102583,"byte_end":102653,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102658,"byte_end":102676,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102681,"byte_end":102684,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102689,"byte_end":102703,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102708,"byte_end":102711,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102716,"byte_end":102723,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102728,"byte_end":102769,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102774,"byte_end":102812,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102817,"byte_end":102863,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102868,"byte_end":102871,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102876,"byte_end":102936,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":102941,"byte_end":103020,"line_start":531,"line_end":531,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103025,"byte_end":103028,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103033,"byte_end":103090,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103095,"byte_end":103147,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103152,"byte_end":103195,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103200,"byte_end":103209,"line_start":536,"line_end":536,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103214,"byte_end":103221,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104338,"byte_end":104352,"line_start":570,"line_end":570,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103507,"byte_end":103578,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103583,"byte_end":103620,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103625,"byte_end":103674,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103679,"byte_end":103682,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103687,"byte_end":103756,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103761,"byte_end":103834,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103839,"byte_end":103909,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103914,"byte_end":103932,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103937,"byte_end":103940,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":103945,"byte_end":104013,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104018,"byte_end":104021,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104026,"byte_end":104040,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104045,"byte_end":104048,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104053,"byte_end":104060,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104065,"byte_end":104103,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104108,"byte_end":104111,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104116,"byte_end":104157,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104162,"byte_end":104214,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104219,"byte_end":104266,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104271,"byte_end":104304,"line_start":567,"line_end":567,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104309,"byte_end":104318,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104323,"byte_end":104330,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105607,"byte_end":105618,"line_start":610,"line_end":610,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104906,"byte_end":104959,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":104964,"byte_end":105000,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105005,"byte_end":105008,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105013,"byte_end":105062,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105067,"byte_end":105134,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105139,"byte_end":105152,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105157,"byte_end":105160,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105165,"byte_end":105179,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105184,"byte_end":105187,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105192,"byte_end":105199,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105204,"byte_end":105263,"line_start":599,"line_end":599,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105268,"byte_end":105271,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105276,"byte_end":105295,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105300,"byte_end":105318,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105323,"byte_end":105395,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105400,"byte_end":105432,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105437,"byte_end":105444,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105449,"byte_end":105525,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105530,"byte_end":105533,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105538,"byte_end":105587,"line_start":608,"line_end":608,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105592,"byte_end":105599,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105877,"byte_end":105891,"line_start":619,"line_end":619,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105774,"byte_end":105847,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":105852,"byte_end":105869,"line_start":618,"line_end":618,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":12184},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114060,"byte_end":114064,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":12186}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":113926,"byte_end":113963,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":113981,"byte_end":114048,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114606,"byte_end":114610,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn lazy<F, R>(F) -> Lazy<F> where F: for<'_, '_> FnOnce(&'_ mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114169,"byte_end":114237,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114238,"byte_end":114241,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114242,"byte_end":114305,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114306,"byte_end":114309,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114310,"byte_end":114324,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114325,"byte_end":114328,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114329,"byte_end":114336,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114337,"byte_end":114378,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114379,"byte_end":114403,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114404,"byte_end":114407,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114408,"byte_end":114440,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114441,"byte_end":114468,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114469,"byte_end":114472,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114473,"byte_end":114510,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114511,"byte_end":114535,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114536,"byte_end":114543,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114544,"byte_end":114580,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114581,"byte_end":114590,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114591,"byte_end":114598,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114818,"byte_end":114831,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Lazy<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114988,"byte_end":114992,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"poll","qualname":"<Lazy<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<R>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12190},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115437,"byte_end":115444,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":12192}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115298,"byte_end":115340,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115358,"byte_end":115425,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115532,"byte_end":115545,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116005,"byte_end":116012,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115585,"byte_end":115665,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115666,"byte_end":115679,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115680,"byte_end":115683,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115684,"byte_end":115746,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115747,"byte_end":115750,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115751,"byte_end":115765,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115766,"byte_end":115769,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115770,"byte_end":115783,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115784,"byte_end":115825,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115826,"byte_end":115850,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115851,"byte_end":115854,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115855,"byte_end":115890,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115891,"byte_end":115917,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115918,"byte_end":115937,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115938,"byte_end":115947,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115948,"byte_end":115955,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116164,"byte_end":116168,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<Pending<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116327,"byte_end":116332,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12198},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116784,"byte_end":116790,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":12196},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116749,"byte_end":116779,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":12200},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116804,"byte_end":116807,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::maybe_done::MaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":12198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12201},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116857,"byte_end":116861,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":12196},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116814,"byte_end":116852,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":12203},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116862,"byte_end":116873,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"0","qualname":"::future::maybe_done::MaybeDone::Done::0","value":"<Fut as futures_core::Future>::Output","parent":{"krate":0,"index":12201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12204},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117023,"byte_end":117027,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":12196},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116880,"byte_end":116946,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116951,"byte_end":117018,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":12196},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116720,"byte_end":116729,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"enum MaybeDone<Fut> where Fut: Future {\n    Future(Fut),\n    Done(Fut::Output),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":12198},{"krate":0,"index":12201},{"krate":0,"index":12204}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116598,"byte_end":116635,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116636,"byte_end":116639,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":116640,"byte_end":116693,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117548,"byte_end":117558,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn maybe_done<Fut>(Fut) -> MaybeDone<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117087,"byte_end":117124,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117125,"byte_end":117128,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117129,"byte_end":117143,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117144,"byte_end":117147,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117148,"byte_end":117155,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117156,"byte_end":117197,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117198,"byte_end":117222,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117223,"byte_end":117248,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117249,"byte_end":117252,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117253,"byte_end":117302,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117303,"byte_end":117324,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117325,"byte_end":117377,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117378,"byte_end":117413,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117414,"byte_end":117469,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117470,"byte_end":117522,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117523,"byte_end":117532,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117533,"byte_end":117540,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117999,"byte_end":118009,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117701,"byte_end":117786,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117791,"byte_end":117862,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117867,"byte_end":117940,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117945,"byte_end":117973,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117978,"byte_end":117987,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118357,"byte_end":118368,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118237,"byte_end":118303,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118308,"byte_end":118331,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118336,"byte_end":118345,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118811,"byte_end":118824,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":119044,"byte_end":119048,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12211},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":119993,"byte_end":119999,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":12209},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":119958,"byte_end":119988,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":12213},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120013,"byte_end":120016,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":12211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12214},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120066,"byte_end":120070,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":12209},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120023,"byte_end":120061,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":12216},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120071,"byte_end":120078,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Done::0","value":"<Fut as futures_core::TryFuture>::Ok","parent":{"krate":0,"index":12214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12217},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120278,"byte_end":120282,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":12209},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120085,"byte_end":120154,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120159,"byte_end":120229,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120234,"byte_end":120273,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":12209},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":119923,"byte_end":119935,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"enum TryMaybeDone<Fut> where Fut: TryFuture {\n    Future(Fut),\n    Done(Fut::Ok),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":12211},{"krate":0,"index":12214},{"krate":0,"index":12217}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":119783,"byte_end":119834,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":119835,"byte_end":119838,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":119839,"byte_end":119896,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120396,"byte_end":120410,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn try_maybe_done<Fut>(Fut) -> TryMaybeDone<Fut> where Fut: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120348,"byte_end":120388,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120897,"byte_end":120907,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120588,"byte_end":120673,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120678,"byte_end":120749,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120754,"byte_end":120838,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120843,"byte_end":120871,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120876,"byte_end":120885,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121257,"byte_end":121268,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121134,"byte_end":121203,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121208,"byte_end":121231,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121236,"byte_end":121245,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121716,"byte_end":121729,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryMaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121975,"byte_end":121979,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryMaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12222},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123479,"byte_end":123491,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":12224}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123592,"byte_end":123599,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"default","qualname":"<OptionFuture<F> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123740,"byte_end":123744,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<OptionFuture<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":124028,"byte_end":124041,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OptionFuture<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":124227,"byte_end":124231,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionFuture<T> as std::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124609,"byte_end":124615,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1314}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124489,"byte_end":124529,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124530,"byte_end":124597,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125202,"byte_end":125209,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124666,"byte_end":124737,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124738,"byte_end":124741,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124742,"byte_end":124808,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124809,"byte_end":124812,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124813,"byte_end":124827,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124828,"byte_end":124831,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124832,"byte_end":124839,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124840,"byte_end":124881,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124882,"byte_end":124915,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124916,"byte_end":124955,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124956,"byte_end":124959,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124960,"byte_end":125017,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125018,"byte_end":125061,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125062,"byte_end":125067,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125068,"byte_end":125071,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125072,"byte_end":125113,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125114,"byte_end":125176,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125177,"byte_end":125186,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125187,"byte_end":125194,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125371,"byte_end":125374,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125590,"byte_end":125594,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollFn<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12261},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126143,"byte_end":126156,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":12263}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126337,"byte_end":126341,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollImmediate<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126320,"byte_end":126329,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126839,"byte_end":126852,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":127931,"byte_end":127940,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129564,"byte_end":129578,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"fn poll_immediate<F>(F) -> PollImmediate<F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128376,"byte_end":128449,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128450,"byte_end":128574,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128575,"byte_end":128578,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128579,"byte_end":128592,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128593,"byte_end":128596,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128597,"byte_end":128664,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128665,"byte_end":128668,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128669,"byte_end":128835,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128836,"byte_end":128961,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128962,"byte_end":128965,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128966,"byte_end":128980,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128981,"byte_end":128984,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128985,"byte_end":128992,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":128993,"byte_end":129034,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129035,"byte_end":129059,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129060,"byte_end":129063,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129064,"byte_end":129116,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129117,"byte_end":129150,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129151,"byte_end":129154,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129155,"byte_end":129216,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129217,"byte_end":129247,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129248,"byte_end":129257,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129258,"byte_end":129265,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129266,"byte_end":129269,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129270,"byte_end":129294,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129295,"byte_end":129298,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129299,"byte_end":129306,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129307,"byte_end":129348,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129349,"byte_end":129384,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129385,"byte_end":129432,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129433,"byte_end":129449,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129450,"byte_end":129509,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129510,"byte_end":129538,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129539,"byte_end":129548,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":129549,"byte_end":129556,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12300},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130001,"byte_end":130006,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":129850,"byte_end":129897,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":129922,"byte_end":129989,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130129,"byte_end":130139,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130046,"byte_end":130103,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130108,"byte_end":130117,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130270,"byte_end":130283,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Ready<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130408,"byte_end":130412,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Ready<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130391,"byte_end":130400,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130805,"byte_end":130810,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130559,"byte_end":130619,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130620,"byte_end":130623,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130624,"byte_end":130638,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130639,"byte_end":130642,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130643,"byte_end":130650,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130651,"byte_end":130692,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130693,"byte_end":130717,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130718,"byte_end":130721,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130722,"byte_end":130751,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130752,"byte_end":130779,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130780,"byte_end":130789,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130790,"byte_end":130797,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131145,"byte_end":131147,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130879,"byte_end":130946,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130947,"byte_end":130950,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130951,"byte_end":130965,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130966,"byte_end":130969,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130970,"byte_end":130977,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130978,"byte_end":131019,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131020,"byte_end":131044,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131045,"byte_end":131048,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131049,"byte_end":131087,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131088,"byte_end":131119,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131120,"byte_end":131129,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131130,"byte_end":131137,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131478,"byte_end":131481,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131211,"byte_end":131277,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131278,"byte_end":131281,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131282,"byte_end":131296,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131297,"byte_end":131300,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131301,"byte_end":131308,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131309,"byte_end":131350,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131351,"byte_end":131375,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131376,"byte_end":131379,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131380,"byte_end":131419,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131420,"byte_end":131452,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131453,"byte_end":131462,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":131463,"byte_end":131470,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12402},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":133767,"byte_end":133771,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":12405},{"krate":0,"index":12406}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12447},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":133837,"byte_end":133842,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":12451},{"krate":0,"index":12452},{"krate":0,"index":12453}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12504},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":133914,"byte_end":133919,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":12509},{"krate":0,"index":12510},{"krate":0,"index":12511},{"krate":0,"index":12512}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12573},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":133997,"byte_end":134002,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":12579},{"krate":0,"index":12580},{"krate":0,"index":12581},{"krate":0,"index":12582},{"krate":0,"index":12583}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134617,"byte_end":134621,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134040,"byte_end":134111,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134112,"byte_end":134115,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134116,"byte_end":134187,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134188,"byte_end":134263,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134264,"byte_end":134267,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134268,"byte_end":134337,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134338,"byte_end":134364,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134365,"byte_end":134368,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134369,"byte_end":134383,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134384,"byte_end":134387,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134388,"byte_end":134395,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134396,"byte_end":134437,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134438,"byte_end":134462,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134463,"byte_end":134466,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134467,"byte_end":134491,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134492,"byte_end":134516,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134517,"byte_end":134551,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134552,"byte_end":134555,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134556,"byte_end":134591,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134592,"byte_end":134601,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134602,"byte_end":134609,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135167,"byte_end":135172,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3> where\nFut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134828,"byte_end":134880,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134881,"byte_end":134884,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134885,"byte_end":134899,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134900,"byte_end":134903,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134904,"byte_end":134911,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134912,"byte_end":134953,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134954,"byte_end":134978,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134979,"byte_end":134982,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":134983,"byte_end":135007,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135008,"byte_end":135032,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135033,"byte_end":135057,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135058,"byte_end":135097,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135098,"byte_end":135101,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135102,"byte_end":135141,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135142,"byte_end":135151,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135152,"byte_end":135159,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135834,"byte_end":135839,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135464,"byte_end":135516,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135517,"byte_end":135520,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135521,"byte_end":135535,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135536,"byte_end":135539,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135540,"byte_end":135547,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135548,"byte_end":135589,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135590,"byte_end":135614,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135615,"byte_end":135618,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135619,"byte_end":135643,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135644,"byte_end":135668,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135669,"byte_end":135693,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135694,"byte_end":135718,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135719,"byte_end":135761,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135762,"byte_end":135765,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135766,"byte_end":135808,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135809,"byte_end":135818,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":135819,"byte_end":135826,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136604,"byte_end":136609,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136203,"byte_end":136255,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136256,"byte_end":136259,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136260,"byte_end":136274,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136275,"byte_end":136278,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136279,"byte_end":136286,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136287,"byte_end":136328,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136329,"byte_end":136353,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136354,"byte_end":136357,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136358,"byte_end":136382,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136383,"byte_end":136407,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136408,"byte_end":136432,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136433,"byte_end":136457,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136458,"byte_end":136482,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136483,"byte_end":136528,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136529,"byte_end":136532,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136533,"byte_end":136578,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136579,"byte_end":136588,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join.rs","byte_start":136589,"byte_end":136596,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":137980,"byte_end":137987,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1569}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":137859,"byte_end":137926,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":137927,"byte_end":137968,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138438,"byte_end":138441,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JoinAll<F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140082,"byte_end":140090,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator, I::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138796,"byte_end":138876,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138877,"byte_end":138887,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138888,"byte_end":138891,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138892,"byte_end":138971,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138972,"byte_end":139052,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139053,"byte_end":139071,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139072,"byte_end":139075,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139076,"byte_end":139153,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139154,"byte_end":139211,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139212,"byte_end":139215,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139216,"byte_end":139230,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139231,"byte_end":139234,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139235,"byte_end":139317,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139318,"byte_end":139402,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139403,"byte_end":139487,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139488,"byte_end":139491,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139492,"byte_end":139561,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139562,"byte_end":139565,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139566,"byte_end":139634,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139635,"byte_end":139638,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139639,"byte_end":139716,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139717,"byte_end":139798,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139799,"byte_end":139802,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139803,"byte_end":139817,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139818,"byte_end":139821,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139822,"byte_end":139829,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139830,"byte_end":139871,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139872,"byte_end":139906,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139907,"byte_end":139910,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139911,"byte_end":139948,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139949,"byte_end":139952,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":139953,"byte_end":140000,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140001,"byte_end":140004,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140005,"byte_end":140056,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140057,"byte_end":140066,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140067,"byte_end":140074,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140987,"byte_end":140991,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinAll<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":141926,"byte_end":141935,"line_start":163,"line_end":163,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<JoinAll<F> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12654},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142329,"byte_end":142335,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12657}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142191,"byte_end":142232,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142233,"byte_end":142300,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144599,"byte_end":144605,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142426,"byte_end":142496,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142497,"byte_end":142500,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142501,"byte_end":142579,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142580,"byte_end":142656,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142657,"byte_end":142729,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142730,"byte_end":142733,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142734,"byte_end":142806,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142807,"byte_end":142835,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142836,"byte_end":142839,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142840,"byte_end":142907,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142908,"byte_end":142972,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142973,"byte_end":143023,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143024,"byte_end":143027,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143028,"byte_end":143042,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143043,"byte_end":143046,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143047,"byte_end":143067,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143068,"byte_end":143071,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143072,"byte_end":143079,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143080,"byte_end":143121,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143122,"byte_end":143140,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143141,"byte_end":143157,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143158,"byte_end":143181,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143182,"byte_end":143203,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143204,"byte_end":143210,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143211,"byte_end":143214,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143215,"byte_end":143306,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143307,"byte_end":143332,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143333,"byte_end":143392,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143393,"byte_end":143402,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143403,"byte_end":143409,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143410,"byte_end":143435,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143436,"byte_end":143466,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143467,"byte_end":143473,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143474,"byte_end":143477,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143478,"byte_end":143524,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143525,"byte_end":143547,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143548,"byte_end":143570,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143571,"byte_end":143574,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143575,"byte_end":143637,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143638,"byte_end":143722,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143723,"byte_end":143796,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143797,"byte_end":143881,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143882,"byte_end":143955,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143956,"byte_end":143962,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143963,"byte_end":143966,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143967,"byte_end":143991,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":143992,"byte_end":144001,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144002,"byte_end":144009,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144010,"byte_end":144013,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144014,"byte_end":144040,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144041,"byte_end":144044,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144045,"byte_end":144052,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144053,"byte_end":144112,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144113,"byte_end":144116,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144117,"byte_end":144170,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144171,"byte_end":144174,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144175,"byte_end":144250,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144251,"byte_end":144283,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144284,"byte_end":144316,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144317,"byte_end":144322,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144323,"byte_end":144367,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144368,"byte_end":144394,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144395,"byte_end":144472,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144473,"byte_end":144552,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144553,"byte_end":144566,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144567,"byte_end":144577,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144578,"byte_end":144583,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144584,"byte_end":144591,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144984,"byte_end":144988,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"poll","qualname":"<Select<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":145553,"byte_end":145566,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12662},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":145980,"byte_end":145989,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":12664}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":145840,"byte_end":145883,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":145901,"byte_end":145968,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146769,"byte_end":146779,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146067,"byte_end":146133,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146134,"byte_end":146137,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146138,"byte_end":146218,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146219,"byte_end":146297,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146298,"byte_end":146366,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146367,"byte_end":146370,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146371,"byte_end":146451,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146452,"byte_end":146526,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146527,"byte_end":146530,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146531,"byte_end":146608,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146609,"byte_end":146666,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146667,"byte_end":146670,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146671,"byte_end":146683,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146684,"byte_end":146687,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146688,"byte_end":146761,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147160,"byte_end":147170,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147085,"byte_end":147148,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147331,"byte_end":147335,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectAll<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147944,"byte_end":147953,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12738},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":150916,"byte_end":150923,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":12741},{"krate":0,"index":12742}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12783},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":150993,"byte_end":151001,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":12787},{"krate":0,"index":12788},{"krate":0,"index":12789}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12840},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151077,"byte_end":151085,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":12845},{"krate":0,"index":12846},{"krate":0,"index":12847},{"krate":0,"index":12848}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12909},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151167,"byte_end":151175,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":12915},{"krate":0,"index":12916},{"krate":0,"index":12917},{"krate":0,"index":12918},{"krate":0,"index":12919}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152448,"byte_end":152456,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151213,"byte_end":151286,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151287,"byte_end":151319,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151320,"byte_end":151323,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151324,"byte_end":151395,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151396,"byte_end":151472,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151473,"byte_end":151545,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151546,"byte_end":151562,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151563,"byte_end":151566,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151567,"byte_end":151636,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151637,"byte_end":151663,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151664,"byte_end":151667,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151668,"byte_end":151682,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151683,"byte_end":151686,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151687,"byte_end":151763,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151764,"byte_end":151800,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151801,"byte_end":151804,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151805,"byte_end":151812,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151813,"byte_end":151854,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151855,"byte_end":151879,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151880,"byte_end":151883,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151884,"byte_end":151929,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151930,"byte_end":151975,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":151976,"byte_end":152014,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152015,"byte_end":152018,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152019,"byte_end":152058,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152059,"byte_end":152068,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152069,"byte_end":152076,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152077,"byte_end":152080,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152081,"byte_end":152151,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152152,"byte_end":152167,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152168,"byte_end":152171,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152172,"byte_end":152179,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152180,"byte_end":152221,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152222,"byte_end":152246,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152247,"byte_end":152250,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152251,"byte_end":152296,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152297,"byte_end":152343,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152344,"byte_end":152382,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152383,"byte_end":152386,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152387,"byte_end":152422,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152423,"byte_end":152432,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152433,"byte_end":152440,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153112,"byte_end":153121,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> TryJoin3<Fut1, Fut2, Fut3>\nwhere Fut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>,\nFut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152694,"byte_end":152754,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152755,"byte_end":152758,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152759,"byte_end":152773,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152774,"byte_end":152777,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152778,"byte_end":152785,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152786,"byte_end":152827,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152828,"byte_end":152852,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152853,"byte_end":152856,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152857,"byte_end":152902,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152903,"byte_end":152948,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152949,"byte_end":152994,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":152995,"byte_end":153038,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153039,"byte_end":153042,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153043,"byte_end":153086,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153087,"byte_end":153096,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153097,"byte_end":153104,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153949,"byte_end":153958,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153479,"byte_end":153539,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153540,"byte_end":153543,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153544,"byte_end":153558,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153559,"byte_end":153562,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153563,"byte_end":153570,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153571,"byte_end":153612,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153613,"byte_end":153637,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153638,"byte_end":153641,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153642,"byte_end":153687,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153688,"byte_end":153733,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153734,"byte_end":153779,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153780,"byte_end":153825,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153826,"byte_end":153872,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153873,"byte_end":153876,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153877,"byte_end":153923,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153924,"byte_end":153933,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":153934,"byte_end":153941,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154930,"byte_end":154939,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154408,"byte_end":154468,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154469,"byte_end":154472,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154473,"byte_end":154487,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154488,"byte_end":154491,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154492,"byte_end":154499,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154500,"byte_end":154541,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154542,"byte_end":154566,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154567,"byte_end":154570,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154571,"byte_end":154616,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154617,"byte_end":154662,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154663,"byte_end":154708,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154709,"byte_end":154754,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154755,"byte_end":154800,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154801,"byte_end":154850,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154851,"byte_end":154854,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154855,"byte_end":154904,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154905,"byte_end":154914,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join.rs","byte_start":154915,"byte_end":154922,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":156188,"byte_end":156198,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1847}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":156063,"byte_end":156108,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":156109,"byte_end":156176,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":156670,"byte_end":156673,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryJoinAll<F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158286,"byte_end":158298,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157037,"byte_end":157116,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157117,"byte_end":157147,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157148,"byte_end":157151,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157152,"byte_end":157231,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157232,"byte_end":157312,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157313,"byte_end":157331,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157332,"byte_end":157335,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157336,"byte_end":157414,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157415,"byte_end":157495,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157496,"byte_end":157570,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157571,"byte_end":157594,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157595,"byte_end":157598,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157599,"byte_end":157676,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157677,"byte_end":157734,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157735,"byte_end":157738,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157739,"byte_end":157753,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157754,"byte_end":157757,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157758,"byte_end":157765,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157766,"byte_end":157807,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157808,"byte_end":157854,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157855,"byte_end":157858,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157859,"byte_end":157882,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157883,"byte_end":157917,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157918,"byte_end":157952,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157953,"byte_end":157987,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157988,"byte_end":157994,"line_start":90,"line_end":90,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157995,"byte_end":157998,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":157999,"byte_end":158062,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158063,"byte_end":158066,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158067,"byte_end":158090,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158091,"byte_end":158125,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158126,"byte_end":158161,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158162,"byte_end":158196,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158197,"byte_end":158203,"line_start":98,"line_end":98,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158204,"byte_end":158207,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158208,"byte_end":158260,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158261,"byte_end":158270,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":158271,"byte_end":158278,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":159418,"byte_end":159422,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryJoinAll<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":160951,"byte_end":160960,"line_start":183,"line_end":183,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<TryJoinAll<F> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12990},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161337,"byte_end":161346,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":12993}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161195,"byte_end":161240,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161241,"byte_end":161308,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162931,"byte_end":162941,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161440,"byte_end":161510,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161511,"byte_end":161514,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161515,"byte_end":161593,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161594,"byte_end":161670,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161671,"byte_end":161743,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161744,"byte_end":161747,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161748,"byte_end":161820,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161821,"byte_end":161849,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161850,"byte_end":161853,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161854,"byte_end":161921,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161922,"byte_end":161993,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161994,"byte_end":162044,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162045,"byte_end":162048,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162049,"byte_end":162063,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162064,"byte_end":162067,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162068,"byte_end":162075,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162076,"byte_end":162160,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162161,"byte_end":162164,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162165,"byte_end":162222,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162223,"byte_end":162226,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162227,"byte_end":162309,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162310,"byte_end":162367,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162368,"byte_end":162425,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162426,"byte_end":162452,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162453,"byte_end":162458,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162459,"byte_end":162554,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162555,"byte_end":162578,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162579,"byte_end":162659,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162660,"byte_end":162741,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162742,"byte_end":162812,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162813,"byte_end":162884,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162885,"byte_end":162898,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162899,"byte_end":162909,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162910,"byte_end":162915,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":162916,"byte_end":162923,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":163470,"byte_end":163474,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"poll","qualname":"<TrySelect<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12998},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164572,"byte_end":164580,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":13000}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164433,"byte_end":164475,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164493,"byte_end":164560,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165302,"byte_end":165311,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164657,"byte_end":164751,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164752,"byte_end":164755,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164756,"byte_end":164845,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164846,"byte_end":164930,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164931,"byte_end":165012,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165013,"byte_end":165058,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165059,"byte_end":165062,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165063,"byte_end":165141,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165142,"byte_end":165199,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165200,"byte_end":165203,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165204,"byte_end":165216,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165217,"byte_end":165220,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165221,"byte_end":165294,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165808,"byte_end":165812,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectOk<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":167172,"byte_end":167181,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectOk<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13007},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168039,"byte_end":168043,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":13004},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168006,"byte_end":168034,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":13009},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168057,"byte_end":168058,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"name":"0","qualname":"::future::either::Either::Left::0","value":"A","parent":{"krate":0,"index":13007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13010},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168099,"byte_end":168104,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":13004},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168065,"byte_end":168094,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":13012},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168118,"byte_end":168119,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"name":"0","qualname":"::future::either::Either::Right::0","value":"B","parent":{"krate":0,"index":13010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13004},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167987,"byte_end":167993,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":13007},{"krate":0,"index":13010}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167464,"byte_end":167570,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167571,"byte_end":167574,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167575,"byte_end":167656,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167657,"byte_end":167660,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167661,"byte_end":167672,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167673,"byte_end":167705,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167706,"byte_end":167709,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167710,"byte_end":167751,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167752,"byte_end":167772,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167773,"byte_end":167776,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167777,"byte_end":167800,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167801,"byte_end":167840,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167841,"byte_end":167853,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167854,"byte_end":167894,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167895,"byte_end":167901,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167902,"byte_end":167905,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167906,"byte_end":167936,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167937,"byte_end":167945,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":167946,"byte_end":167953,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168658,"byte_end":168670,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168510,"byte_end":168568,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168573,"byte_end":168576,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168581,"byte_end":168646,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169050,"byte_end":169063,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168901,"byte_end":168959,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168964,"byte_end":168967,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168972,"byte_end":169038,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169351,"byte_end":169361,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169278,"byte_end":169339,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169614,"byte_end":169618,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169939,"byte_end":169952,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170233,"byte_end":170242,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170469,"byte_end":170478,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Either<A, B> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170758,"byte_end":170771,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":171099,"byte_end":171109,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Either<A, B> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":171343,"byte_end":171353,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Either<A, B> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":171575,"byte_end":171585,"line_start":165,"line_end":165,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<A, B> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":171819,"byte_end":171829,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Either<A, B> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":172436,"byte_end":172445,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<Either<A, B> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8]) -> Poll<Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":172764,"byte_end":172782,"line_start":207,"line_end":207,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"<Either<A, B> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":173245,"byte_end":173255,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":173572,"byte_end":173591,"line_start":235,"line_end":235,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":173938,"byte_end":173948,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174193,"byte_end":174203,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"poll_close","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174556,"byte_end":174565,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"<Either<A, B> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<Result<u64>>","parent":{"krate":28,"index":47},"children":[],"decl_id":{"krate":28,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174998,"byte_end":175011,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"<Either<A, B> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":175265,"byte_end":175272,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"consume","qualname":"<Either<A, B> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175965,"byte_end":175974,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175595,"byte_end":175682,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175683,"byte_end":175686,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175687,"byte_end":175763,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175764,"byte_end":175817,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175818,"byte_end":175821,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175822,"byte_end":175899,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/abortable.rs","byte_start":175900,"byte_end":175957,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4569},{"krate":0,"index":4572},{"krate":0,"index":4575},{"krate":0,"index":4578},{"krate":0,"index":4581},{"krate":0,"index":4584},{"krate":0,"index":4587},{"krate":0,"index":4590},{"krate":0,"index":4593},{"krate":0,"index":4596},{"krate":0,"index":4599},{"krate":0,"index":4602},{"krate":0,"index":4605},{"krate":0,"index":4608},{"krate":0,"index":4611},{"krate":0,"index":4614},{"krate":0,"index":4617},{"krate":0,"index":4620},{"krate":0,"index":4623},{"krate":0,"index":4626},{"krate":0,"index":4629},{"krate":0,"index":4632},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4644},{"krate":0,"index":4647},{"krate":0,"index":4650},{"krate":0,"index":4653},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":4665},{"krate":0,"index":4668},{"krate":0,"index":4671},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4678},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":4694},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5943},{"krate":0,"index":5946},{"krate":0,"index":5949},{"krate":0,"index":5952},{"krate":0,"index":5955},{"krate":0,"index":5958},{"krate":0,"index":5961},{"krate":0,"index":5964},{"krate":0,"index":5967},{"krate":0,"index":5970},{"krate":0,"index":5973},{"krate":0,"index":5976},{"krate":0,"index":5979},{"krate":0,"index":5982},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6006},{"krate":0,"index":6007},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6020},{"krate":0,"index":6021},{"krate":0,"index":6023},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6093},{"krate":0,"index":6096},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6137},{"krate":0,"index":6140},{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6183},{"krate":0,"index":6186},{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6279},{"krate":0,"index":6282},{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6322},{"krate":0,"index":6325},{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6357},{"krate":0,"index":6360},{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6418},{"krate":0,"index":6421},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6512},{"krate":0,"index":6515},{"krate":0,"index":6518},{"krate":0,"index":6577},{"krate":0,"index":6578},{"krate":0,"index":6581},{"krate":0,"index":6584},{"krate":0,"index":6693},{"krate":0,"index":6696},{"krate":0,"index":7102},{"krate":0,"index":7105},{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7231},{"krate":0,"index":7234},{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7254},{"krate":0,"index":7257},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7263},{"krate":0,"index":7266}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176226,"byte_end":176251,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176252,"byte_end":176255,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176256,"byte_end":176281,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176282,"byte_end":176285,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176286,"byte_end":176359,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176360,"byte_end":176385,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176386,"byte_end":176465,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176466,"byte_end":176503,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176504,"byte_end":176577,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":176578,"byte_end":176608,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":13021},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238295,"byte_end":238300,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":13024},{"krate":0,"index":13025}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238811,"byte_end":238824,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chain<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":239048,"byte_end":239057,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":239447,"byte_end":239456,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chain<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13070},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240425,"byte_end":240432,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":13073},{"krate":0,"index":13074}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240873,"byte_end":240886,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Collect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":241075,"byte_end":241079,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Collect<St, C> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<C>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13119},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":241843,"byte_end":241848,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":13123},{"krate":0,"index":13124},{"krate":0,"index":13125}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242497,"byte_end":242510,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unzip<St, FromA, FromB> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242782,"byte_end":242786,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"poll","qualname":"<Unzip<St, FromA, FromB> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<(FromA, FromB)>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13181},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":243636,"byte_end":243642,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":13183},{"krate":0,"index":13184}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":244121,"byte_end":244125,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<Concat<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":244811,"byte_end":244824,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Concat<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13221},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245314,"byte_end":245319,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":13223},{"krate":0,"index":13224}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245460,"byte_end":245463,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Count<St> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245797,"byte_end":245810,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Count<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245946,"byte_end":245950,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<Count<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13258},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":246629,"byte_end":246634,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":13260},{"krate":0,"index":13261}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":246949,"byte_end":246958,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":247325,"byte_end":247334,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Cycle<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":247676,"byte_end":247689,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Cycle<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13298},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248281,"byte_end":248290,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":13300},{"krate":0,"index":13301}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248598,"byte_end":248611,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Enumerate<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248761,"byte_end":248770,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":249170,"byte_end":249179,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Enumerate<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13346},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":249922,"byte_end":249928,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":13350},{"krate":0,"index":13351},{"krate":0,"index":13352},{"krate":0,"index":13353}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250262,"byte_end":250265,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filter<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":251088,"byte_end":251101,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Filter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":251463,"byte_end":251472,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":252202,"byte_end":252211,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13415},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":253322,"byte_end":253331,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":13419},{"krate":0,"index":13420},{"krate":0,"index":13421}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":253559,"byte_end":253562,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterMap<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":254206,"byte_end":254219,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":254488,"byte_end":254497,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":255285,"byte_end":255294,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13480},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256337,"byte_end":256344,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":13483},{"krate":0,"index":13484}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256706,"byte_end":256719,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<St, St::Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256945,"byte_end":256954,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<St, St::Item> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":182132,"byte_end":182139,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":13541}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13600},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258161,"byte_end":258165,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":13605},{"krate":0,"index":13606},{"krate":0,"index":13607},{"krate":0,"index":13608}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258441,"byte_end":258444,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fold<St, Fut, T, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":259085,"byte_end":259098,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":259346,"byte_end":259350,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13669},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":260622,"byte_end":260625,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":13673},{"krate":0,"index":13674},{"krate":0,"index":13675},{"krate":0,"index":13676}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":260875,"byte_end":260878,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Any<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261502,"byte_end":261515,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Any<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261759,"byte_end":261763,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Any<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13730},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263198,"byte_end":263201,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":13734},{"krate":0,"index":13735},{"krate":0,"index":13736},{"krate":0,"index":13737}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263451,"byte_end":263454,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<All<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":264077,"byte_end":264090,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<All<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":264334,"byte_end":264338,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<All<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13791},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":265867,"byte_end":265874,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":13795},{"krate":0,"index":13796},{"krate":0,"index":13797}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266353,"byte_end":266366,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Forward<St, Si, Item> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266596,"byte_end":266600,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Forward<St, Si, Item> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13856},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":182853,"byte_end":182860,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":13859}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13914},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268110,"byte_end":268117,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":13918},{"krate":0,"index":13919},{"krate":0,"index":13920}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268342,"byte_end":268345,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEach<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268921,"byte_end":268934,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEach<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":269185,"byte_end":269189,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13971},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270074,"byte_end":270078,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":13973},{"krate":0,"index":13974}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270530,"byte_end":270537,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270261,"byte_end":270323,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270328,"byte_end":270331,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270336,"byte_end":270404,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270409,"byte_end":270475,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270480,"byte_end":270518,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270676,"byte_end":270689,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270804,"byte_end":270813,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":271157,"byte_end":271166,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Fuse<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":271896,"byte_end":271908,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":14021}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":271726,"byte_end":271799,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":271817,"byte_end":271884,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272471,"byte_end":272478,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272079,"byte_end":272152,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272157,"byte_end":272174,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272179,"byte_end":272182,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272187,"byte_end":272268,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272273,"byte_end":272355,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272360,"byte_end":272439,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272444,"byte_end":272459,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273089,"byte_end":273096,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272543,"byte_end":272610,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272615,"byte_end":272646,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272651,"byte_end":272654,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272659,"byte_end":272732,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272737,"byte_end":272792,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272797,"byte_end":272800,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272805,"byte_end":272886,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272891,"byte_end":272973,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":272978,"byte_end":273057,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273062,"byte_end":273077,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273722,"byte_end":273733,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273169,"byte_end":273243,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273248,"byte_end":273279,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273284,"byte_end":273287,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273292,"byte_end":273365,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273370,"byte_end":273425,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273430,"byte_end":273433,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273438,"byte_end":273519,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273524,"byte_end":273606,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273611,"byte_end":273690,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273695,"byte_end":273710,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274366,"byte_end":274376,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273846,"byte_end":273908,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273913,"byte_end":273916,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273921,"byte_end":273993,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":273998,"byte_end":274069,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274074,"byte_end":274077,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274082,"byte_end":274163,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274168,"byte_end":274250,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274255,"byte_end":274334,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274339,"byte_end":274354,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274495,"byte_end":274508,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<StreamFuture<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274670,"byte_end":274674,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<StreamFuture<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14028},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":183479,"byte_end":183486,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":14031}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14103},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275400,"byte_end":275403,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":14106},{"krate":0,"index":14107}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275544,"byte_end":275547,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<St, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275934,"byte_end":275947,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":276128,"byte_end":276137,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<St, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":276380,"byte_end":276389,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Map<St, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14160},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":183847,"byte_end":183854,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":14164}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14249},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277063,"byte_end":277067,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":14252}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":276907,"byte_end":276966,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":276984,"byte_end":277051,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277380,"byte_end":277393,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Next as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277560,"byte_end":277564,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Next as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14257},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278075,"byte_end":278089,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":14260}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":277891,"byte_end":277966,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":277967,"byte_end":277978,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":277996,"byte_end":278063,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278353,"byte_end":278366,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectNextSome as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278540,"byte_end":278544,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectNextSome as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14265},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":279680,"byte_end":279688,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":14267},{"krate":0,"index":14268}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280121,"byte_end":280125,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":279973,"byte_end":280039,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280044,"byte_end":280109,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280450,"byte_end":280459,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280212,"byte_end":280274,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280279,"byte_end":280282,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280287,"byte_end":280360,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280365,"byte_end":280438,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281774,"byte_end":281782,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280895,"byte_end":280969,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":280974,"byte_end":281039,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281044,"byte_end":281047,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281052,"byte_end":281066,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281071,"byte_end":281074,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281079,"byte_end":281086,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281091,"byte_end":281132,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281137,"byte_end":281180,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281185,"byte_end":281210,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281215,"byte_end":281218,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281223,"byte_end":281279,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281284,"byte_end":281305,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281310,"byte_end":281313,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281318,"byte_end":281381,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281386,"byte_end":281440,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281445,"byte_end":281448,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281453,"byte_end":281529,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281534,"byte_end":281589,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281594,"byte_end":281614,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281619,"byte_end":281638,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281643,"byte_end":281652,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281657,"byte_end":281662,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281667,"byte_end":281670,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281675,"byte_end":281736,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281741,"byte_end":281750,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281755,"byte_end":281762,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281957,"byte_end":281970,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"fn poll_peek_mut(Pin<&mut Self>, &mut Context) -> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":281875,"byte_end":281945,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283961,"byte_end":283968,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: for<'_> FnOnce(&'_ St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282433,"byte_end":282506,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282511,"byte_end":282545,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282550,"byte_end":282553,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282558,"byte_end":282633,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282638,"byte_end":282678,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282683,"byte_end":282686,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282691,"byte_end":282705,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282710,"byte_end":282713,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282718,"byte_end":282758,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282763,"byte_end":282766,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282771,"byte_end":282778,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282783,"byte_end":282824,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282829,"byte_end":282872,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282877,"byte_end":282902,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282907,"byte_end":282910,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282915,"byte_end":282962,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282967,"byte_end":282988,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":282993,"byte_end":283046,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283051,"byte_end":283119,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283124,"byte_end":283197,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283202,"byte_end":283267,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283272,"byte_end":283356,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283361,"byte_end":283406,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283411,"byte_end":283420,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283425,"byte_end":283432,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283437,"byte_end":283440,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283445,"byte_end":283481,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283486,"byte_end":283489,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283494,"byte_end":283501,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283506,"byte_end":283547,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283552,"byte_end":283595,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283600,"byte_end":283625,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283630,"byte_end":283633,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283638,"byte_end":283686,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283691,"byte_end":283712,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283717,"byte_end":283756,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283761,"byte_end":283826,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283831,"byte_end":283872,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283877,"byte_end":283923,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283928,"byte_end":283937,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":283942,"byte_end":283949,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284992,"byte_end":285002,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where T: ?Sized,\nSt::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284134,"byte_end":284207,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284212,"byte_end":284236,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284241,"byte_end":284244,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284249,"byte_end":284262,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284267,"byte_end":284270,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284275,"byte_end":284315,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284320,"byte_end":284323,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284328,"byte_end":284335,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284340,"byte_end":284381,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284386,"byte_end":284429,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284434,"byte_end":284459,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284464,"byte_end":284467,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284472,"byte_end":284519,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284524,"byte_end":284545,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284550,"byte_end":284603,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284608,"byte_end":284670,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284675,"byte_end":284748,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284753,"byte_end":284812,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284817,"byte_end":284904,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284909,"byte_end":284954,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284959,"byte_end":284968,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":284973,"byte_end":284980,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285331,"byte_end":285344,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peekable<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285506,"byte_end":285515,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Peekable<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285776,"byte_end":285785,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Peekable<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14313},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286520,"byte_end":286524,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":14316}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286709,"byte_end":286712,"line_start":242,"line_end":242,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Peek as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286897,"byte_end":286910,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peek as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287075,"byte_end":287079,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"poll","qualname":"<Peek as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14354},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287582,"byte_end":287589,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":14357}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287777,"byte_end":287780,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PeekMut as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287971,"byte_end":287984,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PeekMut as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288156,"byte_end":288160,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"poll","qualname":"<PeekMut as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14395},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288672,"byte_end":288678,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":14399}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288879,"byte_end":288882,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIf as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":289251,"byte_end":289264,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIf as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":289563,"byte_end":289567,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIf as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14444},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":290542,"byte_end":290550,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":14448}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":290796,"byte_end":290799,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIfEq as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291113,"byte_end":291126,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIfEq as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291342,"byte_end":291346,"line_start":413,"line_end":413,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIfEq as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14493},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292167,"byte_end":292171,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":14495},{"krate":0,"index":14496}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292478,"byte_end":292491,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Skip<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292627,"byte_end":292636,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":293029,"byte_end":293038,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Skip<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14541},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":293934,"byte_end":293943,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":14545},{"krate":0,"index":14546},{"krate":0,"index":14547},{"krate":0,"index":14548},{"krate":0,"index":14549}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294296,"byte_end":294299,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SkipWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":295101,"byte_end":295114,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":295380,"byte_end":295389,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":296250,"byte_end":296259,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14614},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":297447,"byte_end":297451,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":14616},{"krate":0,"index":14617}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":297789,"byte_end":297798,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":298244,"byte_end":298253,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Take<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":298743,"byte_end":298756,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Take<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14662},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":299487,"byte_end":299496,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":14666},{"krate":0,"index":14667},{"krate":0,"index":14668},{"krate":0,"index":14669},{"krate":0,"index":14670}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":299838,"byte_end":299841,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":300654,"byte_end":300663,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":301561,"byte_end":301570,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":302160,"byte_end":302173,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":302976,"byte_end":302985,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":14738},{"krate":0,"index":14739},{"krate":0,"index":14740},{"krate":0,"index":14741}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":303550,"byte_end":303553,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeUntil<St, Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304269,"byte_end":304280,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":303969,"byte_end":304023,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304028,"byte_end":304122,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304127,"byte_end":304190,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304195,"byte_end":304257,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305564,"byte_end":305575,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304417,"byte_end":304482,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304487,"byte_end":304544,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304549,"byte_end":304552,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304557,"byte_end":304622,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304627,"byte_end":304687,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304692,"byte_end":304695,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304700,"byte_end":304768,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304773,"byte_end":304816,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304821,"byte_end":304824,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304829,"byte_end":304843,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304848,"byte_end":304851,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304856,"byte_end":304863,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304868,"byte_end":304909,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304914,"byte_end":304938,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304943,"byte_end":304986,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":304991,"byte_end":305019,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305024,"byte_end":305027,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305032,"byte_end":305070,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305075,"byte_end":305078,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305083,"byte_end":305101,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305106,"byte_end":305148,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305153,"byte_end":305168,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305173,"byte_end":305192,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305197,"byte_end":305222,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305227,"byte_end":305243,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305248,"byte_end":305281,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305286,"byte_end":305295,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305300,"byte_end":305307,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305312,"byte_end":305315,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305320,"byte_end":305369,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305374,"byte_end":305428,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305433,"byte_end":305436,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305441,"byte_end":305488,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305493,"byte_end":305526,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305531,"byte_end":305540,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305545,"byte_end":305552,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305751,"byte_end":305761,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305654,"byte_end":305715,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305720,"byte_end":305739,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305948,"byte_end":305957,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":306704,"byte_end":306713,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":306962,"byte_end":306975,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeUntil<St, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14796},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":307693,"byte_end":307697,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":14800},{"krate":0,"index":14801},{"krate":0,"index":14802}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":307919,"byte_end":307922,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Then<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308452,"byte_end":308465,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Then<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308707,"byte_end":308716,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Then<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":309274,"byte_end":309283,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Then<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14861},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310237,"byte_end":310240,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":14864},{"krate":0,"index":14865},{"krate":0,"index":14866},{"krate":0,"index":14867}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310758,"byte_end":310765,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310650,"byte_end":310724,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310729,"byte_end":310746,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311121,"byte_end":311128,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310859,"byte_end":310927,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310932,"byte_end":310963,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310968,"byte_end":310971,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310976,"byte_end":311049,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311054,"byte_end":311109,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311503,"byte_end":311514,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311234,"byte_end":311309,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311314,"byte_end":311345,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311350,"byte_end":311353,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311358,"byte_end":311431,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311436,"byte_end":311491,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311920,"byte_end":311930,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311684,"byte_end":311747,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311752,"byte_end":311755,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311760,"byte_end":311832,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":311837,"byte_end":311908,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":312119,"byte_end":312132,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Zip<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":312358,"byte_end":312367,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":313322,"byte_end":313331,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Zip<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14918},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":314759,"byte_end":314765,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":14920},{"krate":0,"index":14921},{"krate":0,"index":14922}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":315518,"byte_end":315527,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":316664,"byte_end":316673,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":317106,"byte_end":317119,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14970},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":317866,"byte_end":317877,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":14972},{"krate":0,"index":14973},{"krate":0,"index":14974}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":318484,"byte_end":318493,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadyChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":320183,"byte_end":320192,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ReadyChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":320630,"byte_end":320643,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ReadyChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15022},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":321421,"byte_end":321425,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":15027},{"krate":0,"index":15028},{"krate":0,"index":15029}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3954},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":321744,"byte_end":321747,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scan<St, S, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322785,"byte_end":322794,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<B>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":323603,"byte_end":323612,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":324001,"byte_end":324014,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Scan<St, S, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15095},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":324849,"byte_end":324864,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":15097},{"krate":0,"index":15098},{"krate":0,"index":15099}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325118,"byte_end":325121,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufferUnordered<St> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325923,"byte_end":325932,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":326889,"byte_end":326898,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<BufferUnordered<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":327345,"byte_end":327358,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<BufferUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15144},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":328175,"byte_end":328183,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":15146},{"krate":0,"index":15147},{"krate":0,"index":15148}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":328476,"byte_end":328479,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Buffered<St> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":329153,"byte_end":329162,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Buffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4105},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":330105,"byte_end":330114,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Buffered<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15232},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":340969,"byte_end":340985,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":15234},{"krate":0,"index":15235},{"krate":0,"index":15236},{"krate":0,"index":15237},{"krate":0,"index":15238},{"krate":0,"index":15239},{"krate":0,"index":15240}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":341447,"byte_end":341450,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FlattenUnordered<St> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":343171,"byte_end":343184,"line_start":383,"line_end":383,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FlattenUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4256},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":343427,"byte_end":343436,"line_start":395,"line_end":395,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FlattenUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15301},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":186666,"byte_end":186682,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":15305}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15390},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":348538,"byte_end":348555,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":15394},{"krate":0,"index":15395},{"krate":0,"index":15396},{"krate":0,"index":15397}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":348831,"byte_end":348834,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEachConcurrent<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349680,"byte_end":349693,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349950,"byte_end":349954,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15451},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352000,"byte_end":352011,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":351837,"byte_end":351874,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":351892,"byte_end":351940,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352338,"byte_end":352345,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"fn reunite<Item>(Self, SplitSink<S, Item>) -> Result<S, ReuniteError<S, Item>>\nwhere S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352101,"byte_end":352169,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352174,"byte_end":352248,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352253,"byte_end":352326,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352574,"byte_end":352583,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SplitStream<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15458},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353025,"byte_end":353034,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":15461},{"krate":0,"index":15462}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352866,"byte_end":352901,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352919,"byte_end":352965,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353437,"byte_end":353444,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353200,"byte_end":353268,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353273,"byte_end":353347,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353352,"byte_end":353425,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":354435,"byte_end":354445,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<SplitSink<S, Item> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), S::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":354725,"byte_end":354735,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"start_send","qualname":"<SplitSink<S, Item> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), S::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":354861,"byte_end":354871,"line_start":104,"line_end":104,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<SplitSink<S, Item> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), S::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355176,"byte_end":355186,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<SplitSink<S, Item> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), S::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355898,"byte_end":355910,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355699,"byte_end":355777,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355778,"byte_end":355838,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4393},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355920,"byte_end":355942,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":4389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4394},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355944,"byte_end":355962,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":4389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":356026,"byte_end":356029,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T, Item> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4402},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":356214,"byte_end":356217,"line_start":138,"line_end":138,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T, Item> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15467},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":356880,"byte_end":356891,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":15469},{"krate":0,"index":15470}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4456},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":357285,"byte_end":357294,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<CatchUnwind<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":357842,"byte_end":357851,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<CatchUnwind<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":358092,"byte_end":358105,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<CatchUnwind<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4468},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188000,"byte_end":188009,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4487},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4511},{"krate":0,"index":4515},{"krate":0,"index":4520},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":4528},{"krate":0,"index":4531},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4542},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4548},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4555},{"krate":0,"index":4557},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4564}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187889,"byte_end":187963,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187964,"byte_end":187989,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188919,"byte_end":188923,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188024,"byte_end":188090,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188095,"byte_end":188098,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188103,"byte_end":188171,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188176,"byte_end":188251,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188256,"byte_end":188331,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188336,"byte_end":188390,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188395,"byte_end":188470,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188475,"byte_end":188485,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188490,"byte_end":188493,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188498,"byte_end":188512,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188517,"byte_end":188520,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188525,"byte_end":188532,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188537,"byte_end":188578,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188583,"byte_end":188626,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188631,"byte_end":188634,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188639,"byte_end":188680,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188685,"byte_end":188688,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188693,"byte_end":188738,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188743,"byte_end":188788,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188793,"byte_end":188838,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188843,"byte_end":188885,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188890,"byte_end":188899,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188904,"byte_end":188911,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4470},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190162,"byte_end":190173,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189065,"byte_end":189137,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189142,"byte_end":189203,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189208,"byte_end":189211,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189216,"byte_end":189291,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189296,"byte_end":189350,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189355,"byte_end":189358,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189363,"byte_end":189436,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189441,"byte_end":189503,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189508,"byte_end":189583,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189588,"byte_end":189642,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189647,"byte_end":189722,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189727,"byte_end":189737,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189742,"byte_end":189745,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189750,"byte_end":189764,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189769,"byte_end":189772,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189777,"byte_end":189784,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189789,"byte_end":189830,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189835,"byte_end":189878,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189883,"byte_end":189886,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189891,"byte_end":189928,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189933,"byte_end":189936,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189941,"byte_end":189993,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":189998,"byte_end":190028,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190033,"byte_end":190036,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190041,"byte_end":190093,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190098,"byte_end":190128,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190133,"byte_end":190142,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190147,"byte_end":190154,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191174,"byte_end":191177,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190338,"byte_end":190413,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190418,"byte_end":190441,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190446,"byte_end":190449,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190454,"byte_end":190526,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190531,"byte_end":190595,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190600,"byte_end":190637,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190642,"byte_end":190645,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190650,"byte_end":190726,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190731,"byte_end":190802,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190807,"byte_end":190828,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190833,"byte_end":190836,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190841,"byte_end":190855,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190860,"byte_end":190863,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190868,"byte_end":190875,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190880,"byte_end":190921,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190926,"byte_end":190969,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190974,"byte_end":190977,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":190982,"byte_end":191019,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191024,"byte_end":191063,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191068,"byte_end":191071,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191076,"byte_end":191140,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191145,"byte_end":191154,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191159,"byte_end":191166,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192737,"byte_end":192746,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191344,"byte_end":191415,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191420,"byte_end":191439,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191444,"byte_end":191447,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191452,"byte_end":191517,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191522,"byte_end":191591,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191596,"byte_end":191607,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191612,"byte_end":191615,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191620,"byte_end":191695,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191700,"byte_end":191782,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191787,"byte_end":191805,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191810,"byte_end":191813,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191818,"byte_end":191841,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191846,"byte_end":191849,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191854,"byte_end":191929,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":191934,"byte_end":192021,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192026,"byte_end":192082,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192087,"byte_end":192090,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192095,"byte_end":192107,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192112,"byte_end":192115,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192120,"byte_end":192189,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192194,"byte_end":192219,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192224,"byte_end":192227,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192232,"byte_end":192246,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192251,"byte_end":192254,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192259,"byte_end":192266,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192271,"byte_end":192312,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192317,"byte_end":192360,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192365,"byte_end":192368,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192373,"byte_end":192424,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192429,"byte_end":192432,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192437,"byte_end":192477,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192482,"byte_end":192485,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192490,"byte_end":192542,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192547,"byte_end":192599,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192604,"byte_end":192656,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192661,"byte_end":192703,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192708,"byte_end":192717,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192722,"byte_end":192729,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193977,"byte_end":193983,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192890,"byte_end":192962,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192967,"byte_end":192994,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":192999,"byte_end":193002,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193007,"byte_end":193082,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193087,"byte_end":193158,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193163,"byte_end":193235,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193240,"byte_end":193314,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193319,"byte_end":193377,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193382,"byte_end":193385,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193390,"byte_end":193466,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193471,"byte_end":193545,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193550,"byte_end":193571,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193576,"byte_end":193579,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193584,"byte_end":193598,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193603,"byte_end":193606,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193611,"byte_end":193618,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193623,"byte_end":193664,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193669,"byte_end":193693,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193698,"byte_end":193741,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193746,"byte_end":193749,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193754,"byte_end":193792,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193797,"byte_end":193859,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193864,"byte_end":193867,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193872,"byte_end":193943,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193948,"byte_end":193957,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":193962,"byte_end":193969,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195310,"byte_end":195320,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194211,"byte_end":194286,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194291,"byte_end":194367,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194372,"byte_end":194375,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194380,"byte_end":194455,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194460,"byte_end":194535,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194540,"byte_end":194616,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194621,"byte_end":194686,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194691,"byte_end":194694,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194699,"byte_end":194775,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194780,"byte_end":194854,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194859,"byte_end":194884,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194889,"byte_end":194892,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194897,"byte_end":194911,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194916,"byte_end":194923,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194928,"byte_end":194969,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":194974,"byte_end":195017,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195022,"byte_end":195025,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195030,"byte_end":195068,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195073,"byte_end":195124,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195129,"byte_end":195180,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195185,"byte_end":195192,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195197,"byte_end":195200,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195205,"byte_end":195276,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195281,"byte_end":195290,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195295,"byte_end":195302,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196349,"byte_end":196353,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195552,"byte_end":195625,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195630,"byte_end":195658,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195663,"byte_end":195666,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195671,"byte_end":195745,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195750,"byte_end":195817,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195822,"byte_end":195867,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195872,"byte_end":195875,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195880,"byte_end":195956,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195961,"byte_end":195987,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":195992,"byte_end":195995,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196000,"byte_end":196014,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196019,"byte_end":196022,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196027,"byte_end":196034,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196039,"byte_end":196080,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196085,"byte_end":196128,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196133,"byte_end":196136,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196141,"byte_end":196178,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196183,"byte_end":196238,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196243,"byte_end":196246,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196251,"byte_end":196315,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196320,"byte_end":196329,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196334,"byte_end":196341,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197287,"byte_end":197294,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn collect<C>(Self) -> Collect<Self, C> where C: Default + Extend<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196562,"byte_end":196616,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196621,"byte_end":196676,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196681,"byte_end":196684,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196689,"byte_end":196757,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196762,"byte_end":196765,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196770,"byte_end":196784,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196789,"byte_end":196792,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196797,"byte_end":196804,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196809,"byte_end":196850,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196855,"byte_end":196886,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196891,"byte_end":196926,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196931,"byte_end":196951,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196956,"byte_end":196959,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":196964,"byte_end":197001,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197006,"byte_end":197009,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197014,"byte_end":197041,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197046,"byte_end":197070,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197075,"byte_end":197117,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197122,"byte_end":197131,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197136,"byte_end":197143,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197148,"byte_end":197151,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197156,"byte_end":197204,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197209,"byte_end":197253,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197258,"byte_end":197267,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197272,"byte_end":197279,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198413,"byte_end":198418,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197452,"byte_end":197503,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197508,"byte_end":197543,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197548,"byte_end":197551,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197556,"byte_end":197610,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197615,"byte_end":197672,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197677,"byte_end":197713,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197718,"byte_end":197721,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197726,"byte_end":197794,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197799,"byte_end":197802,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197807,"byte_end":197821,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197826,"byte_end":197829,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197834,"byte_end":197841,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197846,"byte_end":197887,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197892,"byte_end":197923,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197928,"byte_end":197963,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197968,"byte_end":197988,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":197993,"byte_end":197996,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198001,"byte_end":198038,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198043,"byte_end":198046,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198051,"byte_end":198078,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198083,"byte_end":198126,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198131,"byte_end":198174,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198179,"byte_end":198222,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198227,"byte_end":198234,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198239,"byte_end":198242,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198247,"byte_end":198301,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198306,"byte_end":198340,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198345,"byte_end":198379,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198384,"byte_end":198393,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198398,"byte_end":198405,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199714,"byte_end":199720,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198679,"byte_end":198741,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198746,"byte_end":198810,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198815,"byte_end":198818,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198823,"byte_end":198887,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198892,"byte_end":198957,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":198962,"byte_end":199008,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199013,"byte_end":199016,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199021,"byte_end":199070,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199075,"byte_end":199115,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199120,"byte_end":199123,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199128,"byte_end":199142,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199147,"byte_end":199150,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199155,"byte_end":199162,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199167,"byte_end":199208,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199213,"byte_end":199244,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199249,"byte_end":199284,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199289,"byte_end":199309,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199314,"byte_end":199317,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199322,"byte_end":199359,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199364,"byte_end":199367,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199372,"byte_end":199399,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199404,"byte_end":199435,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199440,"byte_end":199466,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199471,"byte_end":199537,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199542,"byte_end":199551,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199556,"byte_end":199563,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199568,"byte_end":199571,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199576,"byte_end":199611,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199616,"byte_end":199619,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199624,"byte_end":199680,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199685,"byte_end":199694,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199699,"byte_end":199706,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200740,"byte_end":200745,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":199950,"byte_end":200016,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200021,"byte_end":200024,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200029,"byte_end":200052,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200057,"byte_end":200060,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200065,"byte_end":200141,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200146,"byte_end":200221,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200226,"byte_end":200303,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200308,"byte_end":200311,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200316,"byte_end":200328,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200333,"byte_end":200336,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200341,"byte_end":200415,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200420,"byte_end":200433,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200438,"byte_end":200441,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200446,"byte_end":200460,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200465,"byte_end":200468,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200473,"byte_end":200480,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200485,"byte_end":200526,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200531,"byte_end":200574,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200579,"byte_end":200582,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200587,"byte_end":200625,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200630,"byte_end":200667,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200672,"byte_end":200675,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200680,"byte_end":200706,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200711,"byte_end":200720,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200725,"byte_end":200732,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4494},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201701,"byte_end":201706,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200867,"byte_end":200898,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200903,"byte_end":200906,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200911,"byte_end":200978,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":200983,"byte_end":201055,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201060,"byte_end":201117,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201122,"byte_end":201125,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201130,"byte_end":201144,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201149,"byte_end":201152,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201157,"byte_end":201164,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201169,"byte_end":201210,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201215,"byte_end":201258,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201263,"byte_end":201285,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201290,"byte_end":201337,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201342,"byte_end":201345,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201350,"byte_end":201391,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201396,"byte_end":201437,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201442,"byte_end":201483,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201488,"byte_end":201529,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201534,"byte_end":201575,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201580,"byte_end":201621,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201626,"byte_end":201667,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201672,"byte_end":201681,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201686,"byte_end":201693,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202656,"byte_end":202660,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201841,"byte_end":201908,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201913,"byte_end":201965,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201970,"byte_end":201973,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":201978,"byte_end":202048,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202053,"byte_end":202129,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202134,"byte_end":202210,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202215,"byte_end":202285,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202290,"byte_end":202316,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202321,"byte_end":202324,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202329,"byte_end":202343,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202348,"byte_end":202351,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202356,"byte_end":202363,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202368,"byte_end":202409,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202414,"byte_end":202457,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202462,"byte_end":202465,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202470,"byte_end":202513,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202518,"byte_end":202587,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202592,"byte_end":202622,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202627,"byte_end":202636,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202641,"byte_end":202648,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4499},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203361,"byte_end":203364,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":202895,"byte_end":203008,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203013,"byte_end":203016,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203021,"byte_end":203035,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203040,"byte_end":203043,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203048,"byte_end":203055,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203060,"byte_end":203101,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203106,"byte_end":203149,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203154,"byte_end":203157,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203162,"byte_end":203206,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203211,"byte_end":203280,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203285,"byte_end":203327,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203332,"byte_end":203341,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203346,"byte_end":203353,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4502},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204051,"byte_end":204054,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203579,"byte_end":203692,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203697,"byte_end":203700,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203705,"byte_end":203719,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203724,"byte_end":203727,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203732,"byte_end":203739,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203744,"byte_end":203785,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203790,"byte_end":203833,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203838,"byte_end":203841,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203846,"byte_end":203890,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203895,"byte_end":203967,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":203972,"byte_end":204017,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204022,"byte_end":204031,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204036,"byte_end":204043,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205228,"byte_end":205235,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204269,"byte_end":204334,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204339,"byte_end":204342,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204347,"byte_end":204361,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204366,"byte_end":204369,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204374,"byte_end":204381,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204386,"byte_end":204427,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204432,"byte_end":204463,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204468,"byte_end":204503,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204508,"byte_end":204528,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204533,"byte_end":204536,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204541,"byte_end":204580,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204585,"byte_end":204624,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204629,"byte_end":204668,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204673,"byte_end":204676,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204681,"byte_end":204708,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204713,"byte_end":204752,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204757,"byte_end":204796,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204801,"byte_end":204808,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204813,"byte_end":204840,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204845,"byte_end":204884,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204889,"byte_end":204928,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204933,"byte_end":204940,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204945,"byte_end":204972,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":204977,"byte_end":205018,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205023,"byte_end":205064,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205069,"byte_end":205076,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205081,"byte_end":205084,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205089,"byte_end":205148,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205153,"byte_end":205194,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205199,"byte_end":205208,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205213,"byte_end":205220,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4506},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206531,"byte_end":206548,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"fn flatten_unordered<impl Into<Option<usize>>>(Self, impl Into<Option<usize>>)\n-> FlattenUnordered<Self> where Self::Item: Stream + Unpin, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205412,"byte_end":205483,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205488,"byte_end":205519,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205524,"byte_end":205527,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205532,"byte_end":205546,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205551,"byte_end":205554,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205559,"byte_end":205566,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205571,"byte_end":205612,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205617,"byte_end":205648,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205653,"byte_end":205688,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205693,"byte_end":205713,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205718,"byte_end":205721,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205726,"byte_end":205765,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205770,"byte_end":205809,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205814,"byte_end":205853,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205858,"byte_end":205861,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205866,"byte_end":205893,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205898,"byte_end":205937,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205942,"byte_end":205981,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205986,"byte_end":205993,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":205998,"byte_end":206025,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206030,"byte_end":206069,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206074,"byte_end":206113,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206118,"byte_end":206125,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206130,"byte_end":206157,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206162,"byte_end":206203,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206208,"byte_end":206249,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206254,"byte_end":206261,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206266,"byte_end":206269,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206274,"byte_end":206351,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206356,"byte_end":206374,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206379,"byte_end":206382,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206387,"byte_end":206428,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206433,"byte_end":206442,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206447,"byte_end":206454,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206459,"byte_end":206493,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206498,"byte_end":206523,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207834,"byte_end":207842,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where F: FnMut(Self::Item)\n-> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206748,"byte_end":206820,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206825,"byte_end":206828,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206833,"byte_end":206910,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206915,"byte_end":206990,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":206995,"byte_end":207071,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207076,"byte_end":207079,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207084,"byte_end":207167,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207172,"byte_end":207255,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207260,"byte_end":207263,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207268,"byte_end":207344,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207349,"byte_end":207425,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207430,"byte_end":207451,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207456,"byte_end":207459,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207464,"byte_end":207478,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207483,"byte_end":207486,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207491,"byte_end":207498,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207503,"byte_end":207544,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207549,"byte_end":207592,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207597,"byte_end":207600,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207605,"byte_end":207642,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207647,"byte_end":207714,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207719,"byte_end":207722,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207727,"byte_end":207800,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207805,"byte_end":207814,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":207819,"byte_end":207826,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209900,"byte_end":209918,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> FlatMapUnordered<Self, U, F> where U: Stream + Unpin, F: FnMut(Self::Item)\n-> U, Self: Sized, impl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208045,"byte_end":208116,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208121,"byte_end":208195,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208200,"byte_end":208214,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208219,"byte_end":208222,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208227,"byte_end":208294,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208299,"byte_end":208368,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208373,"byte_end":208442,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208447,"byte_end":208514,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208519,"byte_end":208572,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208577,"byte_end":208580,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208585,"byte_end":208658,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208663,"byte_end":208740,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208745,"byte_end":208809,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208814,"byte_end":208881,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208886,"byte_end":208955,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":208960,"byte_end":209032,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209037,"byte_end":209040,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209045,"byte_end":209115,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209120,"byte_end":209189,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209194,"byte_end":209247,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209252,"byte_end":209255,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209260,"byte_end":209326,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209331,"byte_end":209367,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209372,"byte_end":209375,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209380,"byte_end":209394,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209399,"byte_end":209402,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209407,"byte_end":209414,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209419,"byte_end":209460,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209465,"byte_end":209508,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209513,"byte_end":209516,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209521,"byte_end":209557,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209562,"byte_end":209638,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209643,"byte_end":209697,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209702,"byte_end":209720,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209725,"byte_end":209728,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209733,"byte_end":209797,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209802,"byte_end":209811,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209816,"byte_end":209823,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209828,"byte_end":209862,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":209867,"byte_end":209892,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211005,"byte_end":211009,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: for<'_> FnMut(&'_ mut S, Self::Item) -> Fut, Fut: Future<Output =\nOption<B>>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210196,"byte_end":210267,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210272,"byte_end":210302,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210307,"byte_end":210310,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210315,"byte_end":210390,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210395,"byte_end":210466,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210471,"byte_end":210511,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210516,"byte_end":210519,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210524,"byte_end":210538,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210543,"byte_end":210546,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210551,"byte_end":210558,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210563,"byte_end":210604,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210609,"byte_end":210633,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210638,"byte_end":210681,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210686,"byte_end":210689,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210694,"byte_end":210732,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210737,"byte_end":210740,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210745,"byte_end":210789,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210794,"byte_end":210814,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210819,"byte_end":210882,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210887,"byte_end":210894,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210899,"byte_end":210902,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210907,"byte_end":210971,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210976,"byte_end":210985,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":210990,"byte_end":210997,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4520},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212056,"byte_end":212066,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211278,"byte_end":211352,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211357,"byte_end":211380,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211385,"byte_end":211388,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211393,"byte_end":211466,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211471,"byte_end":211543,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211548,"byte_end":211625,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211630,"byte_end":211641,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211646,"byte_end":211649,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211654,"byte_end":211668,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211673,"byte_end":211676,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211681,"byte_end":211688,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211693,"byte_end":211734,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211739,"byte_end":211763,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211768,"byte_end":211811,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211816,"byte_end":211819,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211824,"byte_end":211862,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211867,"byte_end":211870,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211875,"byte_end":211938,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211943,"byte_end":211946,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":211951,"byte_end":212022,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212027,"byte_end":212036,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212041,"byte_end":212048,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4523},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213055,"byte_end":213065,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212300,"byte_end":212376,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212381,"byte_end":212404,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212409,"byte_end":212412,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212417,"byte_end":212492,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212497,"byte_end":212569,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212574,"byte_end":212641,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212646,"byte_end":212649,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212654,"byte_end":212668,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212673,"byte_end":212676,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212681,"byte_end":212688,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212693,"byte_end":212734,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212739,"byte_end":212763,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212768,"byte_end":212811,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212816,"byte_end":212819,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212824,"byte_end":212862,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212867,"byte_end":212870,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212875,"byte_end":212938,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212943,"byte_end":212946,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":212951,"byte_end":213021,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213026,"byte_end":213035,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213040,"byte_end":213047,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214581,"byte_end":214591,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213299,"byte_end":213369,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213374,"byte_end":213377,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213382,"byte_end":213453,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213458,"byte_end":213530,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213535,"byte_end":213605,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213610,"byte_end":213613,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213618,"byte_end":213689,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213694,"byte_end":213780,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213785,"byte_end":213852,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213857,"byte_end":213921,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213926,"byte_end":213929,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213934,"byte_end":213948,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213953,"byte_end":213956,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213961,"byte_end":213968,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":213973,"byte_end":214014,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214019,"byte_end":214043,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214048,"byte_end":214091,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214096,"byte_end":214124,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214129,"byte_end":214132,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214137,"byte_end":214175,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214180,"byte_end":214183,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214188,"byte_end":214206,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214211,"byte_end":214253,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214258,"byte_end":214273,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214278,"byte_end":214297,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214302,"byte_end":214327,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214332,"byte_end":214348,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214353,"byte_end":214380,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214385,"byte_end":214394,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214399,"byte_end":214406,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214411,"byte_end":214414,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214419,"byte_end":214464,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214469,"byte_end":214472,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214477,"byte_end":214547,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214552,"byte_end":214561,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214566,"byte_end":214573,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215830,"byte_end":215838,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214772,"byte_end":214843,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214848,"byte_end":214891,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214896,"byte_end":214899,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214904,"byte_end":214979,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":214984,"byte_end":215054,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215059,"byte_end":215097,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215102,"byte_end":215105,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215110,"byte_end":215185,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215190,"byte_end":215233,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215238,"byte_end":215241,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215246,"byte_end":215319,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215324,"byte_end":215367,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215372,"byte_end":215375,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215380,"byte_end":215394,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215399,"byte_end":215402,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215407,"byte_end":215414,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215419,"byte_end":215460,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215465,"byte_end":215489,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215494,"byte_end":215537,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215542,"byte_end":215545,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215550,"byte_end":215568,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215573,"byte_end":215576,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215581,"byte_end":215586,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215591,"byte_end":215652,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215657,"byte_end":215679,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215684,"byte_end":215713,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215718,"byte_end":215729,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215734,"byte_end":215752,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215757,"byte_end":215762,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215767,"byte_end":215770,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215775,"byte_end":215796,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215801,"byte_end":215810,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":215815,"byte_end":215822,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218000,"byte_end":218019,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216057,"byte_end":216128,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216133,"byte_end":216207,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216212,"byte_end":216226,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216231,"byte_end":216234,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216239,"byte_end":216302,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216307,"byte_end":216378,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216383,"byte_end":216435,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216440,"byte_end":216443,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216448,"byte_end":216523,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216528,"byte_end":216598,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216603,"byte_end":216667,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216672,"byte_end":216675,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216680,"byte_end":216751,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216756,"byte_end":216826,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216831,"byte_end":216892,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216897,"byte_end":216964,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":216969,"byte_end":217038,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217043,"byte_end":217115,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217120,"byte_end":217123,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217128,"byte_end":217203,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217208,"byte_end":217265,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217270,"byte_end":217273,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217278,"byte_end":217292,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217297,"byte_end":217300,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217305,"byte_end":217312,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217317,"byte_end":217358,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217363,"byte_end":217397,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217402,"byte_end":217445,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217450,"byte_end":217453,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217458,"byte_end":217498,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217503,"byte_end":217543,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217548,"byte_end":217588,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217593,"byte_end":217596,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217601,"byte_end":217669,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217674,"byte_end":217696,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217701,"byte_end":217726,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217731,"byte_end":217761,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217766,"byte_end":217775,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217780,"byte_end":217786,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217791,"byte_end":217817,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217822,"byte_end":217848,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217853,"byte_end":217879,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217884,"byte_end":217898,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217903,"byte_end":217911,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217916,"byte_end":217923,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217928,"byte_end":217962,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":217967,"byte_end":217992,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218844,"byte_end":218848,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218336,"byte_end":218407,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218412,"byte_end":218415,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218420,"byte_end":218493,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218498,"byte_end":218533,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218538,"byte_end":218541,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218546,"byte_end":218560,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218565,"byte_end":218568,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218573,"byte_end":218580,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218585,"byte_end":218626,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218631,"byte_end":218674,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218679,"byte_end":218682,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218687,"byte_end":218733,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218738,"byte_end":218741,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218746,"byte_end":218810,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218815,"byte_end":218824,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218829,"byte_end":218836,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219513,"byte_end":219517,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":218986,"byte_end":219058,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219063,"byte_end":219066,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219071,"byte_end":219144,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219149,"byte_end":219195,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219200,"byte_end":219203,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219208,"byte_end":219222,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219227,"byte_end":219230,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219235,"byte_end":219242,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219247,"byte_end":219288,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219293,"byte_end":219336,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219341,"byte_end":219344,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219349,"byte_end":219395,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219400,"byte_end":219403,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219408,"byte_end":219479,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219484,"byte_end":219493,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219498,"byte_end":219505,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221138,"byte_end":221142,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219655,"byte_end":219726,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219731,"byte_end":219804,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219809,"byte_end":219847,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219852,"byte_end":219855,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219860,"byte_end":219914,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219919,"byte_end":219991,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":219996,"byte_end":220072,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220077,"byte_end":220145,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220150,"byte_end":220226,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220231,"byte_end":220253,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220258,"byte_end":220261,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220266,"byte_end":220333,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220338,"byte_end":220406,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220411,"byte_end":220424,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220429,"byte_end":220432,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220437,"byte_end":220451,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220456,"byte_end":220459,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220464,"byte_end":220471,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220476,"byte_end":220519,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220524,"byte_end":220567,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220572,"byte_end":220600,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220605,"byte_end":220608,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220613,"byte_end":220631,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220636,"byte_end":220674,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220679,"byte_end":220694,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220699,"byte_end":220716,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220721,"byte_end":220763,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220768,"byte_end":220803,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220808,"byte_end":220852,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220857,"byte_end":220866,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220871,"byte_end":220885,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220890,"byte_end":220893,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220898,"byte_end":220941,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220946,"byte_end":220983,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":220988,"byte_end":221025,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221030,"byte_end":221064,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221069,"byte_end":221103,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221108,"byte_end":221118,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221123,"byte_end":221130,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222071,"byte_end":222077,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221267,"byte_end":221314,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221319,"byte_end":221322,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221327,"byte_end":221401,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221406,"byte_end":221443,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221448,"byte_end":221451,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221456,"byte_end":221470,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221475,"byte_end":221478,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221483,"byte_end":221490,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221495,"byte_end":221536,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221541,"byte_end":221584,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221589,"byte_end":221592,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221597,"byte_end":221637,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221642,"byte_end":221645,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221650,"byte_end":221679,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221684,"byte_end":221712,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221717,"byte_end":221774,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221779,"byte_end":221806,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221811,"byte_end":221834,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221839,"byte_end":221842,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221847,"byte_end":221882,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221887,"byte_end":221915,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221920,"byte_end":221977,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":221982,"byte_end":222009,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222014,"byte_end":222037,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222042,"byte_end":222051,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222056,"byte_end":222063,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223836,"byte_end":223848,"line_start":1310,"line_end":1310,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222128,"byte_end":222182,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222187,"byte_end":222190,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222195,"byte_end":222270,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222275,"byte_end":222278,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222283,"byte_end":222358,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222363,"byte_end":222437,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222442,"byte_end":222516,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222521,"byte_end":222570,"line_start":1276,"line_end":1276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222575,"byte_end":222578,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222583,"byte_end":222658,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222663,"byte_end":222733,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222738,"byte_end":222805,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222810,"byte_end":222882,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222887,"byte_end":222956,"line_start":1282,"line_end":1282,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222961,"byte_end":222976,"line_start":1283,"line_end":1283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222981,"byte_end":222984,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":222989,"byte_end":223053,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223058,"byte_end":223115,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223120,"byte_end":223123,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223128,"byte_end":223142,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223147,"byte_end":223150,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223155,"byte_end":223162,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223167,"byte_end":223208,"line_start":1291,"line_end":1291,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223213,"byte_end":223256,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223261,"byte_end":223264,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223269,"byte_end":223331,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223336,"byte_end":223366,"line_start":1295,"line_end":1295,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223371,"byte_end":223425,"line_start":1296,"line_end":1296,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223430,"byte_end":223460,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223465,"byte_end":223514,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223519,"byte_end":223522,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223527,"byte_end":223589,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223594,"byte_end":223616,"line_start":1301,"line_end":1301,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223621,"byte_end":223641,"line_start":1302,"line_end":1302,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223646,"byte_end":223688,"line_start":1303,"line_end":1303,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223693,"byte_end":223698,"line_start":1304,"line_end":1304,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223703,"byte_end":223736,"line_start":1305,"line_end":1305,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223741,"byte_end":223774,"line_start":1306,"line_end":1306,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223779,"byte_end":223788,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223793,"byte_end":223800,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223805,"byte_end":223828,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4540},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224224,"byte_end":224229,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":223995,"byte_end":224036,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224041,"byte_end":224044,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224049,"byte_end":224124,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224129,"byte_end":224186,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224191,"byte_end":224216,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4542},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224685,"byte_end":224696,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224384,"byte_end":224425,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224430,"byte_end":224433,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224438,"byte_end":224497,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224502,"byte_end":224505,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224510,"byte_end":224585,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224590,"byte_end":224647,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224652,"byte_end":224677,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225589,"byte_end":225597,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224849,"byte_end":224912,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224917,"byte_end":224920,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":224925,"byte_end":225000,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225005,"byte_end":225081,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225086,"byte_end":225159,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225164,"byte_end":225237,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225242,"byte_end":225284,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225289,"byte_end":225292,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225297,"byte_end":225362,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225367,"byte_end":225370,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225375,"byte_end":225450,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225455,"byte_end":225512,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225517,"byte_end":225551,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225556,"byte_end":225581,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227277,"byte_end":227293,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225791,"byte_end":225866,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225871,"byte_end":225874,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225879,"byte_end":225954,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":225959,"byte_end":226033,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226038,"byte_end":226110,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226115,"byte_end":226189,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226194,"byte_end":226223,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226228,"byte_end":226231,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226236,"byte_end":226301,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226306,"byte_end":226309,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226314,"byte_end":226389,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226394,"byte_end":226451,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226456,"byte_end":226459,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226464,"byte_end":226478,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226483,"byte_end":226486,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226491,"byte_end":226498,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226503,"byte_end":226544,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226549,"byte_end":226583,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226588,"byte_end":226631,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226636,"byte_end":226639,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226644,"byte_end":226694,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226699,"byte_end":226749,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226754,"byte_end":226757,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226762,"byte_end":226829,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226834,"byte_end":226896,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226901,"byte_end":226904,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226909,"byte_end":226934,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226939,"byte_end":226993,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":226998,"byte_end":227001,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227006,"byte_end":227031,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227036,"byte_end":227090,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227095,"byte_end":227098,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227103,"byte_end":227147,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227152,"byte_end":227188,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227193,"byte_end":227200,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227205,"byte_end":227239,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227244,"byte_end":227269,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228189,"byte_end":228192,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227501,"byte_end":227549,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227554,"byte_end":227557,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227562,"byte_end":227635,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227640,"byte_end":227712,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227717,"byte_end":227730,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227735,"byte_end":227738,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227743,"byte_end":227757,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227762,"byte_end":227765,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227770,"byte_end":227777,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227782,"byte_end":227823,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227828,"byte_end":227871,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227876,"byte_end":227879,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227884,"byte_end":227922,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227927,"byte_end":227966,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227971,"byte_end":227974,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":227979,"byte_end":228013,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228018,"byte_end":228059,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228064,"byte_end":228092,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228097,"byte_end":228147,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228152,"byte_end":228161,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228166,"byte_end":228173,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228178,"byte_end":228181,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229100,"byte_end":229105,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228373,"byte_end":228410,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228415,"byte_end":228418,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228423,"byte_end":228494,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228499,"byte_end":228575,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228580,"byte_end":228583,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228588,"byte_end":228595,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228600,"byte_end":228641,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228646,"byte_end":228689,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228694,"byte_end":228697,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228702,"byte_end":228759,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228764,"byte_end":228820,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228825,"byte_end":228828,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228833,"byte_end":228873,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228878,"byte_end":228881,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228886,"byte_end":228934,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228939,"byte_end":228967,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228972,"byte_end":228987,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":228992,"byte_end":229011,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229016,"byte_end":229034,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229039,"byte_end":229054,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229059,"byte_end":229066,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229071,"byte_end":229080,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229085,"byte_end":229092,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229443,"byte_end":229451,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229297,"byte_end":229352,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229357,"byte_end":229360,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229365,"byte_end":229435,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230486,"byte_end":230492,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229584,"byte_end":229651,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229656,"byte_end":229659,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229664,"byte_end":229738,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229743,"byte_end":229815,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229820,"byte_end":229872,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229877,"byte_end":229880,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229885,"byte_end":229958,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":229963,"byte_end":230037,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230042,"byte_end":230117,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230122,"byte_end":230194,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230199,"byte_end":230211,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230216,"byte_end":230219,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230224,"byte_end":230299,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230304,"byte_end":230361,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230366,"byte_end":230369,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230374,"byte_end":230386,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230391,"byte_end":230394,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230399,"byte_end":230448,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230453,"byte_end":230478,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231589,"byte_end":231601,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230653,"byte_end":230726,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230731,"byte_end":230734,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230739,"byte_end":230812,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230817,"byte_end":230887,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230892,"byte_end":230967,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":230972,"byte_end":231049,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231054,"byte_end":231082,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231087,"byte_end":231090,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231095,"byte_end":231168,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231173,"byte_end":231248,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231253,"byte_end":231314,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231319,"byte_end":231322,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231327,"byte_end":231402,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231407,"byte_end":231464,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231469,"byte_end":231472,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231477,"byte_end":231489,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231494,"byte_end":231497,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231502,"byte_end":231551,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231556,"byte_end":231581,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232639,"byte_end":232646,"line_start":1546,"line_end":1546,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231772,"byte_end":231847,"line_start":1533,"line_end":1533,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231852,"byte_end":231911,"line_start":1534,"line_end":1534,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231916,"byte_end":231919,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":231924,"byte_end":231997,"line_start":1536,"line_end":1536,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232002,"byte_end":232073,"line_start":1537,"line_end":1537,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232078,"byte_end":232151,"line_start":1538,"line_end":1538,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232156,"byte_end":232230,"line_start":1539,"line_end":1539,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232235,"byte_end":232305,"line_start":1540,"line_end":1540,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232310,"byte_end":232383,"line_start":1541,"line_end":1541,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232388,"byte_end":232464,"line_start":1542,"line_end":1542,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232469,"byte_end":232550,"line_start":1543,"line_end":1543,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":232555,"byte_end":232579,"line_start":1544,"line_end":1544,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233781,"byte_end":233786,"line_start":1570,"line_end":1570,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233204,"byte_end":233276,"line_start":1557,"line_end":1557,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233281,"byte_end":233293,"line_start":1558,"line_end":1558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233298,"byte_end":233301,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233306,"byte_end":233379,"line_start":1560,"line_end":1560,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233384,"byte_end":233446,"line_start":1561,"line_end":1561,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233451,"byte_end":233473,"line_start":1562,"line_end":1562,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233478,"byte_end":233481,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233486,"byte_end":233561,"line_start":1564,"line_end":1564,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233566,"byte_end":233623,"line_start":1565,"line_end":1565,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233628,"byte_end":233652,"line_start":1566,"line_end":1566,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233709,"byte_end":233743,"line_start":1568,"line_end":1568,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":233748,"byte_end":233773,"line_start":1569,"line_end":1569,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4557},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234398,"byte_end":234405,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234095,"byte_end":234168,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234173,"byte_end":234176,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234181,"byte_end":234250,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234255,"byte_end":234324,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234329,"byte_end":234390,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4559},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234861,"byte_end":234872,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234582,"byte_end":234657,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234662,"byte_end":234683,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234688,"byte_end":234691,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234696,"byte_end":234776,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":234781,"byte_end":234853,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235325,"byte_end":235337,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235046,"byte_end":235122,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235127,"byte_end":235148,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235153,"byte_end":235156,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235161,"byte_end":235240,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235245,"byte_end":235317,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4563},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235613,"byte_end":235628,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>> where\nSelf: Unpin","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235512,"byte_end":235583,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235588,"byte_end":235605,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237772,"byte_end":237788,"line_start":1679,"line_end":1679,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn select_next_some(&mut Self) -> SelectNextSome<, Self> where Self: Unpin +\nFusedStream","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235775,"byte_end":235850,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235855,"byte_end":235865,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235870,"byte_end":235873,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235878,"byte_end":235951,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":235956,"byte_end":236024,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236029,"byte_end":236077,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236082,"byte_end":236157,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236162,"byte_end":236238,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236243,"byte_end":236269,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236274,"byte_end":236277,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236282,"byte_end":236355,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236360,"byte_end":236430,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236435,"byte_end":236475,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236480,"byte_end":236483,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236488,"byte_end":236542,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236547,"byte_end":236631,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236636,"byte_end":236639,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236644,"byte_end":236658,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236663,"byte_end":236666,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236671,"byte_end":236678,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236683,"byte_end":236724,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236729,"byte_end":236763,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236768,"byte_end":236823,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236828,"byte_end":236831,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236836,"byte_end":236871,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236876,"byte_end":236926,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236931,"byte_end":236953,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236958,"byte_end":236968,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236973,"byte_end":236990,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":236995,"byte_end":237021,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237026,"byte_end":237081,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237086,"byte_end":237115,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237120,"byte_end":237183,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237188,"byte_end":237234,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237239,"byte_end":237253,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237258,"byte_end":237327,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237332,"byte_end":237357,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237362,"byte_end":237415,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237420,"byte_end":237449,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237454,"byte_end":237467,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237472,"byte_end":237542,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237547,"byte_end":237606,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237611,"byte_end":237641,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237646,"byte_end":237655,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237660,"byte_end":237665,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237670,"byte_end":237695,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237700,"byte_end":237709,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237714,"byte_end":237721,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237726,"byte_end":237729,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":237734,"byte_end":237764,"line_start":1678,"line_end":1678,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":15511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":396926,"byte_end":396933,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":15515},{"krate":0,"index":15516},{"krate":0,"index":15517}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397158,"byte_end":397161,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AndThen<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4814},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397837,"byte_end":397846,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":398413,"byte_end":398422,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":398956,"byte_end":398969,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<AndThen<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15579},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":359048,"byte_end":359055,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":15582}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15657},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":359303,"byte_end":359312,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":15660}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":359613,"byte_end":359623,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":15738}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15810},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":399675,"byte_end":399685,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":15812}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":399972,"byte_end":399985,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4866},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400161,"byte_end":400170,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IntoStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400144,"byte_end":400153,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400307,"byte_end":400316,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoStream<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15857},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":360049,"byte_end":360054,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":15860}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15935},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":360331,"byte_end":360337,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":15938}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16010},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401033,"byte_end":401039,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":16014},{"krate":0,"index":16015},{"krate":0,"index":16016}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4915},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401263,"byte_end":401266,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrElse<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4926},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401933,"byte_end":401942,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":402646,"byte_end":402655,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4932},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":403185,"byte_end":403198,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OrElse<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16075},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":403875,"byte_end":403882,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":16078}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":403708,"byte_end":403778,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":403796,"byte_end":403863,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4978},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404219,"byte_end":404232,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryNext as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4982},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404422,"byte_end":404426,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryNext as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16083},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":404967,"byte_end":404977,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":16087},{"krate":0,"index":16088},{"krate":0,"index":16089}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405205,"byte_end":405208,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEach<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5031},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405863,"byte_end":405867,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16140},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":406863,"byte_end":406872,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":16144},{"krate":0,"index":16145},{"krate":0,"index":16146},{"krate":0,"index":16147}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5075},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407210,"byte_end":407213,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilter<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5085},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407885,"byte_end":407898,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5091},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":408181,"byte_end":408190,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5092},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":408929,"byte_end":408938,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16209},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410007,"byte_end":410019,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":16213},{"krate":0,"index":16214},{"krate":0,"index":16215}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410250,"byte_end":410253,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilterMap<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5154},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410847,"byte_end":410860,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5161},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":411162,"byte_end":411171,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5162},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":412011,"byte_end":412020,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16274},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413024,"byte_end":413034,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":16276},{"krate":0,"index":16277}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413588,"byte_end":413601,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5211},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413912,"byte_end":413921,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16322},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415212,"byte_end":415222,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":16325},{"krate":0,"index":16326}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5260},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415575,"byte_end":415588,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryCollect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5265},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415800,"byte_end":415804,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryCollect<St, C> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_concat.rs","byte_start":416548,"byte_end":416557,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":16373},{"krate":0,"index":16374}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_concat.rs","byte_start":417058,"byte_end":417062,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryConcat<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16411},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":418068,"byte_end":418077,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":16413},{"krate":0,"index":16414},{"krate":0,"index":16415}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5359},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":418918,"byte_end":418927,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":420305,"byte_end":420314,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5363},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":420762,"byte_end":420775,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16463},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421327,"byte_end":421341,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421104,"byte_end":421188,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421189,"byte_end":421192,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421193,"byte_end":421290,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":16467},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421348,"byte_end":421358,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":16463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16468},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421360,"byte_end":421365,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":16463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421437,"byte_end":421440,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5375},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421596,"byte_end":421599,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16484},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":422203,"byte_end":422210,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":16489},{"krate":0,"index":16490},{"krate":0,"index":16491},{"krate":0,"index":16492}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5424},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":422489,"byte_end":422492,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFold<St, Fut, T, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5436},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":423180,"byte_end":423193,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5443},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":423482,"byte_end":423486,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5476},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426658,"byte_end":426668,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where F: FnMut(T)\n-> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":424801,"byte_end":424877,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":424878,"byte_end":424881,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":424882,"byte_end":424958,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":424959,"byte_end":425029,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425030,"byte_end":425089,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425090,"byte_end":425093,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425094,"byte_end":425172,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425173,"byte_end":425250,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425251,"byte_end":425315,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425316,"byte_end":425319,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425320,"byte_end":425392,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425393,"byte_end":425471,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425472,"byte_end":425501,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425502,"byte_end":425505,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425506,"byte_end":425583,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425584,"byte_end":425648,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425649,"byte_end":425701,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425702,"byte_end":425705,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425706,"byte_end":425783,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425784,"byte_end":425856,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425857,"byte_end":425926,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":425927,"byte_end":426005,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426006,"byte_end":426009,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426010,"byte_end":426023,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426024,"byte_end":426027,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426028,"byte_end":426035,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426036,"byte_end":426069,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426070,"byte_end":426093,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426094,"byte_end":426135,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426136,"byte_end":426182,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426183,"byte_end":426186,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426187,"byte_end":426246,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426247,"byte_end":426269,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426270,"byte_end":426304,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426305,"byte_end":426314,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426315,"byte_end":426318,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426319,"byte_end":426342,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426343,"byte_end":426382,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426383,"byte_end":426419,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426420,"byte_end":426463,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426464,"byte_end":426480,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426481,"byte_end":426501,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426502,"byte_end":426511,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426512,"byte_end":426519,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426520,"byte_end":426523,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426524,"byte_end":426589,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426590,"byte_end":426632,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426633,"byte_end":426642,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":426643,"byte_end":426650,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16553},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427031,"byte_end":427040,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":16557},{"krate":0,"index":16558},{"krate":0,"index":16559}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427251,"byte_end":427254,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryUnfold<T, F, Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5492},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427593,"byte_end":427602,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryUnfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16610},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":428948,"byte_end":428960,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":16614},{"krate":0,"index":16615},{"krate":0,"index":16616},{"krate":0,"index":16617},{"krate":0,"index":16618}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5540},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":429318,"byte_end":429321,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySkipWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5551},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":430204,"byte_end":430213,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":431129,"byte_end":431138,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5557},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":431685,"byte_end":431698,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16683},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":432504,"byte_end":432516,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":16687},{"krate":0,"index":16688},{"krate":0,"index":16689},{"krate":0,"index":16690},{"krate":0,"index":16691}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":432889,"byte_end":432892,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryTakeWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":433769,"byte_end":433778,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":434728,"byte_end":434737,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":435358,"byte_end":435371,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16756},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":436292,"byte_end":436310,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":16758},{"krate":0,"index":16759},{"krate":0,"index":16760}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":437024,"byte_end":437033,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16808},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":438850,"byte_end":438861,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":16810},{"krate":0,"index":16811},{"krate":0,"index":16812}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":439589,"byte_end":439598,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBuffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16860},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":441398,"byte_end":441418,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":16864},{"krate":0,"index":16865},{"krate":0,"index":16866},{"krate":0,"index":16867}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5804},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":441697,"byte_end":441700,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEachConcurrent<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5809},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":442138,"byte_end":442151,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5820},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":442907,"byte_end":442911,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16921},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":445717,"byte_end":445730,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":16923},{"krate":0,"index":16924}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5870},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":446338,"byte_end":446347,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<IntoAsyncRead<St> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8]) -> Poll<Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5873},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":448015,"byte_end":448025,"line_start":98,"line_end":98,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5874},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":448196,"byte_end":448206,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5875},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":448357,"byte_end":448367,"line_start":108,"line_end":108,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5878},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":448631,"byte_end":448644,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<IntoAsyncRead<St> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5879},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":449704,"byte_end":449711,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"consume","qualname":"<IntoAsyncRead<St> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5885},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363546,"byte_end":363558,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5888},{"krate":0,"index":5891},{"krate":0,"index":5894},{"krate":0,"index":5897},{"krate":0,"index":5900},{"krate":0,"index":5902},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5909},{"krate":0,"index":5912},{"krate":0,"index":5915},{"krate":0,"index":5919},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5925},{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363484,"byte_end":363535,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5886},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364100,"byte_end":364108,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363576,"byte_end":363650,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363655,"byte_end":363681,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363686,"byte_end":363689,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363694,"byte_end":363708,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363713,"byte_end":363716,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363721,"byte_end":363728,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363733,"byte_end":363774,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363779,"byte_end":363825,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363830,"byte_end":363833,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363838,"byte_end":363858,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363863,"byte_end":363908,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363913,"byte_end":363944,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363949,"byte_end":363952,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363957,"byte_end":364011,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364016,"byte_end":364067,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364072,"byte_end":364080,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364085,"byte_end":364092,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5888},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364804,"byte_end":364810,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364284,"byte_end":364357,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364362,"byte_end":364393,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364398,"byte_end":364401,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364406,"byte_end":364420,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364425,"byte_end":364428,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364433,"byte_end":364440,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364445,"byte_end":364486,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364491,"byte_end":364537,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364542,"byte_end":364545,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364550,"byte_end":364570,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364575,"byte_end":364616,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364621,"byte_end":364652,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364657,"byte_end":364660,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364665,"byte_end":364718,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364723,"byte_end":364771,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364776,"byte_end":364784,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":364789,"byte_end":364796,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5891},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365519,"byte_end":365526,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365000,"byte_end":365071,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365076,"byte_end":365107,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365112,"byte_end":365115,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365120,"byte_end":365134,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365139,"byte_end":365142,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365147,"byte_end":365154,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365159,"byte_end":365200,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365205,"byte_end":365251,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365256,"byte_end":365259,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365264,"byte_end":365284,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365289,"byte_end":365330,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365335,"byte_end":365367,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365372,"byte_end":365375,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365380,"byte_end":365433,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365438,"byte_end":365486,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365491,"byte_end":365499,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365504,"byte_end":365511,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5894},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367131,"byte_end":367139,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where F: FnMut(Self::Ok)\n-> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365718,"byte_end":365794,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365799,"byte_end":365839,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365844,"byte_end":365847,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365852,"byte_end":365928,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":365933,"byte_end":366009,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366014,"byte_end":366087,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366092,"byte_end":366134,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366139,"byte_end":366142,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366147,"byte_end":366220,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366225,"byte_end":366256,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366261,"byte_end":366264,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366269,"byte_end":366343,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366348,"byte_end":366422,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366427,"byte_end":366443,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366448,"byte_end":366451,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366456,"byte_end":366527,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366532,"byte_end":366558,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366563,"byte_end":366566,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366571,"byte_end":366643,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366648,"byte_end":366697,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366702,"byte_end":366705,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366710,"byte_end":366724,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366729,"byte_end":366732,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366737,"byte_end":366744,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366749,"byte_end":366780,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366785,"byte_end":366809,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366814,"byte_end":366852,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366857,"byte_end":366860,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366865,"byte_end":366921,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366926,"byte_end":366929,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366934,"byte_end":366969,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":366974,"byte_end":367013,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367018,"byte_end":367042,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367047,"byte_end":367063,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367068,"byte_end":367084,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367089,"byte_end":367099,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367104,"byte_end":367111,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367116,"byte_end":367123,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5897},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368291,"byte_end":368298,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367392,"byte_end":367457,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367462,"byte_end":367511,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367516,"byte_end":367519,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367524,"byte_end":367603,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367608,"byte_end":367682,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367687,"byte_end":367763,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367768,"byte_end":367813,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367818,"byte_end":367821,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367826,"byte_end":367901,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367906,"byte_end":367946,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367951,"byte_end":367954,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":367959,"byte_end":368068,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368073,"byte_end":368147,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368152,"byte_end":368168,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368173,"byte_end":368176,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368181,"byte_end":368252,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368257,"byte_end":368283,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5900},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368850,"byte_end":368860,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368547,"byte_end":368621,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368626,"byte_end":368636,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368641,"byte_end":368644,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368649,"byte_end":368719,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368724,"byte_end":368800,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":368805,"byte_end":368842,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5902},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369349,"byte_end":369360,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnMut(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369058,"byte_end":369137,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369142,"byte_end":369145,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369150,"byte_end":369220,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369225,"byte_end":369299,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369304,"byte_end":369341,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5904},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370281,"byte_end":370292,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369563,"byte_end":369616,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369621,"byte_end":369665,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369670,"byte_end":369673,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369678,"byte_end":369727,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369732,"byte_end":369805,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369810,"byte_end":369830,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369835,"byte_end":369838,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369843,"byte_end":369857,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369862,"byte_end":369865,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369870,"byte_end":369877,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369882,"byte_end":369941,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369946,"byte_end":369949,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369954,"byte_end":369973,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":369978,"byte_end":369996,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370001,"byte_end":370073,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370078,"byte_end":370108,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370113,"byte_end":370120,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370125,"byte_end":370199,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370204,"byte_end":370207,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370212,"byte_end":370261,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370266,"byte_end":370273,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5905},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371187,"byte_end":371195,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370448,"byte_end":370522,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370527,"byte_end":370601,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370606,"byte_end":370618,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370623,"byte_end":370626,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370631,"byte_end":370698,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370703,"byte_end":370775,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370780,"byte_end":370819,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370824,"byte_end":370827,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370832,"byte_end":370846,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370851,"byte_end":370854,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370859,"byte_end":370866,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370871,"byte_end":370912,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370917,"byte_end":370963,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370968,"byte_end":370971,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":370976,"byte_end":371033,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371038,"byte_end":371041,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371046,"byte_end":371100,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371105,"byte_end":371154,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371159,"byte_end":371167,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371172,"byte_end":371179,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5906},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372547,"byte_end":372559,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371362,"byte_end":371431,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371436,"byte_end":371492,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371497,"byte_end":371500,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371505,"byte_end":371580,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371585,"byte_end":371655,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371660,"byte_end":371698,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371703,"byte_end":371706,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371711,"byte_end":371789,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371794,"byte_end":371854,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371859,"byte_end":371916,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371921,"byte_end":371988,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":371993,"byte_end":372023,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372028,"byte_end":372031,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372036,"byte_end":372050,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372055,"byte_end":372058,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372063,"byte_end":372070,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372075,"byte_end":372116,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372121,"byte_end":372145,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372150,"byte_end":372196,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372201,"byte_end":372204,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372209,"byte_end":372230,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372235,"byte_end":372238,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372243,"byte_end":372248,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372253,"byte_end":372314,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372319,"byte_end":372341,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372346,"byte_end":372410,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372415,"byte_end":372426,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372431,"byte_end":372470,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372475,"byte_end":372480,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372485,"byte_end":372488,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372493,"byte_end":372514,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372519,"byte_end":372527,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372532,"byte_end":372539,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5909},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373572,"byte_end":373586,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372823,"byte_end":372897,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372902,"byte_end":372925,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372930,"byte_end":372933,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372938,"byte_end":372969,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":372974,"byte_end":373051,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373056,"byte_end":373085,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373090,"byte_end":373093,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373098,"byte_end":373112,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373117,"byte_end":373120,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373125,"byte_end":373132,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373137,"byte_end":373178,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373183,"byte_end":373207,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373212,"byte_end":373258,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373263,"byte_end":373266,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373271,"byte_end":373340,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373345,"byte_end":373415,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373420,"byte_end":373423,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373428,"byte_end":373495,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373500,"byte_end":373539,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373544,"byte_end":373552,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373557,"byte_end":373564,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5912},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374619,"byte_end":374633,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373863,"byte_end":373937,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373942,"byte_end":373965,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373970,"byte_end":373973,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":373978,"byte_end":374009,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374014,"byte_end":374091,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374096,"byte_end":374125,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374130,"byte_end":374133,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374138,"byte_end":374152,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374157,"byte_end":374160,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374165,"byte_end":374172,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374177,"byte_end":374218,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374223,"byte_end":374247,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374252,"byte_end":374298,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374303,"byte_end":374306,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374311,"byte_end":374387,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374392,"byte_end":374462,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374467,"byte_end":374470,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374475,"byte_end":374542,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374547,"byte_end":374586,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374591,"byte_end":374599,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374604,"byte_end":374611,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5915},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376548,"byte_end":376571,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374910,"byte_end":374992,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":374997,"byte_end":375071,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375076,"byte_end":375126,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375131,"byte_end":375134,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375139,"byte_end":375161,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375166,"byte_end":375252,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375257,"byte_end":375342,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375347,"byte_end":375375,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375380,"byte_end":375383,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375388,"byte_end":375463,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375468,"byte_end":375525,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375530,"byte_end":375533,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375538,"byte_end":375552,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375557,"byte_end":375560,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375565,"byte_end":375572,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375577,"byte_end":375618,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375623,"byte_end":375657,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375662,"byte_end":375719,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375724,"byte_end":375727,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375732,"byte_end":375772,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375777,"byte_end":375817,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375822,"byte_end":375863,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375868,"byte_end":375871,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375876,"byte_end":375927,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375932,"byte_end":375985,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":375990,"byte_end":376012,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376017,"byte_end":376042,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376047,"byte_end":376109,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376114,"byte_end":376129,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376134,"byte_end":376143,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376148,"byte_end":376154,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376159,"byte_end":376162,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376167,"byte_end":376193,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376198,"byte_end":376265,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376270,"byte_end":376284,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376289,"byte_end":376292,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376297,"byte_end":376358,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376363,"byte_end":376391,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376396,"byte_end":376446,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376451,"byte_end":376459,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376464,"byte_end":376471,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376476,"byte_end":376510,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376515,"byte_end":376540,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5919},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378020,"byte_end":378031,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn try_collect<C>(Self) -> TryCollect<Self, C> where C: Default +\nExtend<Self::Ok>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":376981,"byte_end":377033,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377038,"byte_end":377105,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377110,"byte_end":377113,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377118,"byte_end":377192,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377197,"byte_end":377278,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377283,"byte_end":377353,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377358,"byte_end":377361,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377366,"byte_end":377434,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377439,"byte_end":377442,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377447,"byte_end":377461,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377466,"byte_end":377469,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377474,"byte_end":377481,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377486,"byte_end":377527,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377532,"byte_end":377563,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377568,"byte_end":377606,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377611,"byte_end":377631,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377636,"byte_end":377639,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377644,"byte_end":377681,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377686,"byte_end":377689,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377694,"byte_end":377721,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377726,"byte_end":377750,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377755,"byte_end":377801,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377806,"byte_end":377815,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377820,"byte_end":377863,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377868,"byte_end":377875,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377880,"byte_end":377883,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377888,"byte_end":377951,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377956,"byte_end":377987,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":377992,"byte_end":378000,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378005,"byte_end":378012,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5921},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379846,"byte_end":379856,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378214,"byte_end":378292,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378297,"byte_end":378300,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378305,"byte_end":378390,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378395,"byte_end":378467,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378472,"byte_end":378524,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378529,"byte_end":378532,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378537,"byte_end":378610,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378615,"byte_end":378689,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378694,"byte_end":378769,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378774,"byte_end":378846,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378851,"byte_end":378863,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378868,"byte_end":378871,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378876,"byte_end":378951,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":378956,"byte_end":379013,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379018,"byte_end":379021,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379026,"byte_end":379057,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379062,"byte_end":379131,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379136,"byte_end":379165,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379170,"byte_end":379173,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379178,"byte_end":379192,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379197,"byte_end":379200,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379205,"byte_end":379212,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379217,"byte_end":379258,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379263,"byte_end":379325,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379330,"byte_end":379333,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379338,"byte_end":379429,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379434,"byte_end":379476,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379481,"byte_end":379484,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379489,"byte_end":379551,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379556,"byte_end":379629,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379634,"byte_end":379696,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379701,"byte_end":379709,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379714,"byte_end":379721,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379726,"byte_end":379729,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379734,"byte_end":379746,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379751,"byte_end":379754,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379759,"byte_end":379808,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":379813,"byte_end":379838,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5922},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381379,"byte_end":381389,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: for<'_> FnMut(&'_ Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380091,"byte_end":380164,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380169,"byte_end":380203,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380208,"byte_end":380211,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380216,"byte_end":380291,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380296,"byte_end":380371,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380376,"byte_end":380449,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380454,"byte_end":380525,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380530,"byte_end":380580,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380585,"byte_end":380588,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380593,"byte_end":380664,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380669,"byte_end":380672,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380677,"byte_end":380753,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380758,"byte_end":380828,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380833,"byte_end":380858,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380863,"byte_end":380866,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380871,"byte_end":380885,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380890,"byte_end":380897,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380902,"byte_end":380943,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380948,"byte_end":380972,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":380977,"byte_end":381034,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381039,"byte_end":381042,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381047,"byte_end":381127,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381132,"byte_end":381175,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381180,"byte_end":381213,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381218,"byte_end":381225,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381230,"byte_end":381233,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381238,"byte_end":381286,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381291,"byte_end":381346,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381351,"byte_end":381359,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381364,"byte_end":381371,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5925},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383016,"byte_end":383030,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Self::Error>, F: FnMut(Self::Ok) ->\nFut, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381640,"byte_end":381702,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381707,"byte_end":381775,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381780,"byte_end":381814,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381819,"byte_end":381822,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381827,"byte_end":381902,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381907,"byte_end":381982,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":381987,"byte_end":382063,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382068,"byte_end":382133,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382138,"byte_end":382141,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382146,"byte_end":382217,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382222,"byte_end":382225,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382230,"byte_end":382306,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382311,"byte_end":382385,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382390,"byte_end":382415,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382420,"byte_end":382423,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382428,"byte_end":382442,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382447,"byte_end":382454,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382459,"byte_end":382500,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382505,"byte_end":382562,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382567,"byte_end":382592,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382597,"byte_end":382600,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382605,"byte_end":382675,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382680,"byte_end":382735,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382740,"byte_end":382802,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382807,"byte_end":382822,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382827,"byte_end":382834,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382839,"byte_end":382842,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382847,"byte_end":382868,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382873,"byte_end":382922,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382927,"byte_end":382983,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":382988,"byte_end":382996,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383001,"byte_end":383008,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5929},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384926,"byte_end":384937,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383307,"byte_end":383372,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383377,"byte_end":383380,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383385,"byte_end":383458,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383463,"byte_end":383536,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383541,"byte_end":383614,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383619,"byte_end":383689,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383694,"byte_end":383697,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383702,"byte_end":383716,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383721,"byte_end":383724,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383729,"byte_end":383736,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383741,"byte_end":383782,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383787,"byte_end":383818,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383823,"byte_end":383874,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383879,"byte_end":383899,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383904,"byte_end":383907,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383912,"byte_end":383951,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":383956,"byte_end":383995,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384000,"byte_end":384039,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384044,"byte_end":384047,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384052,"byte_end":384079,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384084,"byte_end":384127,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384132,"byte_end":384139,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384144,"byte_end":384171,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384176,"byte_end":384219,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384224,"byte_end":384268,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384273,"byte_end":384316,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384321,"byte_end":384328,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384333,"byte_end":384360,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384365,"byte_end":384410,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384415,"byte_end":384460,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384465,"byte_end":384509,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384514,"byte_end":384521,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384526,"byte_end":384529,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384534,"byte_end":384573,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384578,"byte_end":384627,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384632,"byte_end":384681,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384686,"byte_end":384736,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384741,"byte_end":384790,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384795,"byte_end":384845,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384850,"byte_end":384892,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384897,"byte_end":384906,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":384911,"byte_end":384918,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5930},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386529,"byte_end":386537,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385242,"byte_end":385312,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385317,"byte_end":385377,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385382,"byte_end":385385,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385390,"byte_end":385460,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385465,"byte_end":385541,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385546,"byte_end":385622,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385627,"byte_end":385697,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385702,"byte_end":385728,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385733,"byte_end":385736,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385741,"byte_end":385821,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385826,"byte_end":385895,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385900,"byte_end":385921,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385926,"byte_end":385929,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385934,"byte_end":385948,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385953,"byte_end":385956,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385961,"byte_end":385968,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":385973,"byte_end":386014,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386019,"byte_end":386065,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386070,"byte_end":386073,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386078,"byte_end":386147,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386152,"byte_end":386229,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386234,"byte_end":386267,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386272,"byte_end":386275,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386280,"byte_end":386366,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386371,"byte_end":386457,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386462,"byte_end":386496,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386501,"byte_end":386509,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386514,"byte_end":386521,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5934},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388063,"byte_end":388073,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386817,"byte_end":386879,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386884,"byte_end":386959,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386964,"byte_end":386967,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":386972,"byte_end":387043,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387048,"byte_end":387124,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387129,"byte_end":387168,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387173,"byte_end":387176,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387181,"byte_end":387267,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387272,"byte_end":387275,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387280,"byte_end":387364,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387369,"byte_end":387425,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387430,"byte_end":387433,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387438,"byte_end":387452,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387457,"byte_end":387460,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387465,"byte_end":387472,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387477,"byte_end":387518,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387523,"byte_end":387554,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387559,"byte_end":387597,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387602,"byte_end":387622,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387627,"byte_end":387630,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387635,"byte_end":387696,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387701,"byte_end":387704,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387709,"byte_end":387736,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387741,"byte_end":387772,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387777,"byte_end":387803,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387808,"byte_end":387878,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387883,"byte_end":387892,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387897,"byte_end":387904,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387909,"byte_end":387912,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387917,"byte_end":387956,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387961,"byte_end":387964,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":387969,"byte_end":388029,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388034,"byte_end":388043,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388048,"byte_end":388055,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390795,"byte_end":390815,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388327,"byte_end":388405,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388410,"byte_end":388413,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388418,"byte_end":388523,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388528,"byte_end":388571,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388576,"byte_end":388579,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388584,"byte_end":388652,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388657,"byte_end":388730,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388735,"byte_end":388791,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388796,"byte_end":388799,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388804,"byte_end":388879,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388884,"byte_end":388957,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":388962,"byte_end":389027,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389032,"byte_end":389035,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389040,"byte_end":389115,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389120,"byte_end":389177,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389182,"byte_end":389185,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389190,"byte_end":389204,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389209,"byte_end":389212,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389217,"byte_end":389269,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389274,"byte_end":389281,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389286,"byte_end":389327,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389332,"byte_end":389366,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389371,"byte_end":389428,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389433,"byte_end":389436,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389441,"byte_end":389491,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389496,"byte_end":389546,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389551,"byte_end":389554,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389559,"byte_end":389634,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389639,"byte_end":389642,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389647,"byte_end":389713,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389718,"byte_end":389721,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389726,"byte_end":389751,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389756,"byte_end":389810,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389815,"byte_end":389818,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389823,"byte_end":389848,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389853,"byte_end":389907,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389912,"byte_end":389915,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389920,"byte_end":389964,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":389969,"byte_end":390005,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390010,"byte_end":390017,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390022,"byte_end":390025,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390030,"byte_end":390090,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390095,"byte_end":390102,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390107,"byte_end":390148,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390153,"byte_end":390184,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390189,"byte_end":390240,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390245,"byte_end":390248,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390253,"byte_end":390307,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390312,"byte_end":390378,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390383,"byte_end":390386,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390391,"byte_end":390440,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390445,"byte_end":390499,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390504,"byte_end":390507,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390512,"byte_end":390565,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390570,"byte_end":390642,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390647,"byte_end":390706,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390711,"byte_end":390718,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390723,"byte_end":390757,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":390762,"byte_end":390787,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5936},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393826,"byte_end":393838,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391092,"byte_end":391158,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391163,"byte_end":391166,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391171,"byte_end":391276,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391281,"byte_end":391324,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391329,"byte_end":391332,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391337,"byte_end":391405,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the same order as the underlying stream. If the underlying stream returns an error, it will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391410,"byte_end":391516,"line_start":921,"line_end":921,"column_start":5,"column_end":111}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391521,"byte_end":391551,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391556,"byte_end":391559,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391564,"byte_end":391639,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391644,"byte_end":391717,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391722,"byte_end":391787,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391792,"byte_end":391795,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391800,"byte_end":391875,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391880,"byte_end":391937,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391942,"byte_end":391945,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391950,"byte_end":391964,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391969,"byte_end":391972,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":391977,"byte_end":392027,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392032,"byte_end":392039,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392044,"byte_end":392085,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392090,"byte_end":392124,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392129,"byte_end":392159,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392164,"byte_end":392221,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392226,"byte_end":392229,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392234,"byte_end":392284,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392289,"byte_end":392339,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392344,"byte_end":392347,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392352,"byte_end":392391,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392396,"byte_end":392475,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392480,"byte_end":392483,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392488,"byte_end":392550,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392555,"byte_end":392558,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392563,"byte_end":392626,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392631,"byte_end":392634,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392639,"byte_end":392668,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392673,"byte_end":392736,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392741,"byte_end":392771,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392776,"byte_end":392790,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392795,"byte_end":392798,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392803,"byte_end":392828,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392833,"byte_end":392887,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392892,"byte_end":392946,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392951,"byte_end":392954,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":392959,"byte_end":393003,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393008,"byte_end":393044,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393049,"byte_end":393056,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393061,"byte_end":393064,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393069,"byte_end":393129,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393134,"byte_end":393141,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393146,"byte_end":393187,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393192,"byte_end":393223,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393228,"byte_end":393279,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393284,"byte_end":393287,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393292,"byte_end":393346,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393351,"byte_end":393409,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393414,"byte_end":393417,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393422,"byte_end":393471,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393476,"byte_end":393530,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393535,"byte_end":393538,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393543,"byte_end":393596,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393601,"byte_end":393673,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393678,"byte_end":393737,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393742,"byte_end":393749,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393754,"byte_end":393788,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":393793,"byte_end":393818,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":394293,"byte_end":394312,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":394185,"byte_end":394263,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":394268,"byte_end":394285,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396267,"byte_end":396282,"line_start":1057,"line_end":1057,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error>, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5885},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncBufRead`](crate::io::AsyncBufRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncBufRead`](crate::io::AsyncBufRead).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395451,"byte_end":395539,"line_start":1034,"line_end":1034,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395544,"byte_end":395547,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395552,"byte_end":395616,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395621,"byte_end":395678,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395683,"byte_end":395686,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395691,"byte_end":395705,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395710,"byte_end":395713,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395718,"byte_end":395725,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395730,"byte_end":395771,"line_start":1042,"line_end":1042,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395776,"byte_end":395822,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395827,"byte_end":395861,"line_start":1044,"line_end":1044,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395866,"byte_end":395869,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter([Ok(vec![1, 2, 3]), Ok(vec![4, 5])]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395874,"byte_end":395941,"line_start":1046,"line_end":1046,"column_start":5,"column_end":72}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395946,"byte_end":395992,"line_start":1047,"line_end":1047,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":395997,"byte_end":396000,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396005,"byte_end":396034,"line_start":1049,"line_end":1049,"column_start":5,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await.unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396039,"byte_end":396087,"line_start":1050,"line_end":1050,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(buf, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396092,"byte_end":396129,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/ # })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396134,"byte_end":396142,"line_start":1052,"line_end":1052,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396147,"byte_end":396154,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396159,"byte_end":396181,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":396236,"byte_end":396259,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":16973},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450590,"byte_end":450594,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":16975}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450468,"byte_end":450505,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450530,"byte_end":450578,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451112,"byte_end":451116,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450646,"byte_end":450710,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450711,"byte_end":450739,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450740,"byte_end":450743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450744,"byte_end":450817,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450818,"byte_end":450873,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450874,"byte_end":450877,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450878,"byte_end":450885,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450886,"byte_end":450927,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450928,"byte_end":450971,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450972,"byte_end":450975,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450976,"byte_end":451020,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451021,"byte_end":451086,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451087,"byte_end":451096,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451097,"byte_end":451104,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6047},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451326,"byte_end":451335,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Iter<I> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<I::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6048},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451462,"byte_end":451471,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter<I> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16982},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451807,"byte_end":451813,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":16984}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451683,"byte_end":451722,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451747,"byte_end":451795,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6077},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452337,"byte_end":452343,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451835,"byte_end":451895,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451896,"byte_end":451899,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451900,"byte_end":451967,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":451968,"byte_end":452040,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452041,"byte_end":452098,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452099,"byte_end":452102,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452103,"byte_end":452110,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452111,"byte_end":452152,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452153,"byte_end":452196,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452197,"byte_end":452200,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452201,"byte_end":452236,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452237,"byte_end":452311,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452312,"byte_end":452321,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452322,"byte_end":452329,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452547,"byte_end":452556,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6085},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452689,"byte_end":452698,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Repeat<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6088},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452841,"byte_end":452854,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Repeat<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16991},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453334,"byte_end":453344,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":16993}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453032,"byte_end":453092,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453093,"byte_end":453145,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453146,"byte_end":453149,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453150,"byte_end":453213,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453214,"byte_end":453249,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453274,"byte_end":453322,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6124},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453502,"byte_end":453511,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6125},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453653,"byte_end":453662,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RepeatWith<F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6129},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453806,"byte_end":453819,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<RepeatWith<F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6130},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455632,"byte_end":455643,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<A, F>(F) -> RepeatWith<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453860,"byte_end":453931,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453932,"byte_end":453999,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454000,"byte_end":454003,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454004,"byte_end":454076,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454077,"byte_end":454080,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454081,"byte_end":454155,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454156,"byte_end":454208,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454209,"byte_end":454212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454213,"byte_end":454285,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454286,"byte_end":454359,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454360,"byte_end":454397,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454398,"byte_end":454401,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454402,"byte_end":454416,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454417,"byte_end":454420,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454421,"byte_end":454437,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454438,"byte_end":454441,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454442,"byte_end":454449,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454450,"byte_end":454491,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454492,"byte_end":454535,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454536,"byte_end":454539,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454540,"byte_end":454608,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454609,"byte_end":454687,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454688,"byte_end":454719,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454720,"byte_end":454741,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454742,"byte_end":454745,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454746,"byte_end":454780,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454781,"byte_end":454836,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454837,"byte_end":454840,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454841,"byte_end":454894,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454895,"byte_end":454948,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":454949,"byte_end":455002,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455003,"byte_end":455012,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455013,"byte_end":455020,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455021,"byte_end":455024,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455025,"byte_end":455061,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455062,"byte_end":455065,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455066,"byte_end":455077,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455078,"byte_end":455119,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455120,"byte_end":455163,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455164,"byte_end":455167,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455168,"byte_end":455217,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455218,"byte_end":455239,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455240,"byte_end":455317,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455318,"byte_end":455351,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455352,"byte_end":455355,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455356,"byte_end":455399,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455400,"byte_end":455443,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455444,"byte_end":455487,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455488,"byte_end":455531,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455532,"byte_end":455535,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455536,"byte_end":455565,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455566,"byte_end":455606,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455607,"byte_end":455616,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":455617,"byte_end":455624,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17000},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456034,"byte_end":456039,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":17002}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":455918,"byte_end":455956,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":455974,"byte_end":456022,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6164},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456208,"byte_end":456213,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456078,"byte_end":456126,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456127,"byte_end":456130,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456131,"byte_end":456200,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6170},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456368,"byte_end":456381,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Empty<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6174},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456478,"byte_end":456487,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6175},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456601,"byte_end":456610,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Empty<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6178},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456712,"byte_end":456717,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Empty<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6216},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457298,"byte_end":457302,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<Fut>(Fut) -> Once<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":456991,"byte_end":457032,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457033,"byte_end":457036,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457037,"byte_end":457044,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457045,"byte_end":457086,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457087,"byte_end":457130,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457131,"byte_end":457134,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457135,"byte_end":457179,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457180,"byte_end":457235,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457236,"byte_end":457272,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457273,"byte_end":457282,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457283,"byte_end":457290,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17006},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457564,"byte_end":457568,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":17008}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6224},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457820,"byte_end":457829,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6225},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":458180,"byte_end":458189,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Once<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6228},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":458399,"byte_end":458412,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Once<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458744,"byte_end":458751,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":17044}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458624,"byte_end":458666,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458684,"byte_end":458732,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6260},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458927,"byte_end":458934,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458795,"byte_end":458849,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458850,"byte_end":458853,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":458854,"byte_end":458919,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6266},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459102,"byte_end":459115,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6270},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459214,"byte_end":459223,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Pending<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6271},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459333,"byte_end":459342,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pending<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6274},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459446,"byte_end":459451,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6302},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459777,"byte_end":459783,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":6304}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459676,"byte_end":459716,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459717,"byte_end":459765,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6309},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459876,"byte_end":459879,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6310},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460471,"byte_end":460478,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459983,"byte_end":460056,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460057,"byte_end":460060,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460061,"byte_end":460120,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460121,"byte_end":460124,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460125,"byte_end":460139,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460140,"byte_end":460143,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460144,"byte_end":460151,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460152,"byte_end":460185,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460186,"byte_end":460214,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460215,"byte_end":460218,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460219,"byte_end":460248,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460249,"byte_end":460252,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460253,"byte_end":460317,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460318,"byte_end":460371,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460372,"byte_end":460393,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460394,"byte_end":460447,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460448,"byte_end":460455,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460456,"byte_end":460463,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460724,"byte_end":460733,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17048},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":461239,"byte_end":461252,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":17050}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6346},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":461413,"byte_end":461422,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6347},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462094,"byte_end":462103,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PollImmediate<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6350},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462282,"byte_end":462295,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6351},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463233,"byte_end":463247,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"fn poll_immediate<S>(S) -> PollImmediate<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462352,"byte_end":462465,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462466,"byte_end":462469,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462470,"byte_end":462565,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462566,"byte_end":462569,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462570,"byte_end":462584,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462585,"byte_end":462588,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462589,"byte_end":462596,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462597,"byte_end":462638,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462639,"byte_end":462682,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462683,"byte_end":462711,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462712,"byte_end":462715,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462716,"byte_end":462789,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462790,"byte_end":462843,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462844,"byte_end":462897,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462898,"byte_end":462935,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462936,"byte_end":462939,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462940,"byte_end":463008,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463009,"byte_end":463037,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463038,"byte_end":463051,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463052,"byte_end":463061,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463062,"byte_end":463114,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463115,"byte_end":463169,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463170,"byte_end":463207,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463208,"byte_end":463217,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":463218,"byte_end":463225,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17087},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":463780,"byte_end":463786,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":17090}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6394},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464812,"byte_end":464818,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":463908,"byte_end":463976,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":463977,"byte_end":464053,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464054,"byte_end":464102,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464103,"byte_end":464106,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464107,"byte_end":464182,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464183,"byte_end":464252,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464253,"byte_end":464280,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464281,"byte_end":464284,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464285,"byte_end":464356,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464357,"byte_end":464377,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464378,"byte_end":464381,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464382,"byte_end":464397,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464398,"byte_end":464401,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464402,"byte_end":464413,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464414,"byte_end":464455,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464456,"byte_end":464511,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464512,"byte_end":464515,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464516,"byte_end":464541,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464542,"byte_end":464568,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464569,"byte_end":464572,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464573,"byte_end":464611,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464612,"byte_end":464615,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464616,"byte_end":464637,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464638,"byte_end":464674,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464675,"byte_end":464727,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464728,"byte_end":464780,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464781,"byte_end":464786,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464787,"byte_end":464796,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":464797,"byte_end":464804,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6401},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465287,"byte_end":465294,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465179,"byte_end":465253,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465258,"byte_end":465275,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6402},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465622,"byte_end":465629,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465360,"byte_end":465428,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465433,"byte_end":465464,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465469,"byte_end":465472,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465477,"byte_end":465550,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465555,"byte_end":465610,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6403},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465976,"byte_end":465987,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465707,"byte_end":465782,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465787,"byte_end":465818,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465823,"byte_end":465826,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465831,"byte_end":465904,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465909,"byte_end":465964,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6404},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466361,"byte_end":466371,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466125,"byte_end":466188,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466193,"byte_end":466196,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466201,"byte_end":466273,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466278,"byte_end":466349,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6408},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466550,"byte_end":466563,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6413},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466763,"byte_end":466772,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Select<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St1::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17133},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467275,"byte_end":467279,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":17132},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467244,"byte_end":467270,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17135},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467317,"byte_end":467322,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":17132},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467285,"byte_end":467312,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":17132},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467229,"byte_end":467237,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":17133},{"krate":0,"index":17135}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467102,"byte_end":467168,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6450},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467403,"byte_end":467409,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467347,"byte_end":467391,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6453},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467708,"byte_end":467715,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<PollNext as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17151},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":468633,"byte_end":468651,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":17156},{"krate":0,"index":17157},{"krate":0,"index":17158},{"krate":0,"index":17159},{"krate":0,"index":17160}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6465},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470970,"byte_end":470990,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: for<'_> FnMut(&'_ mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":468841,"byte_end":468918,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":468919,"byte_end":468999,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469000,"byte_end":469082,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469083,"byte_end":469148,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469149,"byte_end":469152,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469153,"byte_end":469228,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469229,"byte_end":469298,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469299,"byte_end":469326,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469327,"byte_end":469330,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469331,"byte_end":469402,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469403,"byte_end":469423,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469424,"byte_end":469427,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469428,"byte_end":469443,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469444,"byte_end":469447,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469448,"byte_end":469464,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469465,"byte_end":469529,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469530,"byte_end":469533,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469534,"byte_end":469545,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469546,"byte_end":469587,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469588,"byte_end":469667,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469668,"byte_end":469671,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469672,"byte_end":469697,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469698,"byte_end":469724,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469725,"byte_end":469728,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469729,"byte_end":469793,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469794,"byte_end":469868,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469869,"byte_end":469939,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469940,"byte_end":469991,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":469992,"byte_end":470051,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470052,"byte_end":470055,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470056,"byte_end":470119,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470120,"byte_end":470123,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470124,"byte_end":470145,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470146,"byte_end":470201,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470202,"byte_end":470254,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470255,"byte_end":470260,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470261,"byte_end":470270,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470271,"byte_end":470278,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470279,"byte_end":470282,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470283,"byte_end":470302,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470303,"byte_end":470370,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470371,"byte_end":470447,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470448,"byte_end":470451,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470452,"byte_end":470463,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470464,"byte_end":470505,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470506,"byte_end":470585,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470586,"byte_end":470589,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470590,"byte_end":470615,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470616,"byte_end":470642,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470643,"byte_end":470646,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470647,"byte_end":470700,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470701,"byte_end":470704,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470705,"byte_end":470765,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470766,"byte_end":470769,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470770,"byte_end":470791,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470792,"byte_end":470832,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470833,"byte_end":470885,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470886,"byte_end":470938,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470939,"byte_end":470944,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470945,"byte_end":470954,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":470955,"byte_end":470962,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471621,"byte_end":471628,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471513,"byte_end":471587,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471592,"byte_end":471609,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6476},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471966,"byte_end":471973,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471704,"byte_end":471772,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471777,"byte_end":471808,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471813,"byte_end":471816,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471821,"byte_end":471894,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471899,"byte_end":471954,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6477},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472338,"byte_end":472349,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472069,"byte_end":472144,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472149,"byte_end":472180,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472185,"byte_end":472188,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472193,"byte_end":472266,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472271,"byte_end":472326,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6478},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472727,"byte_end":472737,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472491,"byte_end":472554,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472559,"byte_end":472562,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472567,"byte_end":472639,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472644,"byte_end":472715,"line_start":188,"line_end":188,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6484},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":473000,"byte_end":473013,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":474482,"byte_end":474491,"line_start":259,"line_end":259,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St1::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6507},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":475618,"byte_end":475621,"line_start":292,"line_end":292,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6554},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477607,"byte_end":477613,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476165,"byte_end":476235,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476236,"byte_end":476239,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476240,"byte_end":476309,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476310,"byte_end":476391,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476392,"byte_end":476423,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476424,"byte_end":476427,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476428,"byte_end":476507,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476508,"byte_end":476587,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476588,"byte_end":476642,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476643,"byte_end":476646,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476647,"byte_end":476727,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476728,"byte_end":476798,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476799,"byte_end":476821,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476822,"byte_end":476825,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476826,"byte_end":476903,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476904,"byte_end":476976,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":476977,"byte_end":477054,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477055,"byte_end":477115,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477116,"byte_end":477119,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477120,"byte_end":477133,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477134,"byte_end":477137,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477138,"byte_end":477145,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477146,"byte_end":477187,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477188,"byte_end":477231,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477232,"byte_end":477235,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477236,"byte_end":477291,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477292,"byte_end":477315,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477316,"byte_end":477355,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477356,"byte_end":477393,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477394,"byte_end":477433,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477434,"byte_end":477450,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477451,"byte_end":477467,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477468,"byte_end":477477,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477478,"byte_end":477485,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477486,"byte_end":477489,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477490,"byte_end":477542,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477543,"byte_end":477581,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477582,"byte_end":477591,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477592,"byte_end":477599,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17224},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":477960,"byte_end":477966,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":17228},{"krate":0,"index":17229}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6563},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478158,"byte_end":478161,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unfold<T, F, Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478433,"byte_end":478446,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unfold<T, F, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6576},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478742,"byte_end":478751,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Unfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6654},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483017,"byte_end":483031,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6656},{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480951,"byte_end":480985,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480986,"byte_end":480989,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480990,"byte_end":481069,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481070,"byte_end":481141,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481142,"byte_end":481218,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481219,"byte_end":481267,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481268,"byte_end":481271,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481272,"byte_end":481351,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481352,"byte_end":481427,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481428,"byte_end":481506,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481507,"byte_end":481587,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481588,"byte_end":481617,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481618,"byte_end":481621,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481622,"byte_end":481700,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481701,"byte_end":481775,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481776,"byte_end":481851,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481852,"byte_end":481927,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":481928,"byte_end":482003,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482004,"byte_end":482062,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482063,"byte_end":482066,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482067,"byte_end":482140,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482141,"byte_end":482219,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482220,"byte_end":482278,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482279,"byte_end":482352,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482353,"byte_end":482421,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482422,"byte_end":482498,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482499,"byte_end":482567,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482568,"byte_end":482621,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482622,"byte_end":482625,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482626,"byte_end":482692,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482693,"byte_end":482772,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482773,"byte_end":482820,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482821,"byte_end":482824,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482825,"byte_end":482898,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482899,"byte_end":482956,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":482957,"byte_end":483005,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6664},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483539,"byte_end":483542,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483319,"byte_end":483363,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483368,"byte_end":483371,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483376,"byte_end":483451,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483456,"byte_end":483527,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6665},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484039,"byte_end":484042,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483766,"byte_end":483823,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483828,"byte_end":483831,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483836,"byte_end":483899,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483904,"byte_end":483968,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483973,"byte_end":484027,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6666},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484200,"byte_end":484208,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484137,"byte_end":484188,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6667},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484684,"byte_end":484688,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484313,"byte_end":484346,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484351,"byte_end":484354,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484359,"byte_end":484435,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484440,"byte_end":484514,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484519,"byte_end":484592,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484597,"byte_end":484620,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"deprecated(note = \"use `push_back` instead\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484625,"byte_end":484672,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6668},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485089,"byte_end":485098,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"push_back","qualname":"<FuturesOrdered<Fut>>::push_back","value":"fn push_back(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the back of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the back of the queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484758,"byte_end":484803,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484808,"byte_end":484811,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484816,"byte_end":484892,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484897,"byte_end":484971,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":484976,"byte_end":485049,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485054,"byte_end":485077,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6669},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485708,"byte_end":485718,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"push_front","qualname":"<FuturesOrdered<Fut>>::push_front","value":"fn push_front(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the front of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the front of the queue.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485307,"byte_end":485353,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485358,"byte_end":485361,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485366,"byte_end":485442,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485447,"byte_end":485521,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485526,"byte_end":485599,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ task notifications. This future will be the next future to be returned","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485604,"byte_end":485678,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ complete.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":485683,"byte_end":485696,"line_start":161,"line_end":161,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6672},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":486105,"byte_end":486112,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesOrdered<Fut> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6676},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":486242,"byte_end":486251,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6677},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487222,"byte_end":487231,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6680},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487388,"byte_end":487391,"line_start":215,"line_end":215,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesOrdered<Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6683},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487568,"byte_end":487577,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesOrdered<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6688},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487867,"byte_end":487880,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesOrdered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6691},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":488051,"byte_end":488057,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesOrdered<Fut> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6697},{"krate":0,"index":6700},{"krate":0,"index":6701},{"krate":0,"index":6704},{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6711},{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6717},{"krate":0,"index":6720},{"krate":0,"index":6721},{"krate":0,"index":6723},{"krate":0,"index":6726},{"krate":0,"index":6729},{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6736},{"krate":0,"index":6737},{"krate":0,"index":6739},{"krate":0,"index":6740},{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6762},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6769},{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6776},{"krate":0,"index":6779},{"krate":0,"index":6782},{"krate":0,"index":6785},{"krate":0,"index":6788},{"krate":0,"index":6794},{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6871},{"krate":0,"index":6872},{"krate":0,"index":6874},{"krate":0,"index":6877},{"krate":0,"index":6880},{"krate":0,"index":6948},{"krate":0,"index":6951},{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7014},{"krate":0,"index":7017},{"krate":0,"index":7022},{"krate":0,"index":7024},{"krate":0,"index":7026},{"krate":0,"index":7028},{"krate":0,"index":7030},{"krate":0,"index":7032},{"krate":0,"index":7035},{"krate":0,"index":7050},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7070},{"krate":0,"index":7073},{"krate":0,"index":7079},{"krate":0,"index":7085},{"krate":0,"index":7090},{"krate":0,"index":7095},{"krate":0,"index":7098}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179320,"byte_end":179354,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179355,"byte_end":179380,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488214,"byte_end":488246,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488247,"byte_end":488250,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488251,"byte_end":488326,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":488327,"byte_end":488384,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":17317},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":515429,"byte_end":515439,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":17320},{"krate":0,"index":17321},{"krate":0,"index":17322}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":515341,"byte_end":515400,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":17327},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":515676,"byte_end":515683,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":515588,"byte_end":515647,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":17336},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":515824,"byte_end":515834,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":17339},{"krate":0,"index":17340},{"krate":0,"index":17341},{"krate":0,"index":17342}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":515734,"byte_end":515795,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":17347},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516122,"byte_end":516126,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516028,"byte_end":516093,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":17356},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516263,"byte_end":516271,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":17358},{"krate":0,"index":17359}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516177,"byte_end":516234,"line_start":33,"line_end":33,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6816},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516436,"byte_end":516440,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<Fut> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6817},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":517452,"byte_end":517461,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<Fut> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6824},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":517689,"byte_end":517693,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6825},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518366,"byte_end":518375,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6832},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518601,"byte_end":518605,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6833},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518695,"byte_end":518704,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6840},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518923,"byte_end":518927,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinRef as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6841},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519621,"byte_end":519630,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinRef as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6848},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519849,"byte_end":519853,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6849},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519943,"byte_end":519952,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7017},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490251,"byte_end":490267,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489156,"byte_end":489209,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489210,"byte_end":489213,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489214,"byte_end":489282,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489283,"byte_end":489356,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489357,"byte_end":489433,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489434,"byte_end":489478,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489479,"byte_end":489482,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489483,"byte_end":489561,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489562,"byte_end":489620,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489621,"byte_end":489685,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489686,"byte_end":489739,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489740,"byte_end":489819,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489820,"byte_end":489849,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489850,"byte_end":489853,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489854,"byte_end":489924,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":489925,"byte_end":490002,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490003,"byte_end":490054,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490055,"byte_end":490058,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490059,"byte_end":490132,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490133,"byte_end":490190,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490191,"byte_end":490239,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7029},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490616,"byte_end":490625,"line_start":65,"line_end":65,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<FuturesUnordered<FutureObj> as futures_task::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":23,"index":15},"children":[],"decl_id":{"krate":23,"index":16},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7031},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490822,"byte_end":490837,"line_start":72,"line_end":72,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<FuturesUnordered<LocalFutureObj> as futures_task::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":23,"index":18},"children":[],"decl_id":{"krate":23,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7034},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492526,"byte_end":492533,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesUnordered<Fut> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492884,"byte_end":492887,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492613,"byte_end":492662,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492667,"byte_end":492670,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492675,"byte_end":492742,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492747,"byte_end":492821,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492826,"byte_end":492872,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7038},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":493917,"byte_end":493920,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":493779,"byte_end":493834,"line_start":141,"line_end":141,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":493839,"byte_end":493842,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":493847,"byte_end":493905,"line_start":143,"line_end":143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7039},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494084,"byte_end":494092,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494022,"byte_end":494072,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7040},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494675,"byte_end":494679,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494305,"byte_end":494336,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494341,"byte_end":494344,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494349,"byte_end":494419,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494424,"byte_end":494510,"line_start":159,"line_end":159,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494515,"byte_end":494591,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":494596,"byte_end":494663,"line_start":161,"line_end":161,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7041},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":495997,"byte_end":496001,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":495915,"byte_end":495985,"line_start":190,"line_end":190,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":7042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":496199,"byte_end":496211,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":496117,"byte_end":496187,"line_start":198,"line_end":198,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":7043},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":496540,"byte_end":496548,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":496459,"byte_end":496528,"line_start":206,"line_end":206,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7044},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":496755,"byte_end":496767,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":496674,"byte_end":496743,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":504271,"byte_end":504280,"line_start":387,"line_end":387,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7062},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511286,"byte_end":511295,"line_start":542,"line_end":542,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7065},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511446,"byte_end":511449,"line_start":549,"line_end":549,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesUnordered<Fut> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7068},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511650,"byte_end":511655,"line_start":556,"line_end":556,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511597,"byte_end":511638,"line_start":555,"line_end":555,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7072},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":512187,"byte_end":512191,"line_start":575,"line_end":575,"column_start":8,"column_end":12},"name":"drop","qualname":"<FuturesUnordered<Fut> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7078},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":513509,"byte_end":513518,"line_start":601,"line_end":601,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7084},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":513719,"byte_end":513728,"line_start":610,"line_end":610,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7089},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":513910,"byte_end":513919,"line_start":619,"line_end":619,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7092},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514339,"byte_end":514348,"line_start":630,"line_end":630,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesUnordered<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7097},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514631,"byte_end":514644,"line_start":643,"line_end":643,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesUnordered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7100},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514769,"byte_end":514775,"line_start":649,"line_end":649,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesUnordered<Fut> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7105},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":7106},{"krate":0,"index":7107},{"krate":0,"index":7110},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7116},{"krate":0,"index":7119},{"krate":0,"index":7122},{"krate":0,"index":7123},{"krate":0,"index":7126},{"krate":0,"index":7129},{"krate":0,"index":7130},{"krate":0,"index":7133},{"krate":0,"index":7136},{"krate":0,"index":7139},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":7146},{"krate":0,"index":7149},{"krate":0,"index":7152},{"krate":0,"index":17363},{"krate":0,"index":17366},{"krate":0,"index":7155},{"krate":0,"index":7158},{"krate":0,"index":7167},{"krate":0,"index":7170},{"krate":0,"index":7174},{"krate":0,"index":7177},{"krate":0,"index":7179},{"krate":0,"index":7183},{"krate":0,"index":7187},{"krate":0,"index":7192},{"krate":0,"index":7198},{"krate":0,"index":17396},{"krate":0,"index":17401},{"krate":0,"index":17405},{"krate":0,"index":17410},{"krate":0,"index":17414},{"krate":0,"index":17418},{"krate":0,"index":7204},{"krate":0,"index":7210},{"krate":0,"index":7212},{"krate":0,"index":7218},{"krate":0,"index":7220},{"krate":0,"index":7225}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179536,"byte_end":179570,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179571,"byte_end":179596,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":528991,"byte_end":529022,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":17363},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530062,"byte_end":530071,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":17365}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7157},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530202,"byte_end":530205,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectAll<St> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7160},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530553,"byte_end":530556,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530353,"byte_end":530392,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530397,"byte_end":530400,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530405,"byte_end":530475,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530480,"byte_end":530541,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7161},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530766,"byte_end":530769,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530628,"byte_end":530683,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530688,"byte_end":530691,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530696,"byte_end":530754,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7162},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530885,"byte_end":530893,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530824,"byte_end":530873,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7163},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531255,"byte_end":531259,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530952,"byte_end":530983,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530988,"byte_end":530991,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530996,"byte_end":531068,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531073,"byte_end":531147,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531152,"byte_end":531220,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531225,"byte_end":531243,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7164},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531425,"byte_end":531429,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531343,"byte_end":531413,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":7165},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531579,"byte_end":531587,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531498,"byte_end":531567,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7166},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531723,"byte_end":531728,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531670,"byte_end":531711,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7169},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531838,"byte_end":531845,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"default","qualname":"<SelectAll<St> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7173},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531973,"byte_end":531982,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectAll<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7176},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532739,"byte_end":532752,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectAll<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7177},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533435,"byte_end":533445,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532814,"byte_end":532888,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532889,"byte_end":532892,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532893,"byte_end":532972,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532973,"byte_end":533024,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533025,"byte_end":533099,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533100,"byte_end":533159,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533160,"byte_end":533163,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533164,"byte_end":533236,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533237,"byte_end":533287,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533288,"byte_end":533291,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533292,"byte_end":533369,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533370,"byte_end":533427,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7181},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533766,"byte_end":533775,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<St> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = St>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7185},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533920,"byte_end":533926,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"extend","qualname":"<SelectAll<St> as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = St>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7191},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534167,"byte_end":534176,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7197},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534385,"byte_end":534394,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7203},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534593,"byte_end":534602,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17396},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534752,"byte_end":534756,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534662,"byte_end":534723,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":17405},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534909,"byte_end":534916,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534821,"byte_end":534880,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":17414},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535070,"byte_end":535078,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534984,"byte_end":535041,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7208},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535228,"byte_end":535232,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7209},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535490,"byte_end":535499,"line_start":213,"line_end":213,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7216},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535731,"byte_end":535735,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7217},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535993,"byte_end":536002,"line_start":231,"line_end":231,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7223},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536222,"byte_end":536226,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<St> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7224},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536487,"byte_end":536496,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<St> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7248},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":537093,"byte_end":537102,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":536723,"byte_end":536810,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":536811,"byte_end":536814,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":536815,"byte_end":536891,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":536892,"byte_end":536945,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":536946,"byte_end":536949,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":536950,"byte_end":537027,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/abortable.rs","byte_start":537028,"byte_end":537085,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7282},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7287},{"krate":0,"index":7290},{"krate":0,"index":7293},{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7300},{"krate":0,"index":7303},{"krate":0,"index":7304},{"krate":0,"index":7307},{"krate":0,"index":7310},{"krate":0,"index":7313},{"krate":0,"index":7346},{"krate":0,"index":7349},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7387},{"krate":0,"index":7390},{"krate":0,"index":7438},{"krate":0,"index":7441},{"krate":0,"index":7476},{"krate":0,"index":7479},{"krate":0,"index":7512},{"krate":0,"index":7515},{"krate":0,"index":7556},{"krate":0,"index":7559},{"krate":0,"index":7610},{"krate":0,"index":7613},{"krate":0,"index":7649},{"krate":0,"index":7652},{"krate":0,"index":7721},{"krate":0,"index":7724},{"krate":0,"index":7771},{"krate":0,"index":7772},{"krate":0,"index":7775},{"krate":0,"index":7778},{"krate":0,"index":7859},{"krate":0,"index":7862},{"krate":0,"index":7935},{"krate":0,"index":7938},{"krate":0,"index":7991},{"krate":0,"index":7994},{"krate":0,"index":7997},{"krate":0,"index":8031}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10823,"byte_end":10847,"line_start":302,"line_end":302,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537330,"byte_end":537353,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537354,"byte_end":537357,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537358,"byte_end":537383,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537384,"byte_end":537387,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537388,"byte_end":537460,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537461,"byte_end":537540,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":537541,"byte_end":537553,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":17421},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":548834,"byte_end":548839,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":17425},{"krate":0,"index":17426}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":548678,"byte_end":548737,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":548755,"byte_end":548822,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7345},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":549418,"byte_end":549422,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<Close as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17432},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549830,"byte_end":549835,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":17434}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549718,"byte_end":549754,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549772,"byte_end":549818,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7372},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550234,"byte_end":550239,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549872,"byte_end":549935,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549936,"byte_end":549939,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549940,"byte_end":549985,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549986,"byte_end":549989,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":549990,"byte_end":550004,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550005,"byte_end":550008,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550009,"byte_end":550016,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550017,"byte_end":550058,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550059,"byte_end":550098,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550099,"byte_end":550102,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550103,"byte_end":550137,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550138,"byte_end":550163,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550164,"byte_end":550218,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550219,"byte_end":550226,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7379},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550418,"byte_end":550428,"line_start":38,"line_end":38,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Drain<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7380},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550551,"byte_end":550561,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Drain<T> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7381},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550652,"byte_end":550662,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Drain<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550785,"byte_end":550795,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Drain<T> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17438},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551429,"byte_end":551435,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":17441},{"krate":0,"index":17442}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7421},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551715,"byte_end":551722,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551657,"byte_end":551703,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7422},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551853,"byte_end":551860,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551794,"byte_end":551841,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7423},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552018,"byte_end":552029,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551952,"byte_end":552006,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7424},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552401,"byte_end":552411,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552167,"byte_end":552228,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552233,"byte_end":552236,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552241,"byte_end":552310,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552315,"byte_end":552389,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7428},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552541,"byte_end":552544,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fanout<Si1, Si2> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> FmtResult","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7434},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552874,"byte_end":552884,"line_start":65,"line_end":65,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Fanout<Si1, Si2> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7435},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":553296,"byte_end":553306,"line_start":78,"line_end":78,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Fanout<Si1, Si2> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7436},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":553519,"byte_end":553529,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Fanout<Si1, Si2> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7437},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":553941,"byte_end":553951,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Fanout<Si1, Si2> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17483},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554657,"byte_end":554661,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":17487},{"krate":0,"index":17488}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554503,"byte_end":554560,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554578,"byte_end":554645,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7475},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":555327,"byte_end":555331,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<Feed as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17494},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":555992,"byte_end":555997,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":17498},{"krate":0,"index":17499}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":555836,"byte_end":555895,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":555913,"byte_end":555980,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556771,"byte_end":556775,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flush as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557234,"byte_end":557245,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":17509}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7555},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":558116,"byte_end":558129,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SinkErrInto<S, Item, E> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17569},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":558545,"byte_end":558555,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":17572},{"krate":0,"index":17573}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7594},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":559059,"byte_end":559069,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<SinkMapErr<Si, F> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7596},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":559258,"byte_end":559268,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"start_send","qualname":"<SinkMapErr<Si, F> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7598},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":559443,"byte_end":559453,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<SinkMapErr<Si, F> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7600},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":559642,"byte_end":559652,"line_start":49,"line_end":49,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<SinkMapErr<Si, F> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":560062,"byte_end":560075,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SinkMapErr<S, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17628},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560452,"byte_end":560456,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":17632}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560298,"byte_end":560355,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560373,"byte_end":560440,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7648},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560930,"byte_end":560934,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"poll","qualname":"<Send as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7692},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":561885,"byte_end":561892,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":561649,"byte_end":561714,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":561715,"byte_end":561755,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":561806,"byte_end":561873,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7702},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562199,"byte_end":562202,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendAll as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7720},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":563600,"byte_end":563604,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"poll","qualname":"<SendAll as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17638},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":564843,"byte_end":564849,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":17642},{"krate":0,"index":17643}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7754},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565449,"byte_end":565455,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where F: FnMut(T, Item)\n-> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":564940,"byte_end":565009,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565010,"byte_end":565013,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565014,"byte_end":565028,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565029,"byte_end":565032,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565033,"byte_end":565040,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565041,"byte_end":565082,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565083,"byte_end":565122,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565123,"byte_end":565126,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565127,"byte_end":565179,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565180,"byte_end":565200,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565201,"byte_end":565222,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565223,"byte_end":565254,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565255,"byte_end":565302,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565303,"byte_end":565312,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565313,"byte_end":565320,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565321,"byte_end":565351,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565352,"byte_end":565378,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565379,"byte_end":565433,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565434,"byte_end":565441,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7767},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565842,"byte_end":565852,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Unfold<T, F, R> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7768},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565974,"byte_end":565984,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Unfold<T, F, R> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7769},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":566389,"byte_end":566399,"line_start":68,"line_end":68,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Unfold<T, F, R> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7770},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":566905,"byte_end":566915,"line_start":83,"line_end":83,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Unfold<T, F, R> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17696},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":567433,"byte_end":567437,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":17702},{"krate":0,"index":17703},{"krate":0,"index":17704},{"krate":0,"index":17705}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7816},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":567729,"byte_end":567732,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<With<Si, Item, U, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7831},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568341,"byte_end":568346,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"clone","qualname":"<With<Si, Item, U, Fut, F> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7855},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":569670,"byte_end":569680,"line_start":109,"line_end":109,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<With<Si, Item, U, Fut, F> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7856},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":569900,"byte_end":569910,"line_start":115,"line_end":115,"column_start":8,"column_end":18},"name":"start_send","qualname":"<With<Si, Item, U, Fut, F> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, U) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7857},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":570125,"byte_end":570135,"line_start":123,"line_end":123,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<With<Si, Item, U, Fut, F> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7858},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":570355,"byte_end":570365,"line_start":129,"line_end":129,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<With<Si, Item, U, Fut, F> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17779},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":570980,"byte_end":570991,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":17785},{"krate":0,"index":17786},{"krate":0,"index":17787},{"krate":0,"index":17788},{"krate":0,"index":17789}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7901},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":571329,"byte_end":571332,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WithFlatMap<Si, Item, U, St, F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7923},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573285,"byte_end":573298,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<WithFlatMap<S, Item, U, St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7931},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573563,"byte_end":573573,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<WithFlatMap<Si, Item, U, St, F> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573701,"byte_end":573711,"line_start":110,"line_end":110,"column_start":8,"column_end":18},"name":"start_send","qualname":"<WithFlatMap<Si, Item, U, St, F> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, U) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7933},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573928,"byte_end":573938,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<WithFlatMap<Si, Item, U, St, F> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":574132,"byte_end":574142,"line_start":123,"line_end":123,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<WithFlatMap<Si, Item, U, St, F> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17866},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":574726,"byte_end":574732,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":17869},{"krate":0,"index":17870},{"krate":0,"index":17871}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7977},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":575770,"byte_end":575779,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Buffer<S, Item> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7978},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":575907,"byte_end":575916,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Buffer<S, Item> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7982},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576085,"byte_end":576098,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Buffer<S, Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7987},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576256,"byte_end":576266,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Buffer<Si, Item> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7988},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576646,"byte_end":576656,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Buffer<Si, Item> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7989},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576909,"byte_end":576919,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Buffer<Si, Item> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7990},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":577157,"byte_end":577167,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Buffer<Si, Item> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7997},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538647,"byte_end":538654,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":7999},{"krate":0,"index":8004},{"krate":0,"index":8008},{"krate":0,"index":8011},{"krate":0,"index":8013},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8020},{"krate":0,"index":8023},{"krate":0,"index":8025},{"krate":0,"index":8027},{"krate":0,"index":8028},{"krate":0,"index":8029},{"krate":0,"index":8030}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538538,"byte_end":538610,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538611,"byte_end":538636,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7999},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539246,"byte_end":539250,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538679,"byte_end":538726,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538731,"byte_end":538734,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538739,"byte_end":538810,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538815,"byte_end":538866,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538871,"byte_end":538874,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538879,"byte_end":538954,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538959,"byte_end":539035,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539040,"byte_end":539109,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539114,"byte_end":539117,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539122,"byte_end":539194,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539199,"byte_end":539238,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":8004},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540606,"byte_end":540619,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F> where\nF: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>, Self: Sized","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539512,"byte_end":539559,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539564,"byte_end":539567,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539572,"byte_end":539643,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539648,"byte_end":539699,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539704,"byte_end":539707,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539712,"byte_end":539783,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539788,"byte_end":539864,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539869,"byte_end":539900,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539905,"byte_end":539908,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539913,"byte_end":539985,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":539990,"byte_end":540034,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540039,"byte_end":540042,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540047,"byte_end":540061,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540066,"byte_end":540069,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540074,"byte_end":540081,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540086,"byte_end":540127,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540132,"byte_end":540163,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540168,"byte_end":540199,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540204,"byte_end":540247,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540252,"byte_end":540255,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540260,"byte_end":540296,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540301,"byte_end":540304,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540309,"byte_end":540348,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540353,"byte_end":540390,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540395,"byte_end":540402,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540407,"byte_end":540410,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540415,"byte_end":540445,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540450,"byte_end":540463,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540468,"byte_end":540516,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540521,"byte_end":540572,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540577,"byte_end":540586,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":540591,"byte_end":540598,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8008},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541359,"byte_end":541371,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541305,"byte_end":541351,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":8011},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541739,"byte_end":541752,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541558,"byte_end":541633,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541638,"byte_end":541641,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541646,"byte_end":541731,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":8013},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542587,"byte_end":542593,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541938,"byte_end":541987,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":541992,"byte_end":541995,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542000,"byte_end":542066,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542071,"byte_end":542147,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542152,"byte_end":542227,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542232,"byte_end":542270,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542275,"byte_end":542278,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542283,"byte_end":542355,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542360,"byte_end":542399,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542404,"byte_end":542407,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542412,"byte_end":542487,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542492,"byte_end":542549,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542554,"byte_end":542579,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8014},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542787,"byte_end":542792,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542760,"byte_end":542779,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":8015},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543126,"byte_end":543132,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized, Item: Clone,\nSi: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542947,"byte_end":542982,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542987,"byte_end":542990,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":542995,"byte_end":543077,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543082,"byte_end":543118,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":8017},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543559,"byte_end":543564,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543358,"byte_end":543407,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543412,"byte_end":543415,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543420,"byte_end":543501,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543506,"byte_end":543551,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8018},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544046,"byte_end":544050,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543719,"byte_end":543792,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543797,"byte_end":543835,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543840,"byte_end":543843,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543848,"byte_end":543922,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543927,"byte_end":543988,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":543993,"byte_end":544038,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544527,"byte_end":544531,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544221,"byte_end":544287,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544292,"byte_end":544308,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544313,"byte_end":544316,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544321,"byte_end":544384,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544389,"byte_end":544454,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544459,"byte_end":544519,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8020},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545438,"byte_end":545446,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"fn send_all<'a, St>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Self::Error> + Stream + Unpin + ?Sized,\nSelf: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544702,"byte_end":544777,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544782,"byte_end":544820,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544825,"byte_end":544828,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544833,"byte_end":544906,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544911,"byte_end":544987,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":544992,"byte_end":545066,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545071,"byte_end":545149,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545154,"byte_end":545237,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545242,"byte_end":545245,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545250,"byte_end":545308,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545313,"byte_end":545388,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545393,"byte_end":545430,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":8023},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546244,"byte_end":546253,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":545971,"byte_end":546042,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546047,"byte_end":546068,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546073,"byte_end":546076,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546081,"byte_end":546159,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546164,"byte_end":546236,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":8025},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546721,"byte_end":546731,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546444,"byte_end":546520,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546525,"byte_end":546546,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546551,"byte_end":546554,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546559,"byte_end":546636,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":546641,"byte_end":546713,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":8027},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547376,"byte_end":547392,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"fn poll_ready_unpin(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>\nwhere Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547278,"byte_end":547348,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547353,"byte_end":547368,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8028},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547643,"byte_end":547659,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547545,"byte_end":547615,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547620,"byte_end":547635,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8029},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547896,"byte_end":547912,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"fn poll_flush_unpin(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>\nwhere Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547798,"byte_end":547868,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":547873,"byte_end":547888,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8030},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":548163,"byte_end":548179,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"fn poll_close_unpin(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>\nwhere Self: Unpin","parent":{"krate":0,"index":7997},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":548065,"byte_end":548135,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":548140,"byte_end":548155,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":8042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8043},{"krate":0,"index":8044},{"krate":0,"index":8047},{"krate":0,"index":8050},{"krate":0,"index":8053},{"krate":0,"index":8056},{"krate":0,"index":8059},{"krate":0,"index":8060},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8069},{"krate":0,"index":8072},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8084},{"krate":0,"index":8087},{"krate":0,"index":8090},{"krate":0,"index":8091},{"krate":0,"index":8094},{"krate":0,"index":8097},{"krate":0,"index":8100},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8149}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577400,"byte_end":577433,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577434,"byte_end":577437,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577438,"byte_end":577463,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577464,"byte_end":577467,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577468,"byte_end":577516,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577517,"byte_end":577570,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577571,"byte_end":577619,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577620,"byte_end":577667,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577668,"byte_end":577671,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577672,"byte_end":577746,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/mod.rs","byte_start":577747,"byte_end":577819,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":8135},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579069,"byte_end":579077,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":8136},{"krate":0,"index":8138}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579026,"byte_end":579058,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8136},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580252,"byte_end":580257,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where Fut: Future<Output =\n()> + Send + 'static","parent":{"krate":0,"index":8135},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579091,"byte_end":579156,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579161,"byte_end":579176,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579181,"byte_end":579184,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579189,"byte_end":579259,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579264,"byte_end":579283,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579288,"byte_end":579291,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579296,"byte_end":579365,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579370,"byte_end":579443,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579448,"byte_end":579487,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579492,"byte_end":579495,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579500,"byte_end":579566,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579571,"byte_end":579637,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579642,"byte_end":579713,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579718,"byte_end":579774,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579779,"byte_end":579782,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579787,"byte_end":579794,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579799,"byte_end":579806,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579811,"byte_end":579849,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579854,"byte_end":579886,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579891,"byte_end":579894,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579899,"byte_end":579945,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579950,"byte_end":579953,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579958,"byte_end":579995,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580000,"byte_end":580036,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580041,"byte_end":580048,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580053,"byte_end":580202,"line_start":46,"line_end":46,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580207,"byte_end":580214,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580219,"byte_end":580244,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8138},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581541,"byte_end":581558,"line_start":80,"line_end":80,"column_start":8,"column_end":25},"name":"spawn_with_handle","qualname":"::task::spawn::SpawnExt::spawn_with_handle","value":"fn spawn_with_handle<Fut>(&Self, Fut)\n-> Result<RemoteHandle<Fut::Output>, SpawnError> where Fut: Future + Send +\n'static, Fut::Output: Send","parent":{"krate":0,"index":8135},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580444,"byte_end":580517,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580522,"byte_end":580578,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580583,"byte_end":580586,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580591,"byte_end":580697,"line_start":59,"line_end":59,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580702,"byte_end":580802,"line_start":60,"line_end":60,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580807,"byte_end":580856,"line_start":61,"line_end":61,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580861,"byte_end":580864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580869,"byte_end":580876,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580881,"byte_end":580888,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::{block_on, ThreadPool};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580893,"byte_end":580943,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ use futures::future;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580948,"byte_end":580972,"line_start":66,"line_end":66,"column_start":5,"column_end":29}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":580977,"byte_end":581009,"line_start":67,"line_end":67,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581014,"byte_end":581017,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581022,"byte_end":581068,"line_start":69,"line_end":69,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581073,"byte_end":581076,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581081,"byte_end":581115,"line_start":71,"line_end":71,"column_start":5,"column_end":39}},{"value":"/ let join_handle_fut = executor.spawn_with_handle(future).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581120,"byte_end":581190,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(block_on(join_handle_fut), 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581195,"byte_end":581240,"line_start":73,"line_end":73,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581245,"byte_end":581252,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581257,"byte_end":581406,"line_start":75,"line_end":75,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581411,"byte_end":581418,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581423,"byte_end":581450,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":581510,"byte_end":581533,"line_start":79,"line_end":79,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":8140},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582189,"byte_end":582202,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":8141},{"krate":0,"index":8143}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582141,"byte_end":582178,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8141},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583245,"byte_end":583256,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":8140},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582221,"byte_end":582286,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582291,"byte_end":582306,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582311,"byte_end":582314,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582319,"byte_end":582389,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582394,"byte_end":582413,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582418,"byte_end":582421,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582426,"byte_end":582495,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582500,"byte_end":582573,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582578,"byte_end":582617,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582622,"byte_end":582625,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582630,"byte_end":582696,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582701,"byte_end":582767,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582772,"byte_end":582843,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582848,"byte_end":582904,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582909,"byte_end":582912,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582917,"byte_end":582924,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582929,"byte_end":582966,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582971,"byte_end":583008,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583013,"byte_end":583016,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583021,"byte_end":583057,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583062,"byte_end":583099,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583104,"byte_end":583107,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583112,"byte_end":583149,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583154,"byte_end":583195,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583200,"byte_end":583207,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583212,"byte_end":583237,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8143},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584375,"byte_end":584398,"line_start":158,"line_end":158,"column_start":8,"column_end":31},"name":"spawn_local_with_handle","qualname":"::task::spawn::LocalSpawnExt::spawn_local_with_handle","value":"fn spawn_local_with_handle<Fut>(&Self, Fut)\n-> Result<RemoteHandle<Fut::Output>, SpawnError> where Fut: Future + 'static","parent":{"krate":0,"index":8140},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583447,"byte_end":583520,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583525,"byte_end":583581,"line_start":138,"line_end":138,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583586,"byte_end":583589,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583594,"byte_end":583700,"line_start":140,"line_end":140,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583705,"byte_end":583805,"line_start":141,"line_end":141,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583810,"byte_end":583859,"line_start":142,"line_end":142,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583864,"byte_end":583867,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583872,"byte_end":583879,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583884,"byte_end":583921,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583926,"byte_end":583963,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583968,"byte_end":583971,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut executor = LocalPool::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":583976,"byte_end":584016,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584021,"byte_end":584058,"line_start":149,"line_end":149,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584063,"byte_end":584066,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584071,"byte_end":584100,"line_start":151,"line_end":151,"column_start":5,"column_end":34}},{"value":"/ let join_handle_fut = spawner.spawn_local_with_handle(future).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584105,"byte_end":584180,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(executor.run_until(join_handle_fut), 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584185,"byte_end":584240,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584245,"byte_end":584252,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584257,"byte_end":584284,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":584344,"byte_end":584367,"line_start":157,"line_end":157,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":8152},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","parent":null,"children":[{"krate":0,"index":8153}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584661,"byte_end":584703,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584704,"byte_end":584707,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584708,"byte_end":584774,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":8153},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585411,"byte_end":585416,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584776,"byte_end":584811,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584812,"byte_end":584815,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584816,"byte_end":584891,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584892,"byte_end":584929,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584930,"byte_end":584933,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584934,"byte_end":584998,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":584999,"byte_end":585002,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585003,"byte_end":585074,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585075,"byte_end":585126,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585127,"byte_end":585219,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585220,"byte_end":585223,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585224,"byte_end":585295,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/never.rs","byte_start":585296,"byte_end":585401,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":8154},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":8155},{"krate":0,"index":8158},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8165},{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8172},{"krate":0,"index":8175},{"krate":0,"index":8178},{"krate":0,"index":8181},{"krate":0,"index":8184},{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8191},{"krate":0,"index":8194},{"krate":0,"index":8197},{"krate":0,"index":8200},{"krate":0,"index":8201},{"krate":0,"index":8203},{"krate":0,"index":8290},{"krate":0,"index":8293},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8388},{"krate":0,"index":8391},{"krate":0,"index":8472},{"krate":0,"index":8475},{"krate":0,"index":8523},{"krate":0,"index":8526},{"krate":0,"index":8582},{"krate":0,"index":8585},{"krate":0,"index":8615},{"krate":0,"index":8618},{"krate":0,"index":8663},{"krate":0,"index":8664},{"krate":0,"index":8667},{"krate":0,"index":8670},{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8712},{"krate":0,"index":8715},{"krate":0,"index":8767},{"krate":0,"index":8768},{"krate":0,"index":8771},{"krate":0,"index":8774},{"krate":0,"index":8834},{"krate":0,"index":8837},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8875},{"krate":0,"index":8878},{"krate":0,"index":8909},{"krate":0,"index":8912},{"krate":0,"index":8942},{"krate":0,"index":8945},{"krate":0,"index":8984},{"krate":0,"index":8987},{"krate":0,"index":9026},{"krate":0,"index":9029},{"krate":0,"index":9059},{"krate":0,"index":9062},{"krate":0,"index":9096},{"krate":0,"index":9099},{"krate":0,"index":9135},{"krate":0,"index":9138},{"krate":0,"index":9183},{"krate":0,"index":9186},{"krate":0,"index":9230},{"krate":0,"index":9233},{"krate":0,"index":9282},{"krate":0,"index":9285},{"krate":0,"index":9323},{"krate":0,"index":9326},{"krate":0,"index":9361},{"krate":0,"index":9362},{"krate":0,"index":9365},{"krate":0,"index":9368},{"krate":0,"index":9402},{"krate":0,"index":9405},{"krate":0,"index":9440},{"krate":0,"index":9441},{"krate":0,"index":9444},{"krate":0,"index":9447},{"krate":0,"index":9526},{"krate":0,"index":9527},{"krate":0,"index":9530},{"krate":0,"index":9531},{"krate":0,"index":9533},{"krate":0,"index":9536},{"krate":0,"index":9579},{"krate":0,"index":9582},{"krate":0,"index":9609},{"krate":0,"index":9612},{"krate":0,"index":9642},{"krate":0,"index":9645},{"krate":0,"index":9679},{"krate":0,"index":9682},{"krate":0,"index":9718},{"krate":0,"index":9721},{"krate":0,"index":9736},{"krate":0,"index":9738},{"krate":0,"index":9749},{"krate":0,"index":9751},{"krate":0,"index":9754},{"krate":0,"index":9756},{"krate":0,"index":9764},{"krate":0,"index":9766},{"krate":0,"index":9768}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585447,"byte_end":585468,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585469,"byte_end":585472,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585473,"byte_end":585546,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585547,"byte_end":585626,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585627,"byte_end":585700,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585701,"byte_end":585776,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585777,"byte_end":585856,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585857,"byte_end":585932,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585933,"byte_end":585961,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585962,"byte_end":585965,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":585966,"byte_end":586045,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586046,"byte_end":586124,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586125,"byte_end":586201,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586202,"byte_end":586244,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586245,"byte_end":586248,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586249,"byte_end":586313,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":586314,"byte_end":586371,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":17923},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613557,"byte_end":613567,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":612908,"byte_end":612973,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":612974,"byte_end":613023,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613024,"byte_end":613095,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613096,"byte_end":613099,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613100,"byte_end":613176,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613177,"byte_end":613248,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613249,"byte_end":613317,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613318,"byte_end":613386,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613387,"byte_end":613462,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613463,"byte_end":613477,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":8248},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614132,"byte_end":614135,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614062,"byte_end":614120,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8249},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614244,"byte_end":614251,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614181,"byte_end":614232,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8250},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614365,"byte_end":614372,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614294,"byte_end":614353,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8251},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614493,"byte_end":614503,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614427,"byte_end":614481,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8254},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614610,"byte_end":614615,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"write","qualname":"<AllowStdIo<T> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8255},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614701,"byte_end":614715,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<AllowStdIo<T> as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8256},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614821,"byte_end":614826,"line_start":71,"line_end":71,"column_start":8,"column_end":13},"name":"flush","qualname":"<AllowStdIo<T> as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8257},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614894,"byte_end":614903,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"write_all","qualname":"<AllowStdIo<T> as std::io::Write>::write_all","value":"fn write_all(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4603},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8258},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614990,"byte_end":614999,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<AllowStdIo<T> as std::io::Write>::write_fmt","value":"fn write_fmt(&mut Self, fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8261},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615165,"byte_end":615175,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8262},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615373,"byte_end":615392,"line_start":94,"line_end":94,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8263},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615610,"byte_end":615620,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8264},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615781,"byte_end":615791,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8267},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615966,"byte_end":615970,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"read","qualname":"<AllowStdIo<T> as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8268},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616059,"byte_end":616072,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<AllowStdIo<T> as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8269},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616184,"byte_end":616195,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<AllowStdIo<T> as std::io::Read>::read_to_end","value":"fn read_to_end(&mut Self, &mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8270},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616294,"byte_end":616308,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"<AllowStdIo<T> as std::io::Read>::read_to_string","value":"fn read_to_string(&mut Self, &mut String) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8271},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616409,"byte_end":616419,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<AllowStdIo<T> as std::io::Read>::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8274},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616575,"byte_end":616584,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<AllowStdIo<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8275},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616785,"byte_end":616803,"line_start":145,"line_end":145,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<AllowStdIo<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8278},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617089,"byte_end":617093,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"seek","qualname":"<AllowStdIo<T> as std::io::Seek>::seek","value":"fn seek(&mut Self, SeekFrom) -> io::Result<u64>","parent":{"krate":1,"index":4615},"children":[],"decl_id":{"krate":1,"index":4616},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8281},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617243,"byte_end":617252,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<AllowStdIo<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":28,"index":47},"children":[],"decl_id":{"krate":28,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8284},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617518,"byte_end":617526,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"<AllowStdIo<T> as std::io::BufRead>::fill_buf","value":"fn fill_buf(&mut Self) -> io::Result<&[u8]>","parent":{"krate":1,"index":4622},"children":[],"decl_id":{"krate":1,"index":4623},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8285},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617600,"byte_end":617607,"line_start":183,"line_end":183,"column_start":8,"column_end":15},"name":"consume","qualname":"<AllowStdIo<T> as std::io::BufRead>::consume","value":"fn consume(&mut Self, usize)","parent":{"krate":1,"index":4622},"children":[],"decl_id":{"krate":1,"index":4624},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8288},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617744,"byte_end":617757,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<AllowStdIo<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8289},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617981,"byte_end":617988,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"consume","qualname":"<AllowStdIo<T> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17956},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619369,"byte_end":619378,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":17958},{"krate":0,"index":17959},{"krate":0,"index":17960},{"krate":0,"index":17961}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8351},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619673,"byte_end":619676,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619531,"byte_end":619623,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619628,"byte_end":619661,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8352},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619838,"byte_end":619851,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619761,"byte_end":619826,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8353},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620357,"byte_end":620363,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620197,"byte_end":620253,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620258,"byte_end":620261,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620266,"byte_end":620345,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8357},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":621012,"byte_end":621025,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"fn seek_relative(Pin<&mut Self>, i64) -> SeeKRelative<, R>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620683,"byte_end":620770,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620775,"byte_end":620845,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620850,"byte_end":620934,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620939,"byte_end":621000,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8358},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":621495,"byte_end":621513,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"fn poll_seek_relative(Pin<&mut Self>, &mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":621155,"byte_end":621253,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":621258,"byte_end":621328,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":621333,"byte_end":621417,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":621422,"byte_end":621483,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8363},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":622256,"byte_end":622265,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8364},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":622965,"byte_end":622983,"line_start":129,"line_end":129,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8368},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":623667,"byte_end":623680,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8369},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624330,"byte_end":624337,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"consume","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8374},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624593,"byte_end":624596,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufReader<R> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8377},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":626092,"byte_end":626101,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufReader<R> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":28,"index":47},"children":[],"decl_id":{"krate":28,"index":48},"docs":" Seek to an offset, in bytes, in the underlying reader.","sig":null,"attributes":[{"value":"/ Seek to an offset, in bytes, in the underlying reader.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624915,"byte_end":624973,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624978,"byte_end":624981,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The position used for seeking with `SeekFrom::Current(_)` is the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624986,"byte_end":625054,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ position the underlying reader would be at if the `BufReader` had no","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625059,"byte_end":625131,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ internal buffer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625136,"byte_end":625156,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625161,"byte_end":625164,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Seeking always discards the internal buffer, even if the seek position","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625169,"byte_end":625243,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ would otherwise fall within it. This guarantees that calling","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625248,"byte_end":625312,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ `.into_inner()` immediately after a seek yields the underlying reader","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625317,"byte_end":625390,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ at the same position.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625395,"byte_end":625420,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625425,"byte_end":625428,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ To seek without discarding the internal buffer, use","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625433,"byte_end":625488,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/ [`BufReader::seek_relative`](BufReader::seek_relative) or","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625493,"byte_end":625554,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ [`BufReader::poll_seek_relative`](BufReader::poll_seek_relative).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625559,"byte_end":625628,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625633,"byte_end":625636,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ See [`AsyncSeek`](futures_io::AsyncSeek) for more details.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625641,"byte_end":625703,"line_start":197,"line_end":197,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625708,"byte_end":625711,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note: In the edge case where you're seeking with `SeekFrom::Current(n)`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625716,"byte_end":625791,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ where `n` minus the internal buffer length overflows an `i64`, two","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625796,"byte_end":625866,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ seeks will be performed instead of one. If the second seek returns","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625871,"byte_end":625941,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ `Err`, the underlying reader will be left at the same position it would","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":625946,"byte_end":626021,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ have if you called `seek` with `SeekFrom::Current(0)`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":626026,"byte_end":626084,"line_start":203,"line_end":203,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":18009},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":627709,"byte_end":627721,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":18012},{"krate":0,"index":18013},{"krate":0,"index":18014}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":627544,"byte_end":627631,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":627649,"byte_end":627697,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8381},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":627925,"byte_end":627929,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"poll","qualname":"<SeeKRelative as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18019},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":629796,"byte_end":629805,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":18021},{"krate":0,"index":18022},{"krate":0,"index":18023}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8445},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":630080,"byte_end":630083,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":629938,"byte_end":630030,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":630035,"byte_end":630068,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8446},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":630245,"byte_end":630258,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":630168,"byte_end":630233,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8448},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":631381,"byte_end":631387,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":631313,"byte_end":631369,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8457},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":633549,"byte_end":633559,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8458},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":633997,"byte_end":634016,"line_start":167,"line_end":167,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8460},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":634553,"byte_end":634563,"line_start":183,"line_end":183,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8461},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":634742,"byte_end":634752,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8468},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635161,"byte_end":635164,"line_start":203,"line_end":203,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufWriter<W> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8471},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635671,"byte_end":635680,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufWriter<W> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":28,"index":47},"children":[],"decl_id":{"krate":28,"index":48},"docs":" Seek to the offset, in bytes, in the underlying writer.","sig":null,"attributes":[{"value":"/ Seek to the offset, in bytes, in the underlying writer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635526,"byte_end":635585,"line_start":213,"line_end":213,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635590,"byte_end":635593,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Seeking always writes out the internal buffer before seeking.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635598,"byte_end":635663,"line_start":215,"line_end":215,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":18068},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636476,"byte_end":636486,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":18070}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8506},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636741,"byte_end":636744,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636590,"byte_end":636678,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636683,"byte_end":636729,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":8507},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636910,"byte_end":636923,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636832,"byte_end":636898,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":8509},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637497,"byte_end":637503,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637418,"byte_end":637485,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8510},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637681,"byte_end":637688,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637566,"byte_end":637647,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637652,"byte_end":637669,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":8513},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637805,"byte_end":637815,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8514},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":639194,"byte_end":639213,"line_start":100,"line_end":100,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8521},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":640800,"byte_end":640810,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":" Forward to `buf_writer` 's `BufWriter::poll_flush()`\n","sig":null,"attributes":[{"value":"/ Forward to `buf_writer` 's `BufWriter::poll_flush()`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":640736,"byte_end":640792,"line_start":146,"line_end":146,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8522},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":641018,"byte_end":641028,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":" Forward to `buf_writer` 's `BufWriter::poll_close()`\n","sig":null,"attributes":[{"value":"/ Forward to `buf_writer` 's `BufWriter::poll_close()`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":640954,"byte_end":641010,"line_start":151,"line_end":151,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":18104},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":641525,"byte_end":641530,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":18107},{"krate":0,"index":18108},{"krate":0,"index":18109}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8563},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":641896,"byte_end":641903,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":641822,"byte_end":641884,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":8564},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642235,"byte_end":642242,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":641972,"byte_end":642042,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642047,"byte_end":642050,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642055,"byte_end":642128,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642133,"byte_end":642206,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642211,"byte_end":642223,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8565},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642601,"byte_end":642612,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642331,"byte_end":642408,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642413,"byte_end":642416,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642421,"byte_end":642494,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642499,"byte_end":642572,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642577,"byte_end":642589,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8566},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642815,"byte_end":642825,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642747,"byte_end":642803,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8570},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642978,"byte_end":642981,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Chain<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8574},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":643311,"byte_end":643320,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8575},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":643757,"byte_end":643775,"line_start":95,"line_end":95,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8580},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":644391,"byte_end":644404,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8581},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":644837,"byte_end":644844,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"consume","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18153},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645355,"byte_end":645360,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":18156}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645193,"byte_end":645258,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645276,"byte_end":645343,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8614},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645700,"byte_end":645704,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"poll","qualname":"<Close as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8655},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646913,"byte_end":646917,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn copy<R, W>(R, &mut W) -> Copy<, R, W> where R: AsyncRead, W: AsyncWrite +\nUnpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646064,"byte_end":646139,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646140,"byte_end":646143,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646144,"byte_end":646227,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646228,"byte_end":646308,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646309,"byte_end":646381,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646382,"byte_end":646395,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646396,"byte_end":646399,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646400,"byte_end":646447,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646448,"byte_end":646451,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646452,"byte_end":646466,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646467,"byte_end":646470,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646471,"byte_end":646478,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646479,"byte_end":646520,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646521,"byte_end":646572,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646573,"byte_end":646576,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646577,"byte_end":646620,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646621,"byte_end":646668,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646669,"byte_end":646672,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646673,"byte_end":646726,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646727,"byte_end":646753,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646754,"byte_end":646757,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646758,"byte_end":646783,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646784,"byte_end":646837,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646838,"byte_end":646897,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":646898,"byte_end":646905,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":18161},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":647262,"byte_end":647266,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":18165}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8662},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":647478,"byte_end":647482,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<Copy as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8700},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648666,"byte_end":648674,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"fn copy_buf<R, W>(R, &mut W) -> CopyBuf<, R, W> where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":647810,"byte_end":647885,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":647886,"byte_end":647889,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":647890,"byte_end":647976,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":647977,"byte_end":648057,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648058,"byte_end":648130,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648131,"byte_end":648144,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648145,"byte_end":648148,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648149,"byte_end":648196,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648197,"byte_end":648200,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648201,"byte_end":648215,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648216,"byte_end":648219,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648220,"byte_end":648227,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648228,"byte_end":648269,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648270,"byte_end":648321,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648322,"byte_end":648325,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648326,"byte_end":648369,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648370,"byte_end":648417,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648418,"byte_end":648421,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648422,"byte_end":648479,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648480,"byte_end":648506,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648507,"byte_end":648510,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648511,"byte_end":648536,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648537,"byte_end":648590,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648591,"byte_end":648650,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":648651,"byte_end":648658,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":18215},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":649007,"byte_end":649014,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":18219},{"krate":0,"index":18220},{"krate":0,"index":18221}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8707},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":649271,"byte_end":649275,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"poll","qualname":"<CopyBuf as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8758},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651477,"byte_end":651495,"line_start":47,"line_end":47,"column_start":8,"column_end":26},"name":"copy_buf_abortable","qualname":"::io::copy_buf_abortable::copy_buf_abortable","value":"fn copy_buf_abortable<R, W>(R, &mut W)\n-> (CopyBufAbortable<, R, W>, AbortHandle) where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another, with its `AbortHandle`.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another, with its `AbortHandle`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650230,"byte_end":650329,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650330,"byte_end":650333,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650334,"byte_end":650420,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once abort has been requested or the `reader` has hit","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650421,"byte_end":650529,"line_start":14,"line_end":14,"column_start":1,"column_end":109}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650530,"byte_end":650602,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650603,"byte_end":650616,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650617,"byte_end":650620,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned. If aborted, `Aborted` is returned. Otherwise, the underlying error is returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650621,"byte_end":650748,"line_start":18,"line_end":18,"column_start":1,"column_end":128}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650749,"byte_end":650752,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650753,"byte_end":650767,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650768,"byte_end":650771,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650772,"byte_end":650779,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650780,"byte_end":650821,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650822,"byte_end":650873,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ use futures::future::Aborted;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650874,"byte_end":650907,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650908,"byte_end":650911,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650912,"byte_end":650955,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":650956,"byte_end":651003,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651004,"byte_end":651007,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let (fut, abort_handle) = io::copy_buf_abortable(reader, &mut writer);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651008,"byte_end":651082,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ let bytes = fut.await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651083,"byte_end":651109,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651110,"byte_end":651135,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ writer.close().await.unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651136,"byte_end":651170,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ match bytes {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651171,"byte_end":651188,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     Ok(Ok(n)) => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651189,"byte_end":651211,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         assert_eq!(n, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651212,"byte_end":651241,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/         assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651242,"byte_end":651303,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/         Ok(n)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651304,"byte_end":651321,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/     },","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651322,"byte_end":651332,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     Ok(Err(a)) => {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651333,"byte_end":651356,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/         Err::<u64, Aborted>(a)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651357,"byte_end":651391,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651392,"byte_end":651401,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/     Err(e) => panic!(\"{}\", e)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651402,"byte_end":651435,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651436,"byte_end":651441,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ #  }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651442,"byte_end":651461,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651462,"byte_end":651469,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":18277},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":651949,"byte_end":651965,"line_start":63,"line_end":63,"column_start":16,"column_end":32},"name":"CopyBufAbortable","qualname":"::io::copy_buf_abortable::CopyBufAbortable","value":"CopyBufAbortable {  }","parent":null,"children":[{"krate":0,"index":18281},{"krate":0,"index":18282},{"krate":0,"index":18283},{"krate":0,"index":18284}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8766},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":652476,"byte_end":652480,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"poll","qualname":"<CopyBufAbortable as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18343},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655051,"byte_end":655057,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":18345}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654284,"byte_end":654347,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654348,"byte_end":654381,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654382,"byte_end":654385,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654386,"byte_end":654454,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654455,"byte_end":654537,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654538,"byte_end":654617,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654618,"byte_end":654643,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654644,"byte_end":654647,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654648,"byte_end":654714,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654715,"byte_end":654782,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654783,"byte_end":654816,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654817,"byte_end":654820,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654821,"byte_end":654860,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654861,"byte_end":654900,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654901,"byte_end":654942,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":654943,"byte_end":655006,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8812},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655637,"byte_end":655640,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655116,"byte_end":655191,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655196,"byte_end":655199,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655204,"byte_end":655278,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655283,"byte_end":655351,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655356,"byte_end":655394,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655399,"byte_end":655402,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655407,"byte_end":655421,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655426,"byte_end":655429,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655434,"byte_end":655441,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655446,"byte_end":655474,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655479,"byte_end":655482,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655487,"byte_end":655526,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655531,"byte_end":655579,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655584,"byte_end":655613,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655618,"byte_end":655625,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8813},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656064,"byte_end":656074,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655719,"byte_end":655776,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655781,"byte_end":655784,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655789,"byte_end":655803,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655808,"byte_end":655811,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655816,"byte_end":655823,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655828,"byte_end":655856,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655861,"byte_end":655864,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655869,"byte_end":655908,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655913,"byte_end":655961,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655966,"byte_end":655995,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656000,"byte_end":656003,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656008,"byte_end":656040,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656045,"byte_end":656052,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8814},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656482,"byte_end":656489,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656131,"byte_end":656191,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656196,"byte_end":656199,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656204,"byte_end":656218,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656223,"byte_end":656226,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656231,"byte_end":656238,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656243,"byte_end":656271,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656276,"byte_end":656279,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656284,"byte_end":656323,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656328,"byte_end":656376,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656381,"byte_end":656410,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656415,"byte_end":656418,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656423,"byte_end":656458,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656463,"byte_end":656470,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8815},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657061,"byte_end":657068,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656545,"byte_end":656613,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656618,"byte_end":656621,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656626,"byte_end":656699,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656704,"byte_end":656766,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656771,"byte_end":656774,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656779,"byte_end":656793,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656798,"byte_end":656801,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656806,"byte_end":656813,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656818,"byte_end":656846,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656851,"byte_end":656854,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656859,"byte_end":656902,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656907,"byte_end":656955,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656960,"byte_end":656989,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":656994,"byte_end":656997,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657002,"byte_end":657037,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657042,"byte_end":657049,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8816},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657726,"byte_end":657734,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657132,"byte_end":657180,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657185,"byte_end":657188,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657193,"byte_end":657207,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657212,"byte_end":657215,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657220,"byte_end":657227,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657232,"byte_end":657273,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657278,"byte_end":657332,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657337,"byte_end":657340,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657345,"byte_end":657397,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657402,"byte_end":657405,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657410,"byte_end":657445,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657450,"byte_end":657453,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657458,"byte_end":657501,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657506,"byte_end":657541,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657546,"byte_end":657549,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657554,"byte_end":657598,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657603,"byte_end":657638,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657643,"byte_end":657702,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657707,"byte_end":657714,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8817},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658202,"byte_end":658214,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657792,"byte_end":657829,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657834,"byte_end":657837,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657842,"byte_end":657856,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657861,"byte_end":657864,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657869,"byte_end":657876,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657881,"byte_end":657909,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657914,"byte_end":657917,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657922,"byte_end":657974,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657979,"byte_end":657982,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":657987,"byte_end":658022,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658027,"byte_end":658030,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658035,"byte_end":658060,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658065,"byte_end":658100,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658105,"byte_end":658108,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658113,"byte_end":658138,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658143,"byte_end":658178,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658183,"byte_end":658190,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8820},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658359,"byte_end":658368,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<Cursor<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":28,"index":47},"children":[],"decl_id":{"krate":28,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8823},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658773,"byte_end":658782,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8824},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658980,"byte_end":658998,"line_start":176,"line_end":176,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8827},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":659290,"byte_end":659303,"line_start":189,"line_end":189,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8828},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":659460,"byte_end":659467,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"consume","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8861},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":660984,"byte_end":660989,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8862}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":660883,"byte_end":660923,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":660924,"byte_end":660972,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":8863},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661549,"byte_end":661554,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661010,"byte_end":661057,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661058,"byte_end":661061,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661062,"byte_end":661134,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661135,"byte_end":661138,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661139,"byte_end":661153,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661154,"byte_end":661157,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661158,"byte_end":661223,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661224,"byte_end":661227,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661228,"byte_end":661235,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661236,"byte_end":661277,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661278,"byte_end":661320,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661321,"byte_end":661324,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661325,"byte_end":661360,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661361,"byte_end":661394,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661395,"byte_end":661441,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661442,"byte_end":661473,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661474,"byte_end":661533,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661534,"byte_end":661541,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8865},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661643,"byte_end":661652,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Empty as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661626,"byte_end":661635,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8867},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661857,"byte_end":661870,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Empty as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661840,"byte_end":661849,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8868},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661999,"byte_end":662006,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"consume","qualname":"<Empty as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661982,"byte_end":661991,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8870},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":662080,"byte_end":662083,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Empty as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18371},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662483,"byte_end":662490,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":18374}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662313,"byte_end":662386,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662404,"byte_end":662471,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8908},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662877,"byte_end":662881,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<FillBuf as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18379},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664262,"byte_end":664267,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":18382}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664100,"byte_end":664165,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664183,"byte_end":664250,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8941},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664620,"byte_end":664624,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flush as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18394},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":665250,"byte_end":665258,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":18397},{"krate":0,"index":18398}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8980},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":666545,"byte_end":666555,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<IntoSink<W, Item> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8981},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":666722,"byte_end":666732,"line_start":65,"line_end":65,"column_start":8,"column_end":18},"name":"start_send","qualname":"<IntoSink<W, Item> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Item) -> Result<(), Self::Error>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8982},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":666944,"byte_end":666954,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<IntoSink<W, Item> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8983},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":667189,"byte_end":667199,"line_start":77,"line_end":77,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<IntoSink<W, Item> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":24,"index":17},"children":[],"decl_id":{"krate":24,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18443},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/lines.rs","byte_start":667859,"byte_end":667864,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":18445},{"krate":0,"index":18446},{"krate":0,"index":18447},{"krate":0,"index":18448}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9025},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/lines.rs","byte_start":668224,"byte_end":668233,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Lines<R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18491},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669046,"byte_end":669050,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":18494},{"krate":0,"index":18495}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":668887,"byte_end":668949,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":668967,"byte_end":669034,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9058},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669435,"byte_end":669439,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Read as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18500},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":669942,"byte_end":669954,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":18503},{"krate":0,"index":18504}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":669765,"byte_end":669845,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":669863,"byte_end":669930,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9095},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670390,"byte_end":670394,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadVectored as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18509},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":670920,"byte_end":670929,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":18512},{"krate":0,"index":18513}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":670749,"byte_end":670823,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":670841,"byte_end":670908,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9134},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671326,"byte_end":671330,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadExact as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18518},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672257,"byte_end":672265,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":18521},{"krate":0,"index":18522},{"krate":0,"index":18523},{"krate":0,"index":18524}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672085,"byte_end":672160,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672178,"byte_end":672245,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9182},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":673490,"byte_end":673494,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadLine as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18529},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674055,"byte_end":674064,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":18532},{"krate":0,"index":18533},{"krate":0,"index":18534}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":673882,"byte_end":673958,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":673976,"byte_end":674043,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9229},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":676450,"byte_end":676454,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToEnd as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18539},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":677070,"byte_end":677082,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":18542},{"krate":0,"index":18543},{"krate":0,"index":18544},{"krate":0,"index":18545}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":676891,"byte_end":676973,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":676991,"byte_end":677058,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9281},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":678322,"byte_end":678326,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToString as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18550},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":678902,"byte_end":678911,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":18553},{"krate":0,"index":18554},{"krate":0,"index":18555},{"krate":0,"index":18556}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":678728,"byte_end":678805,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":678823,"byte_end":678890,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9322},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":680155,"byte_end":680159,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadUntil as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9353},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680624,"byte_end":680630,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9354}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680522,"byte_end":680563,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680564,"byte_end":680612,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9355},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681187,"byte_end":681193,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680650,"byte_end":680719,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680720,"byte_end":680723,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680724,"byte_end":680804,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680805,"byte_end":680824,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680825,"byte_end":680828,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680829,"byte_end":680843,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680844,"byte_end":680847,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680848,"byte_end":680855,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680856,"byte_end":680897,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680898,"byte_end":680940,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680941,"byte_end":680944,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680945,"byte_end":680973,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":680974,"byte_end":681013,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681014,"byte_end":681064,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681065,"byte_end":681111,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681112,"byte_end":681171,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681172,"byte_end":681179,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":9357},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681288,"byte_end":681297,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Repeat as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681271,"byte_end":681280,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9358},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681553,"byte_end":681571,"line_start":49,"line_end":49,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Repeat as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681536,"byte_end":681545,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9360},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681921,"byte_end":681924,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Repeat as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18561},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682326,"byte_end":682330,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":18564},{"krate":0,"index":18565}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682163,"byte_end":682229,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682247,"byte_end":682314,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9401},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682699,"byte_end":682703,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Seek as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9429},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683100,"byte_end":683104,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":9430}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683000,"byte_end":683039,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683040,"byte_end":683088,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9431},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683712,"byte_end":683716,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683125,"byte_end":683202,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683203,"byte_end":683206,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683207,"byte_end":683302,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683303,"byte_end":683360,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683361,"byte_end":683364,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683365,"byte_end":683379,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683380,"byte_end":683383,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683384,"byte_end":683395,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683396,"byte_end":683437,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683438,"byte_end":683481,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683482,"byte_end":683485,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683486,"byte_end":683523,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683524,"byte_end":683556,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683557,"byte_end":683606,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683607,"byte_end":683636,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683637,"byte_end":683696,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683697,"byte_end":683704,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":9433},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683803,"byte_end":683813,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Sink as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683786,"byte_end":683795,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9434},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683992,"byte_end":684011,"line_start":45,"line_end":45,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Sink as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683975,"byte_end":683984,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9436},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684225,"byte_end":684235,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Sink as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684208,"byte_end":684217,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9437},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684360,"byte_end":684370,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Sink as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684343,"byte_end":684352,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9439},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684511,"byte_end":684514,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sink as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18570},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":684903,"byte_end":684911,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":18572}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":684806,"byte_end":684874,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":18576},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685040,"byte_end":685049,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":18578}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":684943,"byte_end":685011,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9492},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685782,"byte_end":685789,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685536,"byte_end":685613,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685618,"byte_end":685689,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685694,"byte_end":685770,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":9496},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686291,"byte_end":686298,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686045,"byte_end":686122,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686127,"byte_end":686198,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686203,"byte_end":686279,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":9499},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686448,"byte_end":686457,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<ReadHalf<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9501},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686662,"byte_end":686680,"line_start":63,"line_end":63,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<ReadHalf<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9505},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686960,"byte_end":686970,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9507},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687172,"byte_end":687191,"line_start":81,"line_end":81,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9509},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687413,"byte_end":687423,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9511},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687574,"byte_end":687584,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9513},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687886,"byte_end":687898,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687730,"byte_end":687805,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687806,"byte_end":687874,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9516},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687902,"byte_end":687917,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":9513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9517},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687919,"byte_end":687935,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":9513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9520},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687987,"byte_end":687990,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9523},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":688163,"byte_end":688166,"line_start":109,"line_end":109,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18582},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":688778,"byte_end":688782,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":18584},{"krate":0,"index":18585}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9570},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689727,"byte_end":689732,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":688974,"byte_end":689027,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689032,"byte_end":689078,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689083,"byte_end":689086,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689091,"byte_end":689101,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689106,"byte_end":689109,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689114,"byte_end":689191,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689196,"byte_end":689265,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689270,"byte_end":689273,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689278,"byte_end":689292,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689297,"byte_end":689300,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689305,"byte_end":689312,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689317,"byte_end":689358,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689363,"byte_end":689407,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689412,"byte_end":689415,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689420,"byte_end":689467,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689472,"byte_end":689500,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689505,"byte_end":689508,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689513,"byte_end":689547,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689552,"byte_end":689594,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689599,"byte_end":689602,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689607,"byte_end":689639,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689644,"byte_end":689703,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689708,"byte_end":689715,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9571},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690643,"byte_end":690652,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689779,"byte_end":689850,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689855,"byte_end":689929,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":689934,"byte_end":690009,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690014,"byte_end":690038,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690043,"byte_end":690046,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690051,"byte_end":690065,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690070,"byte_end":690073,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690078,"byte_end":690085,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690090,"byte_end":690131,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690136,"byte_end":690180,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690185,"byte_end":690188,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690193,"byte_end":690240,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690245,"byte_end":690273,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690278,"byte_end":690281,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690286,"byte_end":690320,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690325,"byte_end":690367,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690372,"byte_end":690375,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690380,"byte_end":690401,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690406,"byte_end":690438,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690443,"byte_end":690446,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690451,"byte_end":690474,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690479,"byte_end":690521,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690526,"byte_end":690547,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690552,"byte_end":690555,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690560,"byte_end":690619,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690624,"byte_end":690631,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9574},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690807,"byte_end":690816,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Take<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9577},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":691321,"byte_end":691334,"line_start":104,"line_end":104,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Take<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9578},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":691783,"byte_end":691790,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"consume","qualname":"<Take<R> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":28,"index":49},"children":[],"decl_id":{"krate":28,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18626},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693076,"byte_end":693082,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":18628},{"krate":0,"index":18629}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692121,"byte_end":692168,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692169,"byte_end":692172,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692173,"byte_end":692249,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692250,"byte_end":692328,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692329,"byte_end":692405,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692406,"byte_end":692481,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692482,"byte_end":692555,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692556,"byte_end":692587,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692588,"byte_end":692591,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692592,"byte_end":692663,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692664,"byte_end":692743,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692744,"byte_end":692771,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692772,"byte_end":692775,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692776,"byte_end":692850,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692851,"byte_end":692925,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":692926,"byte_end":693005,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693006,"byte_end":693047,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":9595},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693391,"byte_end":693394,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693167,"byte_end":693238,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693243,"byte_end":693253,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693258,"byte_end":693261,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693266,"byte_end":693340,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693345,"byte_end":693379,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":9596},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693573,"byte_end":693580,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693476,"byte_end":693543,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693548,"byte_end":693561,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9597},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693725,"byte_end":693732,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693627,"byte_end":693695,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693700,"byte_end":693713,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9598},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693863,"byte_end":693873,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693791,"byte_end":693851,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":9599},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694014,"byte_end":694019,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693917,"byte_end":693989,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693994,"byte_end":694002,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":9600},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694166,"byte_end":694169,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694074,"byte_end":694141,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694146,"byte_end":694154,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":9601},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694615,"byte_end":694618,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"fn set<R>(&mut Self, R) where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694222,"byte_end":694282,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694287,"byte_end":694290,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694295,"byte_end":694307,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694312,"byte_end":694315,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694320,"byte_end":694393,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694398,"byte_end":694475,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694480,"byte_end":694483,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694488,"byte_end":694545,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":694550,"byte_end":694603,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":9605},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":695246,"byte_end":695252,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Window<T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9608},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":695399,"byte_end":695405,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Window<T> as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut [u8]","parent":{"krate":2,"index":3079},"children":[],"decl_id":{"krate":2,"index":3081},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18633},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695805,"byte_end":695810,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":18636},{"krate":0,"index":18637}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695643,"byte_end":695708,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695726,"byte_end":695793,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9641},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":696192,"byte_end":696196,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Write as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18642},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696701,"byte_end":696714,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":18645},{"krate":0,"index":18646}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696521,"byte_end":696604,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696622,"byte_end":696689,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9678},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":697141,"byte_end":697145,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteVectored as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18651},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697673,"byte_end":697681,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":18654},{"krate":0,"index":18655}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697503,"byte_end":697576,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697594,"byte_end":697661,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9717},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":698069,"byte_end":698073,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAll as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9721},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589254,"byte_end":589266,"line_start":148,"line_end":148,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":9722},{"krate":0,"index":9724},{"krate":0,"index":9726},{"krate":0,"index":9728},{"krate":0,"index":9730},{"krate":0,"index":9732},{"krate":0,"index":9734},{"krate":0,"index":9735}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589172,"byte_end":589243,"line_start":147,"line_end":147,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9722},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590119,"byte_end":590124,"line_start":172,"line_end":172,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589284,"byte_end":589349,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589354,"byte_end":589357,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589362,"byte_end":589442,"line_start":151,"line_end":151,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589447,"byte_end":589519,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589524,"byte_end":589545,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589550,"byte_end":589553,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589558,"byte_end":589572,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589577,"byte_end":589580,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589585,"byte_end":589592,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589597,"byte_end":589638,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589643,"byte_end":589687,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589692,"byte_end":589695,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589700,"byte_end":589744,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589749,"byte_end":589793,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589798,"byte_end":589801,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589806,"byte_end":589850,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589855,"byte_end":589887,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589892,"byte_end":589895,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589900,"byte_end":589933,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589938,"byte_end":589981,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589986,"byte_end":590035,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590040,"byte_end":590099,"line_start":170,"line_end":170,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590104,"byte_end":590111,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9724},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591177,"byte_end":591181,"line_start":204,"line_end":204,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590275,"byte_end":590349,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590354,"byte_end":590390,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590395,"byte_end":590398,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590403,"byte_end":590481,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590486,"byte_end":590513,"line_start":184,"line_end":184,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590518,"byte_end":590521,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590526,"byte_end":590540,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590545,"byte_end":590548,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590553,"byte_end":590560,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590565,"byte_end":590606,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590611,"byte_end":590655,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590660,"byte_end":590663,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590668,"byte_end":590715,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590720,"byte_end":590750,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590755,"byte_end":590758,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590763,"byte_end":590815,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590820,"byte_end":590823,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590828,"byte_end":590899,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590904,"byte_end":590968,"line_start":198,"line_end":198,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":590973,"byte_end":591018,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591023,"byte_end":591048,"line_start":200,"line_end":200,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591053,"byte_end":591093,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591098,"byte_end":591157,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591162,"byte_end":591169,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9726},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591587,"byte_end":591600,"line_start":216,"line_end":216,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored where\nSelf: Unpin","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591349,"byte_end":591433,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591438,"byte_end":591456,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591461,"byte_end":591464,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591469,"byte_end":591547,"line_start":214,"line_end":214,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591552,"byte_end":591579,"line_start":215,"line_end":215,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9728},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593011,"byte_end":593021,"line_start":260,"line_end":260,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where Self: Unpin","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591798,"byte_end":591870,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591875,"byte_end":591933,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591938,"byte_end":591941,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":591946,"byte_end":592020,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592025,"byte_end":592028,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592033,"byte_end":592110,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592115,"byte_end":592137,"line_start":229,"line_end":229,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592142,"byte_end":592145,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592150,"byte_end":592164,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592169,"byte_end":592172,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592177,"byte_end":592184,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592189,"byte_end":592230,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592235,"byte_end":592279,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592284,"byte_end":592287,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592292,"byte_end":592339,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592344,"byte_end":592374,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592379,"byte_end":592382,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592387,"byte_end":592429,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592434,"byte_end":592437,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592442,"byte_end":592479,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592484,"byte_end":592543,"line_start":243,"line_end":243,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592548,"byte_end":592555,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592560,"byte_end":592563,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592568,"byte_end":592608,"line_start":246,"line_end":246,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592613,"byte_end":592616,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592621,"byte_end":592628,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592633,"byte_end":592674,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592679,"byte_end":592729,"line_start":250,"line_end":250,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592734,"byte_end":592737,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592742,"byte_end":592789,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592794,"byte_end":592824,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592829,"byte_end":592832,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592837,"byte_end":592891,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592896,"byte_end":592899,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592904,"byte_end":592977,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592982,"byte_end":592991,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":592996,"byte_end":593003,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9730},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593826,"byte_end":593837,"line_start":286,"line_end":286,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593196,"byte_end":593269,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593274,"byte_end":593277,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593282,"byte_end":593340,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593345,"byte_end":593348,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593353,"byte_end":593367,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593372,"byte_end":593375,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593380,"byte_end":593387,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593392,"byte_end":593433,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593438,"byte_end":593482,"line_start":275,"line_end":275,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593487,"byte_end":593490,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593495,"byte_end":593542,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593547,"byte_end":593590,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593595,"byte_end":593598,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593603,"byte_end":593658,"line_start":280,"line_end":280,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593663,"byte_end":593666,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593671,"byte_end":593696,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593701,"byte_end":593742,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593747,"byte_end":593806,"line_start":284,"line_end":284,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":593811,"byte_end":593818,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9732},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594658,"byte_end":594672,"line_start":312,"line_end":312,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594018,"byte_end":594091,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594096,"byte_end":594099,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594104,"byte_end":594162,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594167,"byte_end":594170,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594175,"byte_end":594189,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594194,"byte_end":594197,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594202,"byte_end":594209,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594214,"byte_end":594255,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594260,"byte_end":594304,"line_start":301,"line_end":301,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594309,"byte_end":594312,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594317,"byte_end":594364,"line_start":303,"line_end":303,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594369,"byte_end":594415,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594420,"byte_end":594423,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594428,"byte_end":594486,"line_start":306,"line_end":306,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594491,"byte_end":594494,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594499,"byte_end":594524,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594529,"byte_end":594574,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594579,"byte_end":594638,"line_start":310,"line_end":310,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594643,"byte_end":594650,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9734},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596015,"byte_end":596020,"line_start":348,"line_end":348,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where Self: AsyncWrite +\nSized","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594858,"byte_end":594929,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594934,"byte_end":594937,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":594942,"byte_end":595012,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595017,"byte_end":595042,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595047,"byte_end":595050,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595055,"byte_end":595069,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595074,"byte_end":595077,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595082,"byte_end":595089,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595094,"byte_end":595135,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595140,"byte_end":595190,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595195,"byte_end":595198,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595203,"byte_end":595273,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595278,"byte_end":595348,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595353,"byte_end":595404,"line_start":332,"line_end":332,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595409,"byte_end":595412,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595417,"byte_end":595460,"line_start":334,"line_end":334,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595465,"byte_end":595528,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595533,"byte_end":595580,"line_start":336,"line_end":336,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595585,"byte_end":595588,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595593,"byte_end":595598,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595603,"byte_end":595674,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595679,"byte_end":595731,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595736,"byte_end":595788,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595793,"byte_end":595798,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595803,"byte_end":595806,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595811,"byte_end":595873,"line_start":344,"line_end":344,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595878,"byte_end":595931,"line_start":345,"line_end":345,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":595936,"byte_end":595995,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596000,"byte_end":596007,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9735},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596801,"byte_end":596805,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":9721},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596208,"byte_end":596278,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596283,"byte_end":596314,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596319,"byte_end":596322,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596327,"byte_end":596341,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596346,"byte_end":596349,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596354,"byte_end":596361,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596366,"byte_end":596407,"line_start":362,"line_end":362,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596412,"byte_end":596456,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596461,"byte_end":596464,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596469,"byte_end":596516,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596521,"byte_end":596549,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596554,"byte_end":596557,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596562,"byte_end":596596,"line_start":368,"line_end":368,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596601,"byte_end":596643,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596648,"byte_end":596651,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596656,"byte_end":596677,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596682,"byte_end":596717,"line_start":372,"line_end":372,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596722,"byte_end":596781,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":596786,"byte_end":596793,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":9738},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597614,"byte_end":597627,"line_start":401,"line_end":401,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":9739},{"krate":0,"index":9740},{"krate":0,"index":9741},{"krate":0,"index":9743},{"krate":0,"index":9745},{"krate":0,"index":9747}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597531,"byte_end":597603,"line_start":400,"line_end":400,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":9739},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598368,"byte_end":598373,"line_start":424,"line_end":424,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":9738},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597646,"byte_end":597711,"line_start":402,"line_end":402,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597716,"byte_end":597719,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597724,"byte_end":597738,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597743,"byte_end":597746,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597751,"byte_end":597758,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597763,"byte_end":597804,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597809,"byte_end":597858,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597863,"byte_end":597900,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597905,"byte_end":597908,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597913,"byte_end":597947,"line_start":411,"line_end":411,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597952,"byte_end":597955,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597960,"byte_end":597965,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597970,"byte_end":598016,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598021,"byte_end":598088,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598093,"byte_end":598136,"line_start":416,"line_end":416,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598141,"byte_end":598184,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598189,"byte_end":598221,"line_start":418,"line_end":418,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598226,"byte_end":598231,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598236,"byte_end":598239,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598244,"byte_end":598284,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598289,"byte_end":598348,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598353,"byte_end":598360,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9740},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598582,"byte_end":598587,"line_start":432,"line_end":432,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":9738},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598509,"byte_end":598574,"line_start":431,"line_end":431,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9741},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598929,"byte_end":598934,"line_start":443,"line_end":443,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":9738},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598723,"byte_end":598794,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598799,"byte_end":598802,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598807,"byte_end":598889,"line_start":441,"line_end":441,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":598894,"byte_end":598921,"line_start":442,"line_end":442,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9743},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599344,"byte_end":599358,"line_start":455,"line_end":455,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":9738},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599100,"byte_end":599186,"line_start":450,"line_end":450,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599191,"byte_end":599209,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599214,"byte_end":599217,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599222,"byte_end":599304,"line_start":453,"line_end":453,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599309,"byte_end":599336,"line_start":454,"line_end":454,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9745},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600204,"byte_end":600213,"line_start":482,"line_end":482,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":9738},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599551,"byte_end":599583,"line_start":462,"line_end":462,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599588,"byte_end":599591,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599596,"byte_end":599677,"line_start":464,"line_end":464,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599682,"byte_end":599704,"line_start":465,"line_end":465,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599709,"byte_end":599712,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599717,"byte_end":599795,"line_start":467,"line_end":467,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599800,"byte_end":599803,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599808,"byte_end":599822,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599827,"byte_end":599830,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599835,"byte_end":599842,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599847,"byte_end":599888,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599893,"byte_end":599938,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599943,"byte_end":599946,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":599951,"byte_end":599998,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600003,"byte_end":600006,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600011,"byte_end":600054,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600059,"byte_end":600062,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600067,"byte_end":600120,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600125,"byte_end":600184,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":600189,"byte_end":600196,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9747},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603757,"byte_end":603766,"line_start":584,"line_end":584,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"fn into_sink<Item>(Self) -> IntoSink<Self, Item> where Item: AsRef<[u8]>,\nSelf: Sized","parent":{"krate":0,"index":9738},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":602798,"byte_end":602887,"line_start":556,"line_end":556,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":602892,"byte_end":602895,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":602900,"byte_end":602972,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":602977,"byte_end":603008,"line_start":559,"line_end":559,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603013,"byte_end":603016,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603021,"byte_end":603095,"line_start":561,"line_end":561,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603100,"byte_end":603112,"line_start":562,"line_end":562,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603117,"byte_end":603120,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603125,"byte_end":603139,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603144,"byte_end":603147,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603152,"byte_end":603159,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603164,"byte_end":603205,"line_start":567,"line_end":567,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603210,"byte_end":603245,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603250,"byte_end":603293,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603298,"byte_end":603301,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603306,"byte_end":603372,"line_start":571,"line_end":571,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603377,"byte_end":603380,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603385,"byte_end":603413,"line_start":573,"line_end":573,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603418,"byte_end":603421,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603426,"byte_end":603479,"line_start":575,"line_end":575,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603484,"byte_end":603487,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603492,"byte_end":603539,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603544,"byte_end":603590,"line_start":578,"line_end":578,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603595,"byte_end":603605,"line_start":579,"line_end":579,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603610,"byte_end":603656,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603661,"byte_end":603668,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603673,"byte_end":603697,"line_start":582,"line_end":582,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":9751},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604069,"byte_end":604081,"line_start":595,"line_end":595,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":9752},{"krate":0,"index":9753}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603987,"byte_end":604058,"line_start":594,"line_end":594,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9752},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604351,"byte_end":604355,"line_start":601,"line_end":601,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":9751},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604099,"byte_end":604168,"line_start":596,"line_end":596,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604173,"byte_end":604226,"line_start":597,"line_end":597,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604231,"byte_end":604234,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604239,"byte_end":604316,"line_start":599,"line_end":599,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604321,"byte_end":604343,"line_start":600,"line_end":600,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":9753},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604693,"byte_end":604708,"line_start":612,"line_end":612,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":9751},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604510,"byte_end":604583,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604588,"byte_end":604612,"line_start":609,"line_end":609,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604617,"byte_end":604620,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604625,"byte_end":604685,"line_start":611,"line_end":611,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":9756},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604960,"byte_end":604975,"line_start":623,"line_end":623,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":9757},{"krate":0,"index":9758},{"krate":0,"index":9759},{"krate":0,"index":9761},{"krate":0,"index":9763}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604875,"byte_end":604949,"line_start":622,"line_end":622,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":9757},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605929,"byte_end":605937,"line_start":647,"line_end":647,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":9756},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604996,"byte_end":605085,"line_start":624,"line_end":624,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605090,"byte_end":605122,"line_start":625,"line_end":625,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605127,"byte_end":605130,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605135,"byte_end":605228,"line_start":627,"line_end":627,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605233,"byte_end":605236,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605241,"byte_end":605252,"line_start":629,"line_end":629,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605257,"byte_end":605298,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605303,"byte_end":605382,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605387,"byte_end":605390,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605395,"byte_end":605483,"line_start":633,"line_end":633,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605488,"byte_end":605491,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605496,"byte_end":605552,"line_start":635,"line_end":635,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605557,"byte_end":605585,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605590,"byte_end":605593,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605598,"byte_end":605648,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605653,"byte_end":605681,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605686,"byte_end":605689,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605694,"byte_end":605750,"line_start":641,"line_end":641,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605755,"byte_end":605783,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605788,"byte_end":605791,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605796,"byte_end":605845,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605850,"byte_end":605909,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":605914,"byte_end":605921,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9758},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606738,"byte_end":606751,"line_start":671,"line_end":671,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":9756},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606080,"byte_end":606158,"line_start":654,"line_end":654,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606163,"byte_end":606166,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606171,"byte_end":606182,"line_start":656,"line_end":656,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606187,"byte_end":606228,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606233,"byte_end":606312,"line_start":658,"line_end":658,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606317,"byte_end":606320,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606325,"byte_end":606394,"line_start":660,"line_end":660,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606399,"byte_end":606402,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606407,"byte_end":606463,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606468,"byte_end":606496,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606501,"byte_end":606504,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606509,"byte_end":606559,"line_start":665,"line_end":665,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606564,"byte_end":606592,"line_start":666,"line_end":666,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606597,"byte_end":606600,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606605,"byte_end":606654,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606659,"byte_end":606718,"line_start":669,"line_end":669,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606723,"byte_end":606730,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9759},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608442,"byte_end":608452,"line_start":719,"line_end":719,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":9756},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606859,"byte_end":606934,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":606939,"byte_end":607006,"line_start":679,"line_end":679,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607011,"byte_end":607108,"line_start":680,"line_end":680,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607113,"byte_end":607116,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607121,"byte_end":607191,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607196,"byte_end":607270,"line_start":683,"line_end":683,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607275,"byte_end":607330,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607335,"byte_end":607338,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607343,"byte_end":607421,"line_start":686,"line_end":686,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607426,"byte_end":607453,"line_start":687,"line_end":687,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607458,"byte_end":607461,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607466,"byte_end":607543,"line_start":689,"line_end":689,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607548,"byte_end":607570,"line_start":690,"line_end":690,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607575,"byte_end":607578,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607583,"byte_end":607597,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607602,"byte_end":607605,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607610,"byte_end":607617,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607622,"byte_end":607663,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607668,"byte_end":607715,"line_start":696,"line_end":696,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607720,"byte_end":607723,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607728,"byte_end":607777,"line_start":698,"line_end":698,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607782,"byte_end":607807,"line_start":699,"line_end":699,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607812,"byte_end":607815,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607820,"byte_end":607843,"line_start":701,"line_end":701,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607848,"byte_end":607909,"line_start":702,"line_end":702,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607914,"byte_end":607943,"line_start":703,"line_end":703,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607948,"byte_end":607979,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":607984,"byte_end":608000,"line_start":705,"line_end":705,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608005,"byte_end":608008,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608013,"byte_end":608036,"line_start":707,"line_end":707,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608041,"byte_end":608102,"line_start":708,"line_end":708,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608107,"byte_end":608136,"line_start":709,"line_end":709,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608141,"byte_end":608171,"line_start":710,"line_end":710,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608176,"byte_end":608192,"line_start":711,"line_end":711,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608197,"byte_end":608200,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608205,"byte_end":608228,"line_start":713,"line_end":713,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608233,"byte_end":608294,"line_start":714,"line_end":714,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608299,"byte_end":608328,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608333,"byte_end":608358,"line_start":716,"line_end":716,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608363,"byte_end":608422,"line_start":717,"line_end":717,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608427,"byte_end":608434,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9761},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610631,"byte_end":610640,"line_start":777,"line_end":777,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where Self: Unpin","parent":{"krate":0,"index":9756},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608649,"byte_end":608724,"line_start":726,"line_end":726,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608729,"byte_end":608800,"line_start":727,"line_end":727,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608805,"byte_end":608900,"line_start":728,"line_end":728,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608905,"byte_end":608908,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608913,"byte_end":608983,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":608988,"byte_end":609063,"line_start":731,"line_end":731,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609068,"byte_end":609138,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609143,"byte_end":609153,"line_start":733,"line_end":733,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609158,"byte_end":609161,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609166,"byte_end":609244,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609249,"byte_end":609276,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609281,"byte_end":609284,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609289,"byte_end":609366,"line_start":738,"line_end":738,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609371,"byte_end":609393,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609398,"byte_end":609401,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609406,"byte_end":609418,"line_start":741,"line_end":741,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609423,"byte_end":609426,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609431,"byte_end":609504,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609509,"byte_end":609582,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609587,"byte_end":609661,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609666,"byte_end":609722,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609727,"byte_end":609730,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609735,"byte_end":609782,"line_start":748,"line_end":748,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609787,"byte_end":609790,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609795,"byte_end":609809,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609814,"byte_end":609817,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609822,"byte_end":609829,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609834,"byte_end":609875,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609880,"byte_end":609927,"line_start":754,"line_end":754,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609932,"byte_end":609935,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609940,"byte_end":609986,"line_start":756,"line_end":756,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":609991,"byte_end":610023,"line_start":757,"line_end":757,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610028,"byte_end":610031,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610036,"byte_end":610059,"line_start":759,"line_end":759,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610064,"byte_end":610118,"line_start":760,"line_end":760,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610123,"byte_end":610152,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610157,"byte_end":610186,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610191,"byte_end":610207,"line_start":763,"line_end":763,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610212,"byte_end":610215,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610220,"byte_end":610243,"line_start":765,"line_end":765,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610248,"byte_end":610302,"line_start":766,"line_end":766,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610307,"byte_end":610336,"line_start":767,"line_end":767,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610341,"byte_end":610368,"line_start":768,"line_end":768,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610373,"byte_end":610389,"line_start":769,"line_end":769,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610394,"byte_end":610397,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610402,"byte_end":610425,"line_start":771,"line_end":771,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610430,"byte_end":610484,"line_start":772,"line_end":772,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610489,"byte_end":610518,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610523,"byte_end":610547,"line_start":774,"line_end":774,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610552,"byte_end":610611,"line_start":775,"line_end":775,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610616,"byte_end":610623,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9763},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":612164,"byte_end":612169,"line_start":816,"line_end":816,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":9756},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610818,"byte_end":610869,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610874,"byte_end":610961,"line_start":785,"line_end":785,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610966,"byte_end":610969,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":610974,"byte_end":611040,"line_start":787,"line_end":787,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611045,"byte_end":611127,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611132,"byte_end":611192,"line_start":789,"line_end":789,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611197,"byte_end":611200,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611205,"byte_end":611240,"line_start":791,"line_end":791,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611245,"byte_end":611267,"line_start":792,"line_end":792,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611272,"byte_end":611275,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611280,"byte_end":611292,"line_start":794,"line_end":794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611297,"byte_end":611300,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611305,"byte_end":611396,"line_start":796,"line_end":796,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611401,"byte_end":611404,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611409,"byte_end":611471,"line_start":798,"line_end":798,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611476,"byte_end":611479,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611484,"byte_end":611498,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611503,"byte_end":611506,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611511,"byte_end":611518,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611523,"byte_end":611564,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611569,"byte_end":611616,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611621,"byte_end":611656,"line_start":805,"line_end":805,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611661,"byte_end":611664,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611669,"byte_end":611724,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611729,"byte_end":611732,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611737,"byte_end":611799,"line_start":809,"line_end":809,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611804,"byte_end":611875,"line_start":810,"line_end":810,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611880,"byte_end":611951,"line_start":811,"line_end":811,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":611956,"byte_end":612027,"line_start":812,"line_end":812,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":612032,"byte_end":612080,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":612085,"byte_end":612144,"line_start":814,"line_end":814,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":612149,"byte_end":612156,"line_start":815,"line_end":815,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":9795},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":9796},{"krate":0,"index":9799},{"krate":0,"index":9800},{"krate":0,"index":9803},{"krate":0,"index":9806},{"krate":0,"index":9809},{"krate":0,"index":9812},{"krate":0,"index":9815},{"krate":0,"index":9818},{"krate":0,"index":9902}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":698589,"byte_end":698636,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":698637,"byte_end":698640,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":698641,"byte_end":698716,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mod.rs","byte_start":698717,"byte_end":698774,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9960},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710515,"byte_end":710520,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":9962},{"krate":0,"index":9963},{"krate":0,"index":9964}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710188,"byte_end":710214,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710215,"byte_end":710218,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710219,"byte_end":710233,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710234,"byte_end":710237,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710238,"byte_end":710317,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710318,"byte_end":710400,"line_start":19,"line_end":19,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710401,"byte_end":710485,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710486,"byte_end":710503,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9967},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710673,"byte_end":710676,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Mutex<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9970},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711011,"byte_end":711015,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"from","qualname":"<Mutex<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9973},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711109,"byte_end":711116,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"default","qualname":"<Mutex<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9987},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711746,"byte_end":711749,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711696,"byte_end":711734,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":9988},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712176,"byte_end":712186,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711930,"byte_end":711985,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711990,"byte_end":711993,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711998,"byte_end":712012,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712017,"byte_end":712020,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712025,"byte_end":712032,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712037,"byte_end":712066,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712071,"byte_end":712074,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712079,"byte_end":712109,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712114,"byte_end":712152,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712157,"byte_end":712164,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9991},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712400,"byte_end":712408,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712272,"byte_end":712316,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712321,"byte_end":712324,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712329,"byte_end":712388,"line_start":102,"line_end":102,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":9992},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712792,"byte_end":712806,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn try_lock_owned(&Arc<Self>) -> Option<OwnedMutexGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712664,"byte_end":712708,"line_start":112,"line_end":112,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712713,"byte_end":712716,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712721,"byte_end":712780,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":9993},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713252,"byte_end":713256,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713087,"byte_end":713123,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713128,"byte_end":713131,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713136,"byte_end":713209,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713214,"byte_end":713240,"line_start":127,"line_end":127,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":9994},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713539,"byte_end":713549,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"fn lock_owned(Arc<Self>) -> OwnedMutexLockFuture<T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713374,"byte_end":713410,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713415,"byte_end":713418,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713423,"byte_end":713496,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713501,"byte_end":713527,"line_start":135,"line_end":135,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":9995},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714193,"byte_end":714200,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713683,"byte_end":713738,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713743,"byte_end":713746,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713751,"byte_end":713826,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713831,"byte_end":713905,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713910,"byte_end":713913,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713918,"byte_end":713932,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713937,"byte_end":713940,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713945,"byte_end":713952,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":713957,"byte_end":713998,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714003,"byte_end":714032,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714037,"byte_end":714040,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714045,"byte_end":714079,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714084,"byte_end":714110,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714115,"byte_end":714155,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714160,"byte_end":714169,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":714174,"byte_end":714181,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9999},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":715929,"byte_end":715949,"line_start":201,"line_end":201,"column_start":12,"column_end":32},"name":"OwnedMutexLockFuture","qualname":"::lock::mutex::OwnedMutexLockFuture","value":"OwnedMutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":10001},{"krate":0,"index":10002}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired, owned version.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired, owned version.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":715821,"byte_end":715917,"line_start":200,"line_end":200,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":10005},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716151,"byte_end":716154,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexLockFuture<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10008},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716603,"byte_end":716616,"line_start":221,"line_end":221,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OwnedMutexLockFuture<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10012},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716771,"byte_end":716775,"line_start":229,"line_end":229,"column_start":8,"column_end":12},"name":"poll","qualname":"<OwnedMutexLockFuture<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10015},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718036,"byte_end":718040,"line_start":265,"line_end":265,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexLockFuture<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10016},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718566,"byte_end":718581,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::lock::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":10018}],"decl_id":null,"docs":" An RAII guard returned by the `lock_owned` and `try_lock_owned` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock_owned` and `try_lock_owned` methods.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718390,"byte_end":718466,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718467,"byte_end":718540,"line_start":277,"line_end":277,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718541,"byte_end":718554,"line_start":278,"line_end":278,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10021},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718696,"byte_end":718699,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexGuard<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10024},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718957,"byte_end":718961,"line_start":293,"line_end":293,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexGuard<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10028},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719087,"byte_end":719092,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedMutexGuard<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10031},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719218,"byte_end":719227,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<OwnedMutexGuard<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10032},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719401,"byte_end":719416,"line_start":312,"line_end":312,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":10035},{"krate":0,"index":10036}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719308,"byte_end":719389,"line_start":311,"line_end":311,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":10039},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719620,"byte_end":719623,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexLockFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10042},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":720066,"byte_end":720079,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MutexLockFuture as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10047},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":720236,"byte_end":720240,"line_start":340,"line_end":340,"column_start":8,"column_end":12},"name":"poll","qualname":"<MutexLockFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10050},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721442,"byte_end":721446,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexLockFuture as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10051},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721951,"byte_end":721961,"line_start":388,"line_end":388,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":10054}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721787,"byte_end":721851,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721852,"byte_end":721925,"line_start":386,"line_end":386,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721926,"byte_end":721939,"line_start":387,"line_end":387,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10058},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722530,"byte_end":722533,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn map<U, F>(Self, F) -> MappedMutexGuard where U: ?Sized,\nF: for<'_> FnOnce(&'_ mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722051,"byte_end":722111,"line_start":393,"line_end":393,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722116,"byte_end":722119,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722124,"byte_end":722137,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722142,"byte_end":722145,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722150,"byte_end":722157,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722162,"byte_end":722203,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722208,"byte_end":722251,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722256,"byte_end":722259,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722264,"byte_end":722317,"line_start":401,"line_end":401,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722322,"byte_end":722327,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722332,"byte_end":722421,"line_start":403,"line_end":403,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722426,"byte_end":722468,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722473,"byte_end":722478,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722483,"byte_end":722492,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722497,"byte_end":722504,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722509,"byte_end":722518,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10063},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723076,"byte_end":723079,"line_start":423,"line_end":423,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10066},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723292,"byte_end":723296,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10070},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723421,"byte_end":723426,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"deref","qualname":"<MutexGuard as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10073},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723551,"byte_end":723560,"line_start":442,"line_end":442,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10074},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723825,"byte_end":723841,"line_start":449,"line_end":449,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":10078},{"krate":0,"index":10079},{"krate":0,"index":10080}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723641,"byte_end":723729,"line_start":447,"line_end":447,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723730,"byte_end":723813,"line_start":448,"line_end":448,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":10085},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724607,"byte_end":724610,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn map<V, F>(Self, F) -> MappedMutexGuard where V: ?Sized,\nF: for<'_> FnOnce(&'_ mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724018,"byte_end":724078,"line_start":456,"line_end":456,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724083,"byte_end":724086,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724091,"byte_end":724104,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724109,"byte_end":724112,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724117,"byte_end":724124,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724129,"byte_end":724170,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724175,"byte_end":724236,"line_start":462,"line_end":462,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724241,"byte_end":724244,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724249,"byte_end":724302,"line_start":464,"line_end":464,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724307,"byte_end":724312,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724317,"byte_end":724406,"line_start":466,"line_end":466,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724411,"byte_end":724501,"line_start":467,"line_end":467,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724506,"byte_end":724545,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724550,"byte_end":724555,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724560,"byte_end":724569,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724574,"byte_end":724581,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":724586,"byte_end":724595,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10091},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725167,"byte_end":725170,"line_start":487,"line_end":487,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedMutexGuard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10095},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725448,"byte_end":725452,"line_start":496,"line_end":496,"column_start":8,"column_end":12},"name":"drop","qualname":"<MappedMutexGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10100},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725597,"byte_end":725602,"line_start":503,"line_end":503,"column_start":8,"column_end":13},"name":"deref","qualname":"<MappedMutexGuard as std::ops::Deref>::deref","value":"fn deref(&Self) -> &U","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10104},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725735,"byte_end":725744,"line_start":509,"line_end":509,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MappedMutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut U","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18681},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":727973,"byte_end":727982,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":18683},{"krate":0,"index":18684}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14845001,"byte_end":14845010,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10169},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729392,"byte_end":729395,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728088,"byte_end":728170,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728175,"byte_end":728243,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728248,"byte_end":728251,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728256,"byte_end":728328,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728333,"byte_end":728416,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728421,"byte_end":728446,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728451,"byte_end":728454,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728459,"byte_end":728474,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728479,"byte_end":728482,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728487,"byte_end":728510,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728515,"byte_end":728518,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728523,"byte_end":728530,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728535,"byte_end":728576,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728581,"byte_end":728640,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728645,"byte_end":728648,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728653,"byte_end":728722,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728727,"byte_end":728792,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728797,"byte_end":728822,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728827,"byte_end":728870,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728875,"byte_end":728884,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728889,"byte_end":728896,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728901,"byte_end":728904,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728909,"byte_end":728932,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728937,"byte_end":728940,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728945,"byte_end":728952,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728957,"byte_end":728998,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729003,"byte_end":729055,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729060,"byte_end":729105,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729110,"byte_end":729113,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729118,"byte_end":729187,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729192,"byte_end":729277,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729282,"byte_end":729307,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729312,"byte_end":729354,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729359,"byte_end":729368,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729373,"byte_end":729380,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10170},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729900,"byte_end":729910,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729490,"byte_end":729554,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729559,"byte_end":729627,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729632,"byte_end":729682,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729687,"byte_end":729741,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729746,"byte_end":729838,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729843,"byte_end":729888,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":18724},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730178,"byte_end":730195,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":18725}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":729988,"byte_end":730038,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730039,"byte_end":730115,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730116,"byte_end":730149,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":18728},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730312,"byte_end":730323,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":18729}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730240,"byte_end":730276,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":10172},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730594,"byte_end":730602,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730380,"byte_end":730454,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730459,"byte_end":730499,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730504,"byte_end":730507,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730512,"byte_end":730582,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":18739},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731157,"byte_end":731164,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731048,"byte_end":731100,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":10174},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731206,"byte_end":731209,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Aborted as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10184},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732493,"byte_end":732497,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"poll","qualname":"<Abortable<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10189},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732717,"byte_end":732726,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Abortable<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10192},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":733298,"byte_end":733303,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732931,"byte_end":732999,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":733004,"byte_end":733007,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":733012,"byte_end":733079,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":733084,"byte_end":733152,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":733157,"byte_end":733231,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":733236,"byte_end":733286,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":10204},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733486,"byte_end":733493,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":10206},{"krate":0,"index":10207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10206},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733508,"byte_end":733514,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":10204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10207},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733523,"byte_end":733532,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10213},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733657,"byte_end":733666,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"call_once","qualname":"<T as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> R","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10214},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733725,"byte_end":733731,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":10216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10216},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733756,"byte_end":733764,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10221},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733871,"byte_end":733879,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<T as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> R","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10231},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735070,"byte_end":735074,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10237},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735137,"byte_end":735144,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OkFn<E> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10242},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735267,"byte_end":735276,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"call_once","qualname":"<OkFn<E> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18770},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735430,"byte_end":735437,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10248},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735585,"byte_end":735594,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"call_once","qualname":"<ChainFn<F, G> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10253},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735784,"byte_end":735792,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<ChainFn<F, G> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18791},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736171,"byte_end":736184,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10265},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736265,"byte_end":736274,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MergeResultFn as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, T>) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18807},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736526,"byte_end":736535,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10271},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736744,"byte_end":736753,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10276},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737015,"byte_end":737023,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18822},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737490,"byte_end":737497,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10289},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737631,"byte_end":737640,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10295},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737816,"byte_end":737824,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18837},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738208,"byte_end":738216,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10310},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738351,"byte_end":738360,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10316},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738541,"byte_end":738549,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18852},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738936,"byte_end":738947,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10332},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739092,"byte_end":739101,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10338},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739340,"byte_end":739348,"line_start":260,"line_end":260,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18864},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739832,"byte_end":739844,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10353},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739990,"byte_end":739999,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10359},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":740240,"byte_end":740248,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18876},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":740992,"byte_end":741006,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10379},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741140,"byte_end":741149,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"call_once","qualname":"<UnwrapOrElseFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10385},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741355,"byte_end":741363,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<UnwrapOrElseFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":10214},"children":[],"decl_id":{"krate":0,"index":10216},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10395},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741771,"byte_end":741777,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10401},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741846,"byte_end":741853,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"default","qualname":"<IntoFn<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10406},"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741988,"byte_end":741997,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"call_once","qualname":"<IntoFn<T> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":10204},"children":[],"decl_id":{"krate":0,"index":10207},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":61467,"byte_end":61474,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70293,"byte_end":70305,"line_start":47,"line_end":47,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70612,"byte_end":70624,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71665,"byte_end":71671,"line_start":86,"line_end":86,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71841,"byte_end":71847,"line_start":92,"line_end":92,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73836,"byte_end":73846,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74047,"byte_end":74053,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74096,"byte_end":74102,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74360,"byte_end":74365,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74519,"byte_end":74529,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74761,"byte_end":74766,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74863,"byte_end":74868,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75112,"byte_end":75118,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75542,"byte_end":75548,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77614,"byte_end":77619,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":79315,"byte_end":79321,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":79473,"byte_end":79479,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":81131,"byte_end":81136,"line_start":270,"line_end":270,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":82930,"byte_end":82936,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83095,"byte_end":83101,"line_start":337,"line_end":337,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83529,"byte_end":83537,"line_start":354,"line_end":354,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83896,"byte_end":83906,"line_start":367,"line_end":367,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106480,"byte_end":106490,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106641,"byte_end":106651,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106774,"byte_end":106784,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107493,"byte_end":107503,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107633,"byte_end":107643,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107886,"byte_end":107896,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":108849,"byte_end":108859,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":109102,"byte_end":109112,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":110149,"byte_end":110159,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112436,"byte_end":112449,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112579,"byte_end":112592,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112835,"byte_end":112848,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88878,"byte_end":88881,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114157,"byte_end":114161,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114757,"byte_end":114761,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114905,"byte_end":114909,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115512,"byte_end":115519,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116122,"byte_end":116129,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116274,"byte_end":116281,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116307,"byte_end":116314,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117068,"byte_end":117077,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117680,"byte_end":117689,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118787,"byte_end":118796,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118997,"byte_end":119006,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120326,"byte_end":120338,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120564,"byte_end":120576,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121689,"byte_end":121701,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121905,"byte_end":121917,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123567,"byte_end":123579,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123677,"byte_end":123689,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":124003,"byte_end":124015,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":124202,"byte_end":124214,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124652,"byte_end":124658,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125352,"byte_end":125358,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125500,"byte_end":125506,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126234,"byte_end":126247,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126813,"byte_end":126826,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":127846,"byte_end":127859,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130031,"byte_end":130036,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130215,"byte_end":130220,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130252,"byte_end":130257,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130354,"byte_end":130359,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138357,"byte_end":138364,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140911,"byte_end":140918,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":141906,"byte_end":141913,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142409,"byte_end":142415,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144851,"byte_end":144857,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":145479,"byte_end":145485,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146048,"byte_end":146057,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147064,"byte_end":147073,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147256,"byte_end":147265,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147920,"byte_end":147929,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":156534,"byte_end":156544,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":159322,"byte_end":159332,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":160904,"byte_end":160914,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161420,"byte_end":161429,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":163268,"byte_end":163277,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164639,"byte_end":164647,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165725,"byte_end":165733,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":167149,"byte_end":167157,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168136,"byte_end":168142,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168481,"byte_end":168487,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168872,"byte_end":168878,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169259,"byte_end":169265,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169506,"byte_end":169512,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169851,"byte_end":169857,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170133,"byte_end":170139,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170674,"byte_end":170680,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170987,"byte_end":170993,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":172352,"byte_end":172358,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":173159,"byte_end":173165,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174472,"byte_end":174478,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174908,"byte_end":174914,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238492,"byte_end":238497,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238723,"byte_end":238728,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238937,"byte_end":238942,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240538,"byte_end":240545,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240787,"byte_end":240794,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240972,"byte_end":240979,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242005,"byte_end":242010,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242358,"byte_end":242363,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242613,"byte_end":242618,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":243743,"byte_end":243749,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":243969,"byte_end":243975,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":244683,"byte_end":244689,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245415,"byte_end":245420,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245641,"byte_end":245646,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245778,"byte_end":245783,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245901,"byte_end":245906,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":246712,"byte_end":246717,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":246873,"byte_end":246878,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":247627,"byte_end":247632,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248380,"byte_end":248389,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":13338},{"krate":0,"index":13339},{"krate":0,"index":13340},{"krate":0,"index":13341}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248575,"byte_end":248584,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248702,"byte_end":248711,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":249364,"byte_end":249373,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":13342},{"krate":0,"index":13343},{"krate":0,"index":13344},{"krate":0,"index":13345}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250152,"byte_end":250158,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250631,"byte_end":250637,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2608},{"krate":0,"index":13407},{"krate":0,"index":13408},{"krate":0,"index":13409},{"krate":0,"index":13410}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250960,"byte_end":250966,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":251303,"byte_end":251309,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":252688,"byte_end":252694,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":13411},{"krate":0,"index":13412},{"krate":0,"index":13413},{"krate":0,"index":13414}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":253481,"byte_end":253490,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":253787,"byte_end":253796,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":13472},{"krate":0,"index":13473},{"krate":0,"index":13474},{"krate":0,"index":13475}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":254063,"byte_end":254072,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":254339,"byte_end":254348,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":255766,"byte_end":255775,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":13476},{"krate":0,"index":13477},{"krate":0,"index":13478},{"krate":0,"index":13479}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256450,"byte_end":256457,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":13529},{"krate":0,"index":13530},{"krate":0,"index":13531},{"krate":0,"index":13532}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256626,"byte_end":256633,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256825,"byte_end":256832,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":257654,"byte_end":257661,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":13533},{"krate":0,"index":13534},{"krate":0,"index":13535},{"krate":0,"index":13536}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258346,"byte_end":258350,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258706,"byte_end":258710,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258971,"byte_end":258975,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":259210,"byte_end":259214,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":260803,"byte_end":260806,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261136,"byte_end":261139,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261392,"byte_end":261395,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261624,"byte_end":261627,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263379,"byte_end":263382,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263712,"byte_end":263715,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263967,"byte_end":263970,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":264199,"byte_end":264202,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266038,"byte_end":266045,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266245,"byte_end":266252,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266454,"byte_end":266461,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268266,"byte_end":268273,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268566,"byte_end":268573,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268804,"byte_end":268811,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":269050,"byte_end":269057,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270158,"byte_end":270162,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":14011},{"krate":0,"index":14012},{"krate":0,"index":14013},{"krate":0,"index":14014}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270659,"byte_end":270663,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270761,"byte_end":270765,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":271451,"byte_end":271455,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":14015},{"krate":0,"index":14016},{"krate":0,"index":14017},{"krate":0,"index":14018}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":271967,"byte_end":271979,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274469,"byte_end":274481,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274601,"byte_end":274613,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275498,"byte_end":275501,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275690,"byte_end":275693,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3147},{"krate":0,"index":14148},{"krate":0,"index":14149},{"krate":0,"index":14150},{"krate":0,"index":14151}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275862,"byte_end":275865,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":276033,"byte_end":276036,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":276578,"byte_end":276581,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3163},{"krate":0,"index":14152},{"krate":0,"index":14153},{"krate":0,"index":14154},{"krate":0,"index":14155}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277148,"byte_end":277152,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277203,"byte_end":277207,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3200}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277358,"byte_end":277362,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277501,"byte_end":277505,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3206},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278156,"byte_end":278170,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278321,"byte_end":278335,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278479,"byte_end":278493,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":279804,"byte_end":279812,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3304},{"krate":0,"index":14305},{"krate":0,"index":14306},{"krate":0,"index":14307},{"krate":0,"index":14308},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285309,"byte_end":285317,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285459,"byte_end":285467,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286252,"byte_end":286260,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":14309},{"krate":0,"index":14310},{"krate":0,"index":14311},{"krate":0,"index":14312}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286626,"byte_end":286630,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286875,"byte_end":286879,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286990,"byte_end":286994,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3335},{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287691,"byte_end":287698,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287946,"byte_end":287953,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288064,"byte_end":288071,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288791,"byte_end":288797,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":289149,"byte_end":289155,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":289424,"byte_end":289430,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":290691,"byte_end":290699,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291019,"byte_end":291027,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291211,"byte_end":291219,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3377}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291590,"byte_end":291600,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292265,"byte_end":292269,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":14533},{"krate":0,"index":14534},{"krate":0,"index":14535},{"krate":0,"index":14536}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292460,"byte_end":292464,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292582,"byte_end":292586,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":293397,"byte_end":293401,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3447},{"krate":0,"index":14537},{"krate":0,"index":14538},{"krate":0,"index":14539},{"krate":0,"index":14540}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294183,"byte_end":294192,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294644,"byte_end":294653,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":14606},{"krate":0,"index":14607},{"krate":0,"index":14608},{"krate":0,"index":14609}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294979,"byte_end":294988,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":295236,"byte_end":295245,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":296859,"byte_end":296868,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":14610},{"krate":0,"index":14611},{"krate":0,"index":14612},{"krate":0,"index":14613}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":297545,"byte_end":297549,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":14654},{"krate":0,"index":14655},{"krate":0,"index":14656},{"krate":0,"index":14657}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":297722,"byte_end":297726,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":298698,"byte_end":298702,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":298950,"byte_end":298954,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3559},{"krate":0,"index":14658},{"krate":0,"index":14659},{"krate":0,"index":14660},{"krate":0,"index":14661}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":299725,"byte_end":299734,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":300182,"byte_end":300191,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":14727},{"krate":0,"index":14728},{"krate":0,"index":14729},{"krate":0,"index":14730}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":300510,"byte_end":300519,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":302038,"byte_end":302047,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3617}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":302403,"byte_end":302412,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":14731},{"krate":0,"index":14732},{"krate":0,"index":14733},{"krate":0,"index":14734}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":303431,"byte_end":303440,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3663}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":303728,"byte_end":303737,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3667},{"krate":0,"index":14788},{"krate":0,"index":14789},{"krate":0,"index":14790},{"krate":0,"index":14791},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305854,"byte_end":305863,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":306895,"byte_end":306904,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":307141,"byte_end":307150,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":14792},{"krate":0,"index":14793},{"krate":0,"index":14794},{"krate":0,"index":14795}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":307846,"byte_end":307850,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308101,"byte_end":308105,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3731},{"krate":0,"index":14853},{"krate":0,"index":14854},{"krate":0,"index":14855},{"krate":0,"index":14856}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308351,"byte_end":308355,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308581,"byte_end":308585,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":309764,"byte_end":309768,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3749},{"krate":0,"index":14857},{"krate":0,"index":14858},{"krate":0,"index":14859},{"krate":0,"index":14860}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310467,"byte_end":310470,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":312056,"byte_end":312059,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3795}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":312254,"byte_end":312257,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":314952,"byte_end":314958,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":14962},{"krate":0,"index":14963},{"krate":0,"index":14964},{"krate":0,"index":14965}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":315466,"byte_end":315472,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":317086,"byte_end":317092,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3852}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":317315,"byte_end":317321,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3856},{"krate":0,"index":14966},{"krate":0,"index":14967},{"krate":0,"index":14968},{"krate":0,"index":14969}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":318064,"byte_end":318075,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3895},{"krate":0,"index":15014},{"krate":0,"index":15015},{"krate":0,"index":15016},{"krate":0,"index":15017}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":318427,"byte_end":318438,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":320605,"byte_end":320616,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3903}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":320839,"byte_end":320850,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3907},{"krate":0,"index":15018},{"krate":0,"index":15019},{"krate":0,"index":15020},{"krate":0,"index":15021}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":321614,"byte_end":321618,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3954}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322104,"byte_end":322108,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3961}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322272,"byte_end":322276,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":15087},{"krate":0,"index":15088},{"krate":0,"index":15089},{"krate":0,"index":15090}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322638,"byte_end":322642,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":323869,"byte_end":323873,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":324247,"byte_end":324251,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":15091},{"krate":0,"index":15092},{"krate":0,"index":15093},{"krate":0,"index":15094}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325054,"byte_end":325069,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4037}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325401,"byte_end":325416,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4040},{"krate":0,"index":15136},{"krate":0,"index":15137},{"krate":0,"index":15138},{"krate":0,"index":15139}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325803,"byte_end":325818,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":327272,"byte_end":327287,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4048}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":327571,"byte_end":327586,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":15140},{"krate":0,"index":15141},{"krate":0,"index":15142},{"krate":0,"index":15143}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":328397,"byte_end":328405,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":328752,"byte_end":328760,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4100},{"krate":0,"index":15185},{"krate":0,"index":15186},{"krate":0,"index":15187},{"krate":0,"index":15188}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":329040,"byte_end":329048,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":330571,"byte_end":330579,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":15189},{"krate":0,"index":15190},{"krate":0,"index":15191},{"krate":0,"index":15192}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":332197,"byte_end":332212,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4194},{"krate":0,"index":4198},{"krate":0,"index":4200},{"krate":0,"index":4202}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":336331,"byte_end":336344,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":336864,"byte_end":336877,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":337275,"byte_end":337285,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":337310,"byte_end":337320,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":337330,"byte_end":337340,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":338391,"byte_end":338401,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4230}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":340002,"byte_end":340015,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":340219,"byte_end":340232,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":341347,"byte_end":341363,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":341837,"byte_end":341853,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4245},{"krate":0,"index":15289},{"krate":0,"index":15290},{"krate":0,"index":15291},{"krate":0,"index":15292}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":342792,"byte_end":342812,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4248}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":343079,"byte_end":343095,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":343300,"byte_end":343316,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":347936,"byte_end":347952,"line_start":502,"line_end":502,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":15293},{"krate":0,"index":15294},{"krate":0,"index":15295},{"krate":0,"index":15296}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":348745,"byte_end":348762,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4305}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349108,"byte_end":349125,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349558,"byte_end":349575,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4315}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349805,"byte_end":349822,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4320},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352046,"byte_end":352057,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352080,"byte_end":352091,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4356}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352524,"byte_end":352535,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353118,"byte_end":353127,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353175,"byte_end":353184,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4371}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353648,"byte_end":353657,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4376},{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":354379,"byte_end":354388,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355995,"byte_end":356007,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4398}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":356183,"byte_end":356195,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4402}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":356444,"byte_end":356456,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":357001,"byte_end":357012,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4452},{"krate":0,"index":15507},{"krate":0,"index":15508},{"krate":0,"index":15509},{"krate":0,"index":15510}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":357204,"byte_end":357215,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":358067,"byte_end":358078,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187867,"byte_end":187868,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397082,"byte_end":397089,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397382,"byte_end":397389,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":15568},{"krate":0,"index":15569},{"krate":0,"index":15570},{"krate":0,"index":15571}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397670,"byte_end":397677,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":398820,"byte_end":398827,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4820}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":399173,"byte_end":399180,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4826},{"krate":0,"index":15572},{"krate":0,"index":15573},{"krate":0,"index":15574},{"krate":0,"index":15575}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":399745,"byte_end":399755,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4859},{"krate":0,"index":15846},{"krate":0,"index":15847},{"krate":0,"index":15848},{"krate":0,"index":15849}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":399948,"byte_end":399958,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4862}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400079,"byte_end":400089,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400513,"byte_end":400523,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4871},{"krate":0,"index":15850},{"krate":0,"index":15851},{"krate":0,"index":15852},{"krate":0,"index":15853}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401188,"byte_end":401194,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4915}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401486,"byte_end":401492,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4920},{"krate":0,"index":16067},{"krate":0,"index":16068},{"krate":0,"index":16069},{"krate":0,"index":16070}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401770,"byte_end":401776,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":403053,"byte_end":403059,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4932}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":403402,"byte_end":403408,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4938},{"krate":0,"index":16071},{"krate":0,"index":16072},{"krate":0,"index":16073},{"krate":0,"index":16074}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":403963,"byte_end":403970,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404024,"byte_end":404031,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404194,"byte_end":404201,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404343,"byte_end":404350,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4981},{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405126,"byte_end":405136,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5020}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405432,"byte_end":405442,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5025}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405687,"byte_end":405697,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407096,"byte_end":407105,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5075}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407501,"byte_end":407510,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5080},{"krate":0,"index":16201},{"krate":0,"index":16202},{"krate":0,"index":16203},{"krate":0,"index":16204}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407753,"byte_end":407762,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5085}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":408019,"byte_end":408028,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":409417,"byte_end":409426,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5099},{"krate":0,"index":16205},{"krate":0,"index":16206},{"krate":0,"index":16207},{"krate":0,"index":16208}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410169,"byte_end":410181,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410481,"byte_end":410493,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5148},{"krate":0,"index":16266},{"krate":0,"index":16267},{"krate":0,"index":16268},{"krate":0,"index":16269}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410690,"byte_end":410702,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5154}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410980,"byte_end":410992,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5160},{"krate":0,"index":5161},{"krate":0,"index":5162}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":412492,"byte_end":412504,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5168},{"krate":0,"index":16270},{"krate":0,"index":16271},{"krate":0,"index":16272},{"krate":0,"index":16273}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413176,"byte_end":413186,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5204},{"krate":0,"index":16314},{"krate":0,"index":16315},{"krate":0,"index":16316},{"krate":0,"index":16317}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413451,"byte_end":413461,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413707,"byte_end":413717,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":414636,"byte_end":414646,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":16318},{"krate":0,"index":16319},{"krate":0,"index":16320},{"krate":0,"index":16321}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415326,"byte_end":415336,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5256}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415476,"byte_end":415486,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415674,"byte_end":415684,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5264},{"krate":0,"index":5265}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_concat.rs","byte_start":416659,"byte_end":416668,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5294}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_concat.rs","byte_start":416887,"byte_end":416896,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5297},{"krate":0,"index":5298}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":418280,"byte_end":418289,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":16455},{"krate":0,"index":16456},{"krate":0,"index":16457},{"krate":0,"index":16458}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":418784,"byte_end":418793,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":420739,"byte_end":420748,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5363}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":420971,"byte_end":420980,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":16459},{"krate":0,"index":16460},{"krate":0,"index":16461},{"krate":0,"index":16462}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421407,"byte_end":421421,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5371}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421566,"byte_end":421580,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5375}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421767,"byte_end":421781,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":422391,"byte_end":422398,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5424}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":422757,"byte_end":422764,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":423044,"byte_end":423051,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":423305,"byte_end":423312,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5442},{"krate":0,"index":5443}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427175,"byte_end":427184,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427446,"byte_end":427455,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5491},{"krate":0,"index":5492}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":429201,"byte_end":429213,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":429669,"byte_end":429681,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5545},{"krate":0,"index":16675},{"krate":0,"index":16676},{"krate":0,"index":16677},{"krate":0,"index":16678}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":430021,"byte_end":430033,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":431532,"byte_end":431544,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5557}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":431911,"byte_end":431923,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5564},{"krate":0,"index":16679},{"krate":0,"index":16680},{"krate":0,"index":16681},{"krate":0,"index":16682}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":432772,"byte_end":432784,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":433236,"byte_end":433248,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":16748},{"krate":0,"index":16749},{"krate":0,"index":16750},{"krate":0,"index":16751}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":433586,"byte_end":433598,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":435205,"byte_end":435217,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":435604,"byte_end":435616,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5632},{"krate":0,"index":16752},{"krate":0,"index":16753},{"krate":0,"index":16754},{"krate":0,"index":16755}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":436505,"byte_end":436523,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5685},{"krate":0,"index":16800},{"krate":0,"index":16801},{"krate":0,"index":16802},{"krate":0,"index":16803}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":436862,"byte_end":436880,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5688},{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":438157,"byte_end":438175,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5694},{"krate":0,"index":16804},{"krate":0,"index":16805},{"krate":0,"index":16806},{"krate":0,"index":16807}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":439086,"byte_end":439097,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":16852},{"krate":0,"index":16853},{"krate":0,"index":16854},{"krate":0,"index":16855}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":439434,"byte_end":439445,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5750},{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":440727,"byte_end":440738,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5756},{"krate":0,"index":16856},{"krate":0,"index":16857},{"krate":0,"index":16858},{"krate":0,"index":16859}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":441608,"byte_end":441628,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5804}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":441993,"byte_end":442013,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5809}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":442252,"byte_end":442272,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5814}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":442720,"byte_end":442740,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5819},{"krate":0,"index":5820}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":446029,"byte_end":446042,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":446246,"byte_end":446259,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5870}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":447910,"byte_end":447923,"line_start":93,"line_end":93,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":448539,"byte_end":448552,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5878},{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363478,"byte_end":363479,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450634,"byte_end":450638,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451260,"byte_end":451264,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452455,"byte_end":452461,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452488,"byte_end":452494,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452802,"byte_end":452808,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6088}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453405,"byte_end":453415,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453459,"byte_end":453469,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6124},{"krate":0,"index":6125}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453783,"byte_end":453793,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456313,"byte_end":456318,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456350,"byte_end":456355,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456440,"byte_end":456445,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456694,"byte_end":456699,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6178}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457638,"byte_end":457642,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457771,"byte_end":457775,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6225}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":458380,"byte_end":458384,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6228}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459043,"byte_end":459050,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459082,"byte_end":459089,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6266}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459174,"byte_end":459181,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6271}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459426,"byte_end":459433,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459820,"byte_end":459826,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459857,"byte_end":459863,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460628,"byte_end":460634,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6316},{"krate":0,"index":6317}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":461330,"byte_end":461343,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462256,"byte_end":462269,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6350}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465156,"byte_end":465162,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466466,"byte_end":466472,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6408}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466651,"byte_end":466657,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6412},{"krate":0,"index":6413}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467332,"byte_end":467340,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6450},{"krate":0,"index":6451}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467690,"byte_end":467698,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467855,"byte_end":467868,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6464}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471465,"byte_end":471483,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477},{"krate":0,"index":6478}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472850,"byte_end":472868,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6484}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":474304,"byte_end":474322,"line_start":251,"line_end":251,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6500},{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":475496,"byte_end":475514,"line_start":286,"line_end":286,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6507}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478085,"byte_end":478091,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6563}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478331,"byte_end":478337,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6569}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478617,"byte_end":478623,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6575},{"krate":0,"index":6576}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480171,"byte_end":480183,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6640}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480288,"byte_end":480300,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480331,"byte_end":480343,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6645}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480466,"byte_end":480478,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480659,"byte_end":480671,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6651},{"krate":0,"index":6652}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483253,"byte_end":483267,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483293,"byte_end":483307,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":6668},{"krate":0,"index":6669}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":486076,"byte_end":486090,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6672}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":486183,"byte_end":486197,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487359,"byte_end":487373,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6680}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487539,"byte_end":487553,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6683}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487838,"byte_end":487852,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6688}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":488022,"byte_end":488036,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/abort.rs","byte_start":515006,"byte_end":515017,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6793}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516391,"byte_end":516399,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":517580,"byte_end":517588,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":517625,"byte_end":517635,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518487,"byte_end":518497,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518545,"byte_end":518552,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518815,"byte_end":518822,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518863,"byte_end":518873,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6841}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519742,"byte_end":519752,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519800,"byte_end":519804,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6847},{"krate":0,"index":6848},{"krate":0,"index":6849}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520063,"byte_end":520067,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520236,"byte_end":520246,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520291,"byte_end":520301,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520347,"byte_end":520357,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520402,"byte_end":520412,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520466,"byte_end":520474,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520523,"byte_end":520531,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":522216,"byte_end":522220,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":522255,"byte_end":522259,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":522291,"byte_end":522295,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6940}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":523428,"byte_end":523432,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6943},{"krate":0,"index":6944}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":524432,"byte_end":524436,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6947}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":525886,"byte_end":525901,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":528569,"byte_end":528584,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7009}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490428,"byte_end":490444,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490485,"byte_end":490501,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490530,"byte_end":490546,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490571,"byte_end":490587,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7029}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490772,"byte_end":490788,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7031}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492495,"byte_end":492511,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7034}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492585,"byte_end":492601,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":504210,"byte_end":504226,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7062}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":508602,"byte_end":508606,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7061}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511415,"byte_end":511431,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7065}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511569,"byte_end":511585,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7068},{"krate":0,"index":7069}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":512156,"byte_end":512172,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7072}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":513822,"byte_end":513838,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514308,"byte_end":514324,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7092}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514600,"byte_end":514616,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7097}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514738,"byte_end":514754,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7100}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530179,"byte_end":530188,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7157}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530333,"byte_end":530342,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7160},{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165},{"krate":0,"index":7166}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531815,"byte_end":531824,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7169}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531923,"byte_end":531932,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7172},{"krate":0,"index":7173}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532716,"byte_end":532725,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7176}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533743,"byte_end":533752,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7181}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533897,"byte_end":533906,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7185}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534089,"byte_end":534098,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535181,"byte_end":535185,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7207},{"krate":0,"index":7208},{"krate":0,"index":7209}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535618,"byte_end":535622,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535677,"byte_end":535684,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7215},{"krate":0,"index":7216},{"krate":0,"index":7217}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536121,"byte_end":536128,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536179,"byte_end":536187,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536615,"byte_end":536623,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":548967,"byte_end":548972,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":549166,"byte_end":549171,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7340}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":549347,"byte_end":549352,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7344},{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550342,"byte_end":550347,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550375,"byte_end":550380,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7382}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551541,"byte_end":551547,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7420},{"krate":0,"index":7421},{"krate":0,"index":7422},{"krate":0,"index":7423},{"krate":0,"index":7424}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552515,"byte_end":552521,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7428}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552733,"byte_end":552739,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7433},{"krate":0,"index":7434},{"krate":0,"index":7435},{"krate":0,"index":7436},{"krate":0,"index":7437}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554818,"byte_end":554822,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554889,"byte_end":554893,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7468},{"krate":0,"index":7469},{"krate":0,"index":7470}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":555257,"byte_end":555261,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7474},{"krate":0,"index":7475}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556163,"byte_end":556168,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556519,"byte_end":556524,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7506}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556700,"byte_end":556705,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7510},{"krate":0,"index":7511}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557365,"byte_end":557376,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7540},{"krate":0,"index":17559},{"krate":0,"index":17560},{"krate":0,"index":17561},{"krate":0,"index":17562}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557633,"byte_end":557644,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7545},{"krate":0,"index":17563},{"krate":0,"index":17564},{"krate":0,"index":17565},{"krate":0,"index":17566}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557848,"byte_end":557859,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7550},{"krate":0,"index":17567},{"krate":0,"index":17568}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":558021,"byte_end":558032,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7555}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":558641,"byte_end":558651,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7586},{"krate":0,"index":17622},{"krate":0,"index":17623},{"krate":0,"index":17624},{"krate":0,"index":17625},{"krate":0,"index":7587}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":558954,"byte_end":558964,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7596},{"krate":0,"index":7598},{"krate":0,"index":7600}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":559920,"byte_end":559930,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7605},{"krate":0,"index":17626},{"krate":0,"index":17627}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":560036,"byte_end":560046,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7609}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560597,"byte_end":560601,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560668,"byte_end":560672,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7643}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560860,"byte_end":560864,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7647},{"krate":0,"index":7648}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562070,"byte_end":562077,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7702}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562516,"byte_end":562523,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562635,"byte_end":562642,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7712},{"krate":0,"index":7713}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":563418,"byte_end":563425,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7720}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565724,"byte_end":565730,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7766},{"krate":0,"index":7767},{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7770}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":567647,"byte_end":567651,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7816}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":567914,"byte_end":567918,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7823}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568255,"byte_end":568259,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7831}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568630,"byte_end":568634,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7838},{"krate":0,"index":17773},{"krate":0,"index":17774}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568818,"byte_end":568822,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":17775},{"krate":0,"index":17776},{"krate":0,"index":17777},{"krate":0,"index":17778},{"krate":0,"index":7846}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":569497,"byte_end":569501,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7854},{"krate":0,"index":7855},{"krate":0,"index":7856},{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":571220,"byte_end":571231,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7901}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":571604,"byte_end":571615,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7908},{"krate":0,"index":17860},{"krate":0,"index":17861},{"krate":0,"index":17862},{"krate":0,"index":17863},{"krate":0,"index":7909}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":572902,"byte_end":572913,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7916},{"krate":0,"index":17864},{"krate":0,"index":17865}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573136,"byte_end":573147,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7923}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573396,"byte_end":573407,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7932},{"krate":0,"index":7933},{"krate":0,"index":7934}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":574951,"byte_end":574957,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7971},{"krate":0,"index":17919},{"krate":0,"index":17920},{"krate":0,"index":17921},{"krate":0,"index":17922},{"krate":0,"index":7972}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":575685,"byte_end":575691,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7976},{"krate":0,"index":7977},{"krate":0,"index":7978}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576021,"byte_end":576027,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7982}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576201,"byte_end":576207,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7988},{"krate":0,"index":7989},{"krate":0,"index":7990}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538512,"byte_end":538513,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":578941,"byte_end":578943,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":578998,"byte_end":579000,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613594,"byte_end":613604,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614042,"byte_end":614052,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8248},{"krate":0,"index":8249},{"krate":0,"index":8250},{"krate":0,"index":8251}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614563,"byte_end":614573,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8258}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615118,"byte_end":615128,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615920,"byte_end":615930,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8267},{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8270},{"krate":0,"index":8271}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616529,"byte_end":616539,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8274},{"krate":0,"index":8275}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617043,"byte_end":617053,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8278}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617197,"byte_end":617207,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8281}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617469,"byte_end":617479,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8284},{"krate":0,"index":8285}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617695,"byte_end":617705,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8288},{"krate":0,"index":8289}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619512,"byte_end":619521,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":18001},{"krate":0,"index":18002},{"krate":0,"index":18003},{"krate":0,"index":18004},{"krate":0,"index":8353},{"krate":0,"index":8354}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620664,"byte_end":620673,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8357},{"krate":0,"index":8358}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":622234,"byte_end":622243,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8363},{"krate":0,"index":8364}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":623645,"byte_end":623654,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8368},{"krate":0,"index":8369}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624484,"byte_end":624493,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":18005},{"krate":0,"index":18006},{"krate":0,"index":18007},{"krate":0,"index":18008}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624571,"byte_end":624580,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8374}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624896,"byte_end":624905,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8377}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":627825,"byte_end":627837,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8380},{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":629919,"byte_end":629928,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8445},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":18060},{"krate":0,"index":18061},{"krate":0,"index":18062},{"krate":0,"index":18063},{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8451},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":633527,"byte_end":633536,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8457},{"krate":0,"index":8458},{"krate":0,"index":8460},{"krate":0,"index":8461}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":634959,"byte_end":634968,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":18064},{"krate":0,"index":18065}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635049,"byte_end":635058,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":18066},{"krate":0,"index":18067}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635139,"byte_end":635148,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8468}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635507,"byte_end":635516,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8471}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636570,"byte_end":636580,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508},{"krate":0,"index":8509},{"krate":0,"index":8510}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637782,"byte_end":637792,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8513},{"krate":0,"index":8514},{"krate":0,"index":8521},{"krate":0,"index":8522}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":641652,"byte_end":641657,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8564},{"krate":0,"index":8565},{"krate":0,"index":8566}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642913,"byte_end":642918,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8570}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":643248,"byte_end":643253,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8574},{"krate":0,"index":8575}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":644322,"byte_end":644327,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8580},{"krate":0,"index":8581}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645438,"byte_end":645443,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645496,"byte_end":645501,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8610}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645643,"byte_end":645648,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8613},{"krate":0,"index":8614}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":647418,"byte_end":647422,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":8661},{"krate":0,"index":8662}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":649145,"byte_end":649152,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8706},{"krate":0,"index":8707}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":652318,"byte_end":652334,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8765},{"krate":0,"index":8766}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655100,"byte_end":655106,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8812},{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658306,"byte_end":658312,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8820}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658599,"byte_end":658605,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8823},{"krate":0,"index":8824}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":659237,"byte_end":659243,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660447,"byte_end":660453,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":18355},{"krate":0,"index":18356},{"krate":0,"index":18357},{"krate":0,"index":18358}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660528,"byte_end":660534,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":18359},{"krate":0,"index":18360},{"krate":0,"index":18361},{"krate":0,"index":18362}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660612,"byte_end":660618,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":18363},{"krate":0,"index":18364},{"krate":0,"index":18365},{"krate":0,"index":18366}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660691,"byte_end":660697,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":18367},{"krate":0,"index":18368},{"krate":0,"index":18369},{"krate":0,"index":18370}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661614,"byte_end":661619,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8865}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661828,"byte_end":661833,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":662065,"byte_end":662070,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8870}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662568,"byte_end":662575,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662630,"byte_end":662637,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8903}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662768,"byte_end":662775,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8907},{"krate":0,"index":8908}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664345,"byte_end":664350,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664403,"byte_end":664408,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8937}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664521,"byte_end":664526,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8940},{"krate":0,"index":8941}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":665548,"byte_end":665556,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8974},{"krate":0,"index":8975}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":666489,"byte_end":666497,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":8979},{"krate":0,"index":8980},{"krate":0,"index":8981},{"krate":0,"index":8982},{"krate":0,"index":8983}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/lines.rs","byte_start":668001,"byte_end":668006,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9021}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/lines.rs","byte_start":668169,"byte_end":668174,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9024},{"krate":0,"index":9025}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669151,"byte_end":669155,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669207,"byte_end":669211,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9054}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669376,"byte_end":669380,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":9057},{"krate":0,"index":9058}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670068,"byte_end":670080,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670132,"byte_end":670144,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9091}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670323,"byte_end":670335,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9094},{"krate":0,"index":9095}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671030,"byte_end":671039,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671091,"byte_end":671100,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9130}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671265,"byte_end":671274,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9133},{"krate":0,"index":9134}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672405,"byte_end":672413,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672468,"byte_end":672476,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":9175}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":673427,"byte_end":673435,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":9181},{"krate":0,"index":9182}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674190,"byte_end":674199,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674251,"byte_end":674260,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9217}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674505,"byte_end":674510,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9223}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":676345,"byte_end":676354,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9228},{"krate":0,"index":9229}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":677227,"byte_end":677239,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":677291,"byte_end":677303,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9274}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":678214,"byte_end":678226,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9280},{"krate":0,"index":9281}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":679046,"byte_end":679055,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":679110,"byte_end":679119,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9316}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":680091,"byte_end":680100,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9321},{"krate":0,"index":9322}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681258,"byte_end":681264,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9357},{"krate":0,"index":9358}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681905,"byte_end":681911,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9360}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682425,"byte_end":682429,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682481,"byte_end":682485,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9397}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682642,"byte_end":682646,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":9400},{"krate":0,"index":9401}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683775,"byte_end":683779,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9433},{"krate":0,"index":9434},{"krate":0,"index":9436},{"krate":0,"index":9437}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684497,"byte_end":684501,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9439}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685518,"byte_end":685526,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9492}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686026,"byte_end":686035,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9496}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686427,"byte_end":686435,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9499},{"krate":0,"index":9501}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686938,"byte_end":686947,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9505},{"krate":0,"index":9507},{"krate":0,"index":9509},{"krate":0,"index":9511}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687962,"byte_end":687974,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9520}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":688138,"byte_end":688150,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9523}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":688384,"byte_end":688396,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":688869,"byte_end":688873,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9571},{"krate":0,"index":18622},{"krate":0,"index":18623},{"krate":0,"index":18624},{"krate":0,"index":18625}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690790,"byte_end":690794,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9574}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":691304,"byte_end":691308,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9577},{"krate":0,"index":9578}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693151,"byte_end":693157,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9595},{"krate":0,"index":9596},{"krate":0,"index":9597},{"krate":0,"index":9598},{"krate":0,"index":9599},{"krate":0,"index":9600},{"krate":0,"index":9601}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":695227,"byte_end":695233,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9605}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":695380,"byte_end":695386,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9608}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695907,"byte_end":695912,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695965,"byte_end":695970,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9637}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":696132,"byte_end":696137,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9640},{"krate":0,"index":9641}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696821,"byte_end":696834,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696887,"byte_end":696900,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9674}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":697073,"byte_end":697086,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9677},{"krate":0,"index":9678}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697778,"byte_end":697786,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697839,"byte_end":697847,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9713}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":698009,"byte_end":698017,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9716},{"krate":0,"index":9717}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597525,"byte_end":597526,"line_start":398,"line_end":398,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603981,"byte_end":603982,"line_start":592,"line_end":592,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604869,"byte_end":604870,"line_start":620,"line_end":620,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":612349,"byte_end":612350,"line_start":824,"line_end":824,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":701332,"byte_end":701337,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":701374,"byte_end":701379,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":701395,"byte_end":701401,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9863},{"krate":0,"index":9864},{"krate":0,"index":9866},{"krate":0,"index":9867}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707021,"byte_end":707026,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9870}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707148,"byte_end":707153,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9873}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707481,"byte_end":707493,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9881}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707657,"byte_end":707669,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9884}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707890,"byte_end":707902,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708382,"byte_end":708393,"line_start":228,"line_end":228,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708423,"byte_end":708434,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9891},{"krate":0,"index":9892}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708597,"byte_end":708608,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9895}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708746,"byte_end":708757,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9898}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":709109,"byte_end":709120,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9901}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710655,"byte_end":710660,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9967}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710993,"byte_end":710998,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9970}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711091,"byte_end":711096,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9973}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711229,"byte_end":711235,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9981},{"krate":0,"index":9982}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711681,"byte_end":711686,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9987},{"krate":0,"index":9988}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712257,"byte_end":712262,"line_start":99,"line_end":99,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9991},{"krate":0,"index":9992},{"krate":0,"index":9993},{"krate":0,"index":9994},{"krate":0,"index":9995},{"krate":0,"index":9996},{"krate":0,"index":9997}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716118,"byte_end":716138,"line_start":207,"line_end":207,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":10005}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716570,"byte_end":716590,"line_start":220,"line_end":220,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10008}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716699,"byte_end":716719,"line_start":226,"line_end":226,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10011},{"krate":0,"index":10012}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718003,"byte_end":718023,"line_start":264,"line_end":264,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10015}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718668,"byte_end":718683,"line_start":283,"line_end":283,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":10021}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718929,"byte_end":718944,"line_start":292,"line_end":292,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10024}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719038,"byte_end":719053,"line_start":298,"line_end":298,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10027},{"krate":0,"index":10028}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719190,"byte_end":719205,"line_start":305,"line_end":305,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10031}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719588,"byte_end":719603,"line_start":318,"line_end":318,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10039}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":720034,"byte_end":720049,"line_start":331,"line_end":331,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10042}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":720166,"byte_end":720181,"line_start":337,"line_end":337,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10046},{"krate":0,"index":10047}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721410,"byte_end":721425,"line_start":373,"line_end":373,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10050}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722027,"byte_end":722037,"line_start":392,"line_end":392,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10058}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723049,"byte_end":723059,"line_start":422,"line_end":422,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10063}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723265,"byte_end":723275,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10066}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723373,"byte_end":723383,"line_start":434,"line_end":434,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10069},{"krate":0,"index":10070}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723524,"byte_end":723534,"line_start":441,"line_end":441,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10073}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723985,"byte_end":724001,"line_start":455,"line_end":455,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10085}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725131,"byte_end":725147,"line_start":486,"line_end":486,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10091}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725412,"byte_end":725428,"line_start":495,"line_end":495,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10095}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725540,"byte_end":725556,"line_start":501,"line_end":501,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10099},{"krate":0,"index":10100}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725699,"byte_end":725715,"line_start":508,"line_end":508,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":10104}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725992,"byte_end":725997,"line_start":516,"line_end":516,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726043,"byte_end":726048,"line_start":517,"line_end":517,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726215,"byte_end":726230,"line_start":521,"line_end":521,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726335,"byte_end":726350,"line_start":524,"line_end":524,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726521,"byte_end":726541,"line_start":528,"line_end":528,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726642,"byte_end":726662,"line_start":531,"line_end":531,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726862,"byte_end":726872,"line_start":535,"line_end":535,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726922,"byte_end":726932,"line_start":536,"line_end":536,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726983,"byte_end":726998,"line_start":538,"line_end":538,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":727044,"byte_end":727059,"line_start":539,"line_end":539,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":727124,"byte_end":727140,"line_start":541,"line_end":541,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":727211,"byte_end":727227,"line_start":542,"line_end":542,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728069,"byte_end":728078,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":10169},{"krate":0,"index":10170}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730362,"byte_end":730373,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10172}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731189,"byte_end":731196,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10174}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731379,"byte_end":731386,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731399,"byte_end":731408,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":10178}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732397,"byte_end":732406,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10183},{"krate":0,"index":10184}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732645,"byte_end":732654,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10188},{"krate":0,"index":10189}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732913,"byte_end":732924,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10192}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733596,"byte_end":733597,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10212},{"krate":0,"index":10213}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733832,"byte_end":733833,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10221}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":734103,"byte_end":734104,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10229}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735120,"byte_end":735124,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10237}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735218,"byte_end":735222,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10241},{"krate":0,"index":10242}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735481,"byte_end":735488,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10247},{"krate":0,"index":10248}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735711,"byte_end":735718,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10253}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735909,"byte_end":735916,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10258}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736221,"byte_end":736234,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10264},{"krate":0,"index":10265}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736651,"byte_end":736660,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10270},{"krate":0,"index":10271}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736944,"byte_end":736953,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10276}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737215,"byte_end":737224,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10281}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737546,"byte_end":737553,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10288},{"krate":0,"index":10289}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737772,"byte_end":737779,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10295}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737957,"byte_end":737964,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10301}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738265,"byte_end":738273,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10309},{"krate":0,"index":10310}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738496,"byte_end":738504,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10316}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738686,"byte_end":738694,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10322}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739004,"byte_end":739015,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":10331},{"krate":0,"index":10332}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739275,"byte_end":739286,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":10338}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739523,"byte_end":739534,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10344}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739901,"byte_end":739913,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":10352},{"krate":0,"index":10353}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":740174,"byte_end":740186,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":10359}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":740424,"byte_end":740436,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":10365}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741055,"byte_end":741069,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10378},{"krate":0,"index":10379}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741292,"byte_end":741306,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10385}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741507,"byte_end":741521,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10391}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741827,"byte_end":741833,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10401}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741926,"byte_end":741932,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10405},{"krate":0,"index":10406}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Inherent","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/unfold_state.rs","byte_start":742537,"byte_end":742548,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10417},{"krate":0,"index":10418}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":168}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2156}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179389,"byte_end":179406,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6696}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/mod.rs","byte_start":179605,"byte_end":179615,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":7105}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":10904,"byte_end":10908,"line_start":304,"line_end":304,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7282}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8042}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":8152}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":8154}},{"kind":"Mod","span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":9795}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":10428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":10428},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":10428},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":10428},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":10428},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/flatten.rs","byte_start":61467,"byte_end":61474,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":10428},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":10475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":10475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":10475},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":10475},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":10511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":10511},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":10511},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":11071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":11071},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70293,"byte_end":70305,"line_start":47,"line_end":47,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":11107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":70612,"byte_end":70624,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":11107},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71665,"byte_end":71671,"line_start":86,"line_end":86,"column_start":47,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":11114},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/remote_handle.rs","byte_start":71841,"byte_end":71847,"line_start":92,"line_end":92,"column_start":30,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":11114},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":73836,"byte_end":73846,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74047,"byte_end":74053,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74096,"byte_end":74102,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74360,"byte_end":74365,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74519,"byte_end":74529,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74761,"byte_end":74766,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":74863,"byte_end":74868,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75112,"byte_end":75118,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":75542,"byte_end":75548,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":77614,"byte_end":77619,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":79315,"byte_end":79321,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":591},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":79473,"byte_end":79479,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":81131,"byte_end":81136,"line_start":270,"line_end":270,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":82930,"byte_end":82936,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83095,"byte_end":83101,"line_start":337,"line_end":337,"column_start":20,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83529,"byte_end":83537,"line_start":354,"line_end":354,"column_start":18,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":599},"to":{"krate":23,"index":94}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/shared.rs","byte_start":83896,"byte_end":83906,"line_start":367,"line_end":367,"column_start":19,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":687}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/future/mod.rs","byte_start":42508,"byte_end":42514,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13541},"to":{"krate":0,"index":687}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106480,"byte_end":106490,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":11155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106641,"byte_end":106651,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":11155},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/into_future.rs","byte_start":106774,"byte_end":106784,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":11155},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107493,"byte_end":107503,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":11191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107633,"byte_end":107643,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":11191},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":107886,"byte_end":107896,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":11191},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":108849,"byte_end":108859,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":11191},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":109102,"byte_end":109112,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":11191},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten.rs","byte_start":110149,"byte_end":110159,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":11191},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112436,"byte_end":112449,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112579,"byte_end":112592,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11238},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/try_flatten_err.rs","byte_start":112835,"byte_end":112848,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11238},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88878,"byte_end":88881,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":987},"to":{"krate":0,"index":988}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_future/mod.rs","byte_start":88964,"byte_end":88973,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":988}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114157,"byte_end":114161,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":12184},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114757,"byte_end":114761,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":12184},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/lazy.rs","byte_start":114905,"byte_end":114909,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":12184},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":115512,"byte_end":115519,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":12190},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116122,"byte_end":116129,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":12190},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116274,"byte_end":116281,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":12190},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/pending.rs","byte_start":116307,"byte_end":116314,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":12190},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117068,"byte_end":117077,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":12196},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":117680,"byte_end":117689,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":12196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118787,"byte_end":118796,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":12196},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/maybe_done.rs","byte_start":118997,"byte_end":119006,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":12196},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120326,"byte_end":120338,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":12209},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":120564,"byte_end":120576,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":12209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121689,"byte_end":121701,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":12209},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_maybe_done.rs","byte_start":121905,"byte_end":121917,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":12209},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123567,"byte_end":123579,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":123677,"byte_end":123689,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":124003,"byte_end":124015,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":12222},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/option.rs","byte_start":124202,"byte_end":124214,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":12222},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":124652,"byte_end":124658,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125352,"byte_end":125358,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_fn.rs","byte_start":125500,"byte_end":125506,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126234,"byte_end":126247,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":12261},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":126813,"byte_end":126826,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":12261},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/poll_immediate.rs","byte_start":127846,"byte_end":127859,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":12261},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130031,"byte_end":130036,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":12300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130215,"byte_end":130220,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":12300},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130252,"byte_end":130257,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":12300},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/ready.rs","byte_start":130354,"byte_end":130359,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":12300},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":138357,"byte_end":138364,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1567},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":140911,"byte_end":140918,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1567},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/join_all.rs","byte_start":141906,"byte_end":141913,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1567},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":142409,"byte_end":142415,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":12654},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":144851,"byte_end":144857,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":12654},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select.rs","byte_start":145479,"byte_end":145485,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":12654},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":146048,"byte_end":146057,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":12662},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147064,"byte_end":147073,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":12662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147256,"byte_end":147265,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":12662},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_all.rs","byte_start":147920,"byte_end":147929,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":12662},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":156534,"byte_end":156544,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1845},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":159322,"byte_end":159332,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1845},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_join_all.rs","byte_start":160904,"byte_end":160914,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1845},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":161420,"byte_end":161429,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":12990},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/try_select.rs","byte_start":163268,"byte_end":163277,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12990},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":164639,"byte_end":164647,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12998},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":165725,"byte_end":165733,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12998},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/select_ok.rs","byte_start":167149,"byte_end":167157,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12998},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168136,"byte_end":168142,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":13004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168481,"byte_end":168487,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":13004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":168872,"byte_end":168878,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":13004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169259,"byte_end":169265,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":13004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169506,"byte_end":169512,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":13004},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":169851,"byte_end":169857,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":13004},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170133,"byte_end":170139,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":13004},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170674,"byte_end":170680,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":13004},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":170987,"byte_end":170993,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":13004},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":172352,"byte_end":172358,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":13004},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":173159,"byte_end":173165,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":13004},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174472,"byte_end":174478,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":13004},"to":{"krate":28,"index":47}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/future/either.rs","byte_start":174908,"byte_end":174914,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":13004},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238492,"byte_end":238497,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":13021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238723,"byte_end":238728,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":13021},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chain.rs","byte_start":238937,"byte_end":238942,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":13021},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240538,"byte_end":240545,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":13070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240787,"byte_end":240794,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":13070},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/collect.rs","byte_start":240972,"byte_end":240979,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":13070},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242005,"byte_end":242010,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":13119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242358,"byte_end":242363,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":13119},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/unzip.rs","byte_start":242613,"byte_end":242618,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":13119},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":243743,"byte_end":243749,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":13181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":243969,"byte_end":243975,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":13181},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/concat.rs","byte_start":244683,"byte_end":244689,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":13181},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245415,"byte_end":245420,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":13221},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245641,"byte_end":245646,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":13221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245778,"byte_end":245783,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":13221},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/count.rs","byte_start":245901,"byte_end":245906,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":13221},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":246712,"byte_end":246717,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":13258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":246873,"byte_end":246878,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":13258},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/cycle.rs","byte_start":247627,"byte_end":247632,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":13258},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248380,"byte_end":248389,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":13298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248575,"byte_end":248584,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":13298},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":248702,"byte_end":248711,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":13298},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/enumerate.rs","byte_start":249364,"byte_end":249373,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":13298},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250152,"byte_end":250158,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":13346},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250631,"byte_end":250637,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":13346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":250960,"byte_end":250966,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":13346},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":251303,"byte_end":251309,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":13346},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter.rs","byte_start":252688,"byte_end":252694,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":13346},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":253481,"byte_end":253490,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":13415},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":253787,"byte_end":253796,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":13415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":254063,"byte_end":254072,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":13415},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":254339,"byte_end":254348,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":13415},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/filter_map.rs","byte_start":255766,"byte_end":255775,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":13415},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256450,"byte_end":256457,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":13480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256626,"byte_end":256633,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":13480},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":256825,"byte_end":256832,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":13480},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten.rs","byte_start":257654,"byte_end":257661,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":13480},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258346,"byte_end":258350,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":13600},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258706,"byte_end":258710,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":13600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":258971,"byte_end":258975,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":13600},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fold.rs","byte_start":259210,"byte_end":259214,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":13600},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":260803,"byte_end":260806,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":13669},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261136,"byte_end":261139,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":13669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261392,"byte_end":261395,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":13669},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/any.rs","byte_start":261624,"byte_end":261627,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":13669},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263379,"byte_end":263382,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":13730},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263712,"byte_end":263715,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":13730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":263967,"byte_end":263970,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":13730},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/all.rs","byte_start":264199,"byte_end":264202,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":13730},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266038,"byte_end":266045,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":13791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266245,"byte_end":266252,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":13791},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/forward.rs","byte_start":266454,"byte_end":266461,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":13791},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268266,"byte_end":268273,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":13914},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268566,"byte_end":268573,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":13914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":268804,"byte_end":268811,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":13914},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each.rs","byte_start":269050,"byte_end":269057,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":13914},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270158,"byte_end":270162,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":13971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270659,"byte_end":270663,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":13971},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":270761,"byte_end":270765,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":13971},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/fuse.rs","byte_start":271451,"byte_end":271455,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":13971},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":271967,"byte_end":271979,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":14019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274469,"byte_end":274481,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":14019},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/into_future.rs","byte_start":274601,"byte_end":274613,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":14019},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275498,"byte_end":275501,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":14103},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275690,"byte_end":275693,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":14103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":275862,"byte_end":275865,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":14103},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":276033,"byte_end":276036,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":14103},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/map.rs","byte_start":276578,"byte_end":276581,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":14103},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277148,"byte_end":277152,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":14249},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277203,"byte_end":277207,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":14249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277358,"byte_end":277362,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":14249},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/next.rs","byte_start":277501,"byte_end":277505,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":14249},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278156,"byte_end":278170,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":14257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278321,"byte_end":278335,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":14257},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/select_next_some.rs","byte_start":278479,"byte_end":278493,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":14257},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":279804,"byte_end":279812,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":14265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285309,"byte_end":285317,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":14265},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":285459,"byte_end":285467,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":14265},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286252,"byte_end":286260,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":14265},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286626,"byte_end":286630,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":14313},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286875,"byte_end":286879,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":14313},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":286990,"byte_end":286994,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":14313},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287691,"byte_end":287698,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":14354},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":287946,"byte_end":287953,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":14354},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288064,"byte_end":288071,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":14354},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":288791,"byte_end":288797,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":14395},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":289149,"byte_end":289155,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":14395},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":289424,"byte_end":289430,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":14395},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":290691,"byte_end":290699,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":14444},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291019,"byte_end":291027,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":14444},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291211,"byte_end":291219,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":14444},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/peek.rs","byte_start":291590,"byte_end":291600,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3378},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292265,"byte_end":292269,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":14493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292460,"byte_end":292464,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":14493},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":292582,"byte_end":292586,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":14493},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip.rs","byte_start":293397,"byte_end":293401,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":14493},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294183,"byte_end":294192,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":14541},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294644,"byte_end":294653,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":14541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":294979,"byte_end":294988,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":14541},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":295236,"byte_end":295245,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":14541},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/skip_while.rs","byte_start":296859,"byte_end":296868,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":14541},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":297545,"byte_end":297549,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":14614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":297722,"byte_end":297726,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":14614},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":298698,"byte_end":298702,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":14614},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take.rs","byte_start":298950,"byte_end":298954,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":14614},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":299725,"byte_end":299734,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":14662},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":300182,"byte_end":300191,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":14662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":300510,"byte_end":300519,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":14662},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":302038,"byte_end":302047,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":14662},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_while.rs","byte_start":302403,"byte_end":302412,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":14662},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":303431,"byte_end":303440,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":14735},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":303728,"byte_end":303737,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":14735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":305854,"byte_end":305863,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":14735},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":306895,"byte_end":306904,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":14735},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/take_until.rs","byte_start":307141,"byte_end":307150,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":14735},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":307846,"byte_end":307850,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":14796},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308101,"byte_end":308105,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":14796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308351,"byte_end":308355,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":14796},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":308581,"byte_end":308585,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":14796},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/then.rs","byte_start":309764,"byte_end":309768,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":14796},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":310467,"byte_end":310470,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":14861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":312056,"byte_end":312059,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":14861},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/zip.rs","byte_start":312254,"byte_end":312257,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":14861},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":314952,"byte_end":314958,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":14918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":315466,"byte_end":315472,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":14918},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":317086,"byte_end":317092,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":14918},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/chunks.rs","byte_start":317315,"byte_end":317321,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":14918},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":318064,"byte_end":318075,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":14970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":318427,"byte_end":318438,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":14970},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":320605,"byte_end":320616,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":14970},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/ready_chunks.rs","byte_start":320839,"byte_end":320850,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":14970},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":321614,"byte_end":321618,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":15022},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322104,"byte_end":322108,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":15022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322272,"byte_end":322276,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":15022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":322638,"byte_end":322642,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":15022},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":323869,"byte_end":323873,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":15022},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/scan.rs","byte_start":324247,"byte_end":324251,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":15022},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325054,"byte_end":325069,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":15095},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325401,"byte_end":325416,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":15095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":325803,"byte_end":325818,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":15095},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":327272,"byte_end":327287,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":15095},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffer_unordered.rs","byte_start":327571,"byte_end":327586,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":15095},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":328397,"byte_end":328405,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":15144},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":328752,"byte_end":328760,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":15144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":329040,"byte_end":329048,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":15144},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/buffered.rs","byte_start":330571,"byte_end":330579,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":15144},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":332197,"byte_end":332212,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":15193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":336331,"byte_end":336344,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":336864,"byte_end":336877,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4203},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":337275,"byte_end":337285,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4218},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":337310,"byte_end":337320,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4218},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":337330,"byte_end":337340,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":338391,"byte_end":338401,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4218},"to":{"krate":23,"index":94}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":340002,"byte_end":340015,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":15199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":340219,"byte_end":340232,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":15199},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":341347,"byte_end":341363,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":15232},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":341837,"byte_end":341853,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":15232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":342792,"byte_end":342812,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":15241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":343079,"byte_end":343095,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":15232},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":343300,"byte_end":343316,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":15232},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/flatten_unordered.rs","byte_start":347936,"byte_end":347952,"line_start":502,"line_end":502,"column_start":31,"column_end":47},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":15232},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":348745,"byte_end":348762,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":15390},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349108,"byte_end":349125,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":15390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349558,"byte_end":349575,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":15390},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/for_each_concurrent.rs","byte_start":349805,"byte_end":349822,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":15390},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352046,"byte_end":352057,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":15451},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352080,"byte_end":352091,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":15451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":352524,"byte_end":352535,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":15451},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353118,"byte_end":353127,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":15458},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353175,"byte_end":353184,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":15458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":353648,"byte_end":353657,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":15458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":354379,"byte_end":354388,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":15458},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":355995,"byte_end":356007,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4389},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":356183,"byte_end":356195,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4389},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/split.rs","byte_start":356444,"byte_end":356456,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4389},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":357001,"byte_end":357012,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":15467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":357204,"byte_end":357215,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":15467},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/catch_unwind.rs","byte_start":358067,"byte_end":358078,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":15467},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":187867,"byte_end":187868,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4467},"to":{"krate":0,"index":4468}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/stream/mod.rs","byte_start":188011,"byte_end":188017,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":4468}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397082,"byte_end":397089,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":15511},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397382,"byte_end":397389,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":15511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":397670,"byte_end":397677,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":15511},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":398820,"byte_end":398827,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":15511},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/and_then.rs","byte_start":399173,"byte_end":399180,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":15511},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":399745,"byte_end":399755,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":15810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":399948,"byte_end":399958,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":15810},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400079,"byte_end":400089,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":15810},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_stream.rs","byte_start":400513,"byte_end":400523,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":15810},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401188,"byte_end":401194,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":16010},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401486,"byte_end":401492,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":16010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":401770,"byte_end":401776,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":16010},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":403053,"byte_end":403059,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":16010},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/or_else.rs","byte_start":403402,"byte_end":403408,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":16010},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":403963,"byte_end":403970,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":16075},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404024,"byte_end":404031,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":16075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404194,"byte_end":404201,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":16075},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_next.rs","byte_start":404343,"byte_end":404350,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":16075},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405126,"byte_end":405136,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":16083},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405432,"byte_end":405442,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":16083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each.rs","byte_start":405687,"byte_end":405697,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":16083},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407096,"byte_end":407105,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":16140},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407501,"byte_end":407510,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":16140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":407753,"byte_end":407762,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":16140},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":408019,"byte_end":408028,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":16140},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter.rs","byte_start":409417,"byte_end":409426,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":16140},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410169,"byte_end":410181,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":16209},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410481,"byte_end":410493,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":16209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410690,"byte_end":410702,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":16209},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":410980,"byte_end":410992,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":16209},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_filter_map.rs","byte_start":412492,"byte_end":412504,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":16209},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413176,"byte_end":413186,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":16274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413451,"byte_end":413461,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":16274},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":413707,"byte_end":413717,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":16274},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_flatten.rs","byte_start":414636,"byte_end":414646,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":16274},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415326,"byte_end":415336,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":16322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415476,"byte_end":415486,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":16322},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_collect.rs","byte_start":415674,"byte_end":415684,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":16322},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_concat.rs","byte_start":416659,"byte_end":416668,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":16371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_concat.rs","byte_start":416887,"byte_end":416896,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":16371},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":418280,"byte_end":418289,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":16411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":418784,"byte_end":418793,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":16411},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":420739,"byte_end":420748,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":16411},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":420971,"byte_end":420980,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":16411},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421407,"byte_end":421421,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":16463},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421566,"byte_end":421580,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":16463},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_chunks.rs","byte_start":421767,"byte_end":421781,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":16463},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":422391,"byte_end":422398,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":16484},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":422757,"byte_end":422764,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":16484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":423044,"byte_end":423051,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":16484},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_fold.rs","byte_start":423305,"byte_end":423312,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":16484},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427175,"byte_end":427184,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":16553},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_unfold.rs","byte_start":427446,"byte_end":427455,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":16553},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":429201,"byte_end":429213,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":16610},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":429669,"byte_end":429681,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":16610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":430021,"byte_end":430033,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":16610},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":431532,"byte_end":431544,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":16610},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_skip_while.rs","byte_start":431911,"byte_end":431923,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":16610},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":432772,"byte_end":432784,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":16683},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":433236,"byte_end":433248,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":16683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":433586,"byte_end":433598,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":16683},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":435205,"byte_end":435217,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":16683},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_take_while.rs","byte_start":435604,"byte_end":435616,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":16683},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":436505,"byte_end":436523,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":16756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":436862,"byte_end":436880,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":16756},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffer_unordered.rs","byte_start":438157,"byte_end":438175,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":16756},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":439086,"byte_end":439097,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":16808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":439434,"byte_end":439445,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":16808},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_buffered.rs","byte_start":440727,"byte_end":440738,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":16808},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":441608,"byte_end":441628,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":16860},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":441993,"byte_end":442013,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":16860},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":442252,"byte_end":442272,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":16860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":442720,"byte_end":442740,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":16860},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":446029,"byte_end":446042,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":16921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":446246,"byte_end":446259,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":16921},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":447910,"byte_end":447923,"line_start":93,"line_end":93,"column_start":25,"column_end":38},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":16921},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/into_async_read.rs","byte_start":448539,"byte_end":448552,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":16921},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363478,"byte_end":363479,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":5885}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/try_stream/mod.rs","byte_start":363560,"byte_end":363569,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5885}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":450634,"byte_end":450638,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":16973},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/iter.rs","byte_start":451260,"byte_end":451264,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":16973},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452455,"byte_end":452461,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":16982},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452488,"byte_end":452494,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":16982},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat.rs","byte_start":452802,"byte_end":452808,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":16982},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453405,"byte_end":453415,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":16991},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453459,"byte_end":453469,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":16991},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/repeat_with.rs","byte_start":453783,"byte_end":453793,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":16991},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456313,"byte_end":456318,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":17000},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456350,"byte_end":456355,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":17000},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456440,"byte_end":456445,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":17000},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/empty.rs","byte_start":456694,"byte_end":456699,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":17000},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457638,"byte_end":457642,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":17006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":457771,"byte_end":457775,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":17006},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/once.rs","byte_start":458380,"byte_end":458384,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":17006},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459043,"byte_end":459050,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":17042},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459082,"byte_end":459089,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":17042},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459174,"byte_end":459181,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":17042},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/pending.rs","byte_start":459426,"byte_end":459433,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":17042},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459820,"byte_end":459826,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":459857,"byte_end":459863,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_fn.rs","byte_start":460628,"byte_end":460634,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6302},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":461330,"byte_end":461343,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":17048},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/poll_immediate.rs","byte_start":462256,"byte_end":462269,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":17048},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":465156,"byte_end":465162,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":17087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466466,"byte_end":466472,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":17087},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select.rs","byte_start":466651,"byte_end":466657,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":17087},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467332,"byte_end":467340,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":17132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467690,"byte_end":467698,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":17132},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":467855,"byte_end":467868,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":471465,"byte_end":471483,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":17151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":472850,"byte_end":472868,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":17151},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":474304,"byte_end":474322,"line_start":251,"line_end":251,"column_start":40,"column_end":58},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":17151},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_with_strategy.rs","byte_start":475496,"byte_end":475514,"line_start":286,"line_end":286,"column_start":44,"column_end":62},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":17151},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478085,"byte_end":478091,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":17224},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478331,"byte_end":478337,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":17224},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/unfold.rs","byte_start":478617,"byte_end":478623,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":17224},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480171,"byte_end":480183,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":17277},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480288,"byte_end":480300,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":17277},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480331,"byte_end":480343,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":17277},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480466,"byte_end":480478,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":17277},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":480659,"byte_end":480671,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":17277},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483253,"byte_end":483267,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":483293,"byte_end":483307,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":486076,"byte_end":486090,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":486183,"byte_end":486197,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6654},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487359,"byte_end":487373,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487539,"byte_end":487553,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":487838,"byte_end":487852,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6654},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_ordered.rs","byte_start":488022,"byte_end":488036,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/abort.rs","byte_start":515006,"byte_end":515017,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6790},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":516391,"byte_end":516399,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":17356},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":517580,"byte_end":517588,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":17356},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":517625,"byte_end":517635,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":17317},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518487,"byte_end":518497,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":17317},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518545,"byte_end":518552,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":17327},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518815,"byte_end":518822,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":17327},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":518863,"byte_end":518873,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":17336},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519742,"byte_end":519752,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":17336},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":519800,"byte_end":519804,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":17347},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520063,"byte_end":520067,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":17347},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520236,"byte_end":520246,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":17336},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520291,"byte_end":520301,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":17336},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520347,"byte_end":520357,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":17317},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520402,"byte_end":520412,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":17317},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520466,"byte_end":520474,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":17356},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/iter.rs","byte_start":520523,"byte_end":520531,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":17356},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":522216,"byte_end":522220,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6924},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":522255,"byte_end":522259,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6924},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":522291,"byte_end":522295,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6924},"to":{"krate":23,"index":94}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":523428,"byte_end":523432,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/task.rs","byte_start":524432,"byte_end":524436,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6924},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":525886,"byte_end":525901,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":528569,"byte_end":528584,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6995},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490428,"byte_end":490444,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490485,"byte_end":490501,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490530,"byte_end":490546,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490571,"byte_end":490587,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":7017},"to":{"krate":23,"index":15}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":490772,"byte_end":490788,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7017},"to":{"krate":23,"index":18}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492495,"byte_end":492511,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":492585,"byte_end":492601,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":504210,"byte_end":504226,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7017},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":508602,"byte_end":508606,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7054},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511415,"byte_end":511431,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":511569,"byte_end":511585,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":512156,"byte_end":512172,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":513822,"byte_end":513838,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514308,"byte_end":514324,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514600,"byte_end":514616,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7017},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/futures_unordered/mod.rs","byte_start":514738,"byte_end":514754,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530179,"byte_end":530188,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":17363},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":530333,"byte_end":530342,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":17363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531815,"byte_end":531824,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":17363},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":531923,"byte_end":531932,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":17363},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":532716,"byte_end":532725,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":17363},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533743,"byte_end":533752,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":17363},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":533897,"byte_end":533906,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":17363},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":534089,"byte_end":534098,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":17363},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535181,"byte_end":535185,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":17396},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535618,"byte_end":535622,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":17396},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":535677,"byte_end":535684,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":17405},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536121,"byte_end":536128,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":17405},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536179,"byte_end":536187,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":17414},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/stream/select_all.rs","byte_start":536615,"byte_end":536623,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":17414},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":548967,"byte_end":548972,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":17421},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":549166,"byte_end":549171,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":17421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/close.rs","byte_start":549347,"byte_end":549352,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":17421},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550342,"byte_end":550347,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":17432},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/drain.rs","byte_start":550375,"byte_end":550380,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":17432},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":551541,"byte_end":551547,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":17438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552515,"byte_end":552521,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":17438},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/fanout.rs","byte_start":552733,"byte_end":552739,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":17438},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554818,"byte_end":554822,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":17483},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":554889,"byte_end":554893,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":17483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/feed.rs","byte_start":555257,"byte_end":555261,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":17483},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556163,"byte_end":556168,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":17494},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556519,"byte_end":556524,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":17494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/flush.rs","byte_start":556700,"byte_end":556705,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":17494},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557365,"byte_end":557376,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":17505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557633,"byte_end":557644,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":17505},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":557848,"byte_end":557859,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":17505},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/err_into.rs","byte_start":558021,"byte_end":558032,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":17505},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":558641,"byte_end":558651,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":17569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":558954,"byte_end":558964,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":17569},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":559920,"byte_end":559930,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":17569},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/map_err.rs","byte_start":560036,"byte_end":560046,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":17569},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560597,"byte_end":560601,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":17628},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560668,"byte_end":560672,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":17628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send.rs","byte_start":560860,"byte_end":560864,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":17628},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562070,"byte_end":562077,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7692},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562516,"byte_end":562523,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7692},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":562635,"byte_end":562642,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/send_all.rs","byte_start":563418,"byte_end":563425,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7692},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/unfold.rs","byte_start":565724,"byte_end":565730,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":17638},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":567647,"byte_end":567651,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":17696},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":567914,"byte_end":567918,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":17696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568255,"byte_end":568259,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":17696},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568630,"byte_end":568634,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":17696},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":568818,"byte_end":568822,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":17696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with.rs","byte_start":569497,"byte_end":569501,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":17696},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":571220,"byte_end":571231,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":17779},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":571604,"byte_end":571615,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":17779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":572902,"byte_end":572913,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":17779},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573136,"byte_end":573147,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":17779},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/with_flat_map.rs","byte_start":573396,"byte_end":573407,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":17779},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":574951,"byte_end":574957,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":17866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":575685,"byte_end":575691,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":17866},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576021,"byte_end":576027,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":17866},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/buffer.rs","byte_start":576201,"byte_end":576207,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":17866},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538512,"byte_end":538513,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7995},"to":{"krate":0,"index":7997}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/sink/mod.rs","byte_start":538662,"byte_end":538666,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":24,"index":17},"to":{"krate":0,"index":7997}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":578941,"byte_end":578943,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8132},"to":{"krate":0,"index":8135}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":578998,"byte_end":579000,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8134},"to":{"krate":0,"index":8140}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":579079,"byte_end":579084,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":23,"index":15},"to":{"krate":0,"index":8135}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/task/spawn.rs","byte_start":582204,"byte_end":582214,"line_start":103,"line_end":103,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":18},"to":{"krate":0,"index":8140}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":613594,"byte_end":613604,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":17923},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614042,"byte_end":614052,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":17923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":614563,"byte_end":614573,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":17923},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615118,"byte_end":615128,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":17923},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":615920,"byte_end":615930,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":17923},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":616529,"byte_end":616539,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":17923},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617043,"byte_end":617053,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":17923},"to":{"krate":1,"index":4615}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617197,"byte_end":617207,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":17923},"to":{"krate":28,"index":47}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617469,"byte_end":617479,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":17923},"to":{"krate":1,"index":4622}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/allow_std.rs","byte_start":617695,"byte_end":617705,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":17923},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":619512,"byte_end":619521,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":17956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":620664,"byte_end":620673,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":17956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":622234,"byte_end":622243,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":17956},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":623645,"byte_end":623654,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":17956},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624484,"byte_end":624493,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":17956},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624571,"byte_end":624580,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":17956},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":624896,"byte_end":624905,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":17956},"to":{"krate":28,"index":47}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_reader.rs","byte_start":627825,"byte_end":627837,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":18009},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":629919,"byte_end":629928,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":18019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":633527,"byte_end":633536,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":18019},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":634959,"byte_end":634968,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":18019},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635049,"byte_end":635058,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":18019},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635139,"byte_end":635148,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":18019},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/buf_writer.rs","byte_start":635507,"byte_end":635516,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":18019},"to":{"krate":28,"index":47}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":636570,"byte_end":636580,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":18068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/line_writer.rs","byte_start":637782,"byte_end":637792,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":18068},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":641652,"byte_end":641657,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":18104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":642913,"byte_end":642918,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":18104},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":643248,"byte_end":643253,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":18104},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/chain.rs","byte_start":644322,"byte_end":644327,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":18104},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645438,"byte_end":645443,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":18153},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645496,"byte_end":645501,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":18153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/close.rs","byte_start":645643,"byte_end":645648,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":18153},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy.rs","byte_start":647418,"byte_end":647422,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":18161},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf.rs","byte_start":649145,"byte_end":649152,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":18215},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/copy_buf_abortable.rs","byte_start":652318,"byte_end":652334,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":18277},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":655100,"byte_end":655106,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":18343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658306,"byte_end":658312,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":47}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":658599,"byte_end":658605,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":659237,"byte_end":659243,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660447,"byte_end":660453,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660528,"byte_end":660534,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660612,"byte_end":660618,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/cursor.rs","byte_start":660691,"byte_end":660697,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":18343},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661614,"byte_end":661619,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8861},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":661828,"byte_end":661833,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8861},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/empty.rs","byte_start":662065,"byte_end":662070,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8861},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662568,"byte_end":662575,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":18371},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662630,"byte_end":662637,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":18371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/fill_buf.rs","byte_start":662768,"byte_end":662775,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":18371},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664345,"byte_end":664350,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":18379},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664403,"byte_end":664408,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":18379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/flush.rs","byte_start":664521,"byte_end":664526,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":18379},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":665548,"byte_end":665556,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":18394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/into_sink.rs","byte_start":666489,"byte_end":666497,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":18394},"to":{"krate":24,"index":17}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/lines.rs","byte_start":668001,"byte_end":668006,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":18443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/lines.rs","byte_start":668169,"byte_end":668174,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":18443},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669151,"byte_end":669155,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":18491},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669207,"byte_end":669211,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":18491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read.rs","byte_start":669376,"byte_end":669380,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":18491},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670068,"byte_end":670080,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":18500},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670132,"byte_end":670144,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":18500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_vectored.rs","byte_start":670323,"byte_end":670335,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":18500},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671030,"byte_end":671039,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":18509},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671091,"byte_end":671100,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":18509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_exact.rs","byte_start":671265,"byte_end":671274,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":18509},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672405,"byte_end":672413,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":18518},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":672468,"byte_end":672476,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":18518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_line.rs","byte_start":673427,"byte_end":673435,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":18518},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674190,"byte_end":674199,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":18529},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674251,"byte_end":674260,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":18529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":674505,"byte_end":674510,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":9218},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_end.rs","byte_start":676345,"byte_end":676354,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":18529},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":677227,"byte_end":677239,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":18539},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":677291,"byte_end":677303,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":18539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_to_string.rs","byte_start":678214,"byte_end":678226,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":18539},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":679046,"byte_end":679055,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":18550},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":679110,"byte_end":679119,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":18550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/read_until.rs","byte_start":680091,"byte_end":680100,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":18550},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681258,"byte_end":681264,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":9353},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/repeat.rs","byte_start":681905,"byte_end":681911,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":9353},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682425,"byte_end":682429,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":18561},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682481,"byte_end":682485,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":18561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/seek.rs","byte_start":682642,"byte_end":682646,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":18561},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":683775,"byte_end":683779,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":9429},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/sink.rs","byte_start":684497,"byte_end":684501,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":9429},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":685518,"byte_end":685526,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":18570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686026,"byte_end":686035,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":18576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686427,"byte_end":686435,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":18570},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":686938,"byte_end":686947,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":18576},"to":{"krate":28,"index":42}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":687962,"byte_end":687974,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9513},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":688138,"byte_end":688150,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":9513},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/split.rs","byte_start":688384,"byte_end":688396,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":9513},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":688869,"byte_end":688873,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":18582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":690790,"byte_end":690794,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":18582},"to":{"krate":28,"index":39}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/take.rs","byte_start":691304,"byte_end":691308,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":18582},"to":{"krate":28,"index":49}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":693151,"byte_end":693157,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":18626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":695227,"byte_end":695233,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":18626},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/window.rs","byte_start":695380,"byte_end":695386,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":18626},"to":{"krate":2,"index":3079}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695907,"byte_end":695912,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":18633},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":695965,"byte_end":695970,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":18633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write.rs","byte_start":696132,"byte_end":696137,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":18633},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696821,"byte_end":696834,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":18642},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":696887,"byte_end":696900,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":18642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_vectored.rs","byte_start":697073,"byte_end":697086,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":18642},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697778,"byte_end":697786,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":18651},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":697839,"byte_end":697847,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":18651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/write_all.rs","byte_start":698009,"byte_end":698017,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":18651},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":589268,"byte_end":589277,"line_start":148,"line_end":148,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":28,"index":39},"to":{"krate":0,"index":9721}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597525,"byte_end":597526,"line_start":398,"line_end":398,"column_start":46,"column_end":47},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":9737},"to":{"krate":0,"index":9721}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":597629,"byte_end":597639,"line_start":401,"line_end":401,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":28,"index":42},"to":{"krate":0,"index":9738}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":603981,"byte_end":603982,"line_start":592,"line_end":592,"column_start":48,"column_end":49},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":9750},"to":{"krate":0,"index":9738}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604083,"byte_end":604092,"line_start":595,"line_end":595,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":28,"index":47},"to":{"krate":0,"index":9751}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604869,"byte_end":604870,"line_start":620,"line_end":620,"column_start":46,"column_end":47},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":9755},"to":{"krate":0,"index":9751}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":604977,"byte_end":604989,"line_start":623,"line_end":623,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":28,"index":49},"to":{"krate":0,"index":9756}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/io/mod.rs","byte_start":612349,"byte_end":612350,"line_start":824,"line_end":824,"column_start":52,"column_end":53},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9765},"to":{"krate":0,"index":9756}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":701332,"byte_end":701337,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":701374,"byte_end":701379,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":701395,"byte_end":701401,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":18660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707021,"byte_end":707026,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":18666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707148,"byte_end":707153,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707481,"byte_end":707493,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":9874},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707657,"byte_end":707669,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":9874},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":707890,"byte_end":707902,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":9874},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708382,"byte_end":708393,"line_start":228,"line_end":228,"column_start":38,"column_end":49},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":18673},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708423,"byte_end":708434,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":18673},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708597,"byte_end":708608,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":18673},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":708746,"byte_end":708757,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":18673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/bilock.rs","byte_start":709109,"byte_end":709120,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":18673},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710655,"byte_end":710660,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":9960},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":710993,"byte_end":710998,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":9960},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711091,"byte_end":711096,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":9960},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711229,"byte_end":711235,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":9974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":711681,"byte_end":711686,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":9960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":712257,"byte_end":712262,"line_start":99,"line_end":99,"column_start":17,"column_end":22},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":9960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716118,"byte_end":716138,"line_start":207,"line_end":207,"column_start":32,"column_end":52},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716570,"byte_end":716590,"line_start":220,"line_end":220,"column_start":33,"column_end":53},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":9999},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":716699,"byte_end":716719,"line_start":226,"line_end":226,"column_start":28,"column_end":48},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718003,"byte_end":718023,"line_start":264,"line_end":264,"column_start":26,"column_end":46},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718668,"byte_end":718683,"line_start":283,"line_end":283,"column_start":45,"column_end":60},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":10016},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":718929,"byte_end":718944,"line_start":292,"line_end":292,"column_start":26,"column_end":41},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":10016},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719038,"byte_end":719053,"line_start":298,"line_end":298,"column_start":27,"column_end":42},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":10016},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719190,"byte_end":719205,"line_start":305,"line_end":305,"column_start":30,"column_end":45},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":10016},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":719588,"byte_end":719603,"line_start":318,"line_end":318,"column_start":32,"column_end":47},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":10032},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":720034,"byte_end":720049,"line_start":331,"line_end":331,"column_start":33,"column_end":48},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":10032},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":720166,"byte_end":720181,"line_start":337,"line_end":337,"column_start":32,"column_end":47},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":10032},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":721410,"byte_end":721425,"line_start":373,"line_end":373,"column_start":26,"column_end":41},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":10032},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":722027,"byte_end":722037,"line_start":392,"line_end":392,"column_start":21,"column_end":31},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":10051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723049,"byte_end":723059,"line_start":422,"line_end":422,"column_start":45,"column_end":55},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723265,"byte_end":723275,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723373,"byte_end":723383,"line_start":434,"line_end":434,"column_start":27,"column_end":37},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723524,"byte_end":723534,"line_start":441,"line_end":441,"column_start":30,"column_end":40},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":723985,"byte_end":724001,"line_start":455,"line_end":455,"column_start":32,"column_end":48},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":10074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725131,"byte_end":725147,"line_start":486,"line_end":486,"column_start":56,"column_end":72},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":10074},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725412,"byte_end":725428,"line_start":495,"line_end":495,"column_start":37,"column_end":53},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":10074},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725540,"byte_end":725556,"line_start":501,"line_end":501,"column_start":38,"column_end":54},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":10074},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725699,"byte_end":725715,"line_start":508,"line_end":508,"column_start":41,"column_end":57},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":10074},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":725992,"byte_end":725997,"line_start":516,"line_end":516,"column_start":40,"column_end":45},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9960},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726043,"byte_end":726048,"line_start":517,"line_end":517,"column_start":40,"column_end":45},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":9960},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726215,"byte_end":726230,"line_start":521,"line_end":521,"column_start":40,"column_end":55},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":10032},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726335,"byte_end":726350,"line_start":524,"line_end":524,"column_start":33,"column_end":48},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":10032},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726521,"byte_end":726541,"line_start":528,"line_end":528,"column_start":40,"column_end":60},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726642,"byte_end":726662,"line_start":531,"line_end":531,"column_start":33,"column_end":53},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726862,"byte_end":726872,"line_start":535,"line_end":535,"column_start":40,"column_end":50},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726922,"byte_end":726932,"line_start":536,"line_end":536,"column_start":40,"column_end":50},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":726983,"byte_end":726998,"line_start":538,"line_end":538,"column_start":40,"column_end":55},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":10016},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":727044,"byte_end":727059,"line_start":539,"line_end":539,"column_start":40,"column_end":55},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":10016},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":727124,"byte_end":727140,"line_start":541,"line_end":541,"column_start":58,"column_end":74},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":10074},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/lock/mutex.rs","byte_start":727211,"byte_end":727227,"line_start":542,"line_end":542,"column_start":58,"column_end":74},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":10074},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":728069,"byte_end":728078,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":18681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":730362,"byte_end":730373,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":18728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731189,"byte_end":731196,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":18739},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731379,"byte_end":731386,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":18739},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":731399,"byte_end":731408,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":18681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732397,"byte_end":732406,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":18681},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732645,"byte_end":732654,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":18681},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/abortable.rs","byte_start":732913,"byte_end":732924,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":18728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733596,"byte_end":733597,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":10209},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733736,"byte_end":733743,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":10204},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":733832,"byte_end":733833,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":10218},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":734019,"byte_end":734025,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":10214},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":734103,"byte_end":734104,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":10226},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735120,"byte_end":735124,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":10231},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735218,"byte_end":735222,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":10231},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735481,"byte_end":735488,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":18770},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735711,"byte_end":735718,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":18770},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":735909,"byte_end":735916,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":18770},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736221,"byte_end":736234,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":18791},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736651,"byte_end":736660,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":18807},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":736944,"byte_end":736953,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":18807},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737215,"byte_end":737224,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":18807},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737546,"byte_end":737553,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":18822},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737772,"byte_end":737779,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":18822},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":737957,"byte_end":737964,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":18822},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738265,"byte_end":738273,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":18837},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738496,"byte_end":738504,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":18837},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":738686,"byte_end":738694,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":18837},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739004,"byte_end":739015,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":18852},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739275,"byte_end":739286,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":18852},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739523,"byte_end":739534,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":18852},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":739901,"byte_end":739913,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":18864},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":740174,"byte_end":740186,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":18864},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":740424,"byte_end":740436,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":18864},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741055,"byte_end":741069,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":18876},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741292,"byte_end":741306,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":18876},"to":{"krate":0,"index":10214}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741507,"byte_end":741521,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":18876},"to":{"krate":0,"index":10222}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741827,"byte_end":741833,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":10395},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/fns.rs","byte_start":741926,"byte_end":741932,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":10395},"to":{"krate":0,"index":10204}},{"span":{"file_name":"/Users/iliashuianov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.23/src/unfold_state.rs","byte_start":742537,"byte_end":742548,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":18909},"to":{"krate":4294967295,"index":4294967295}}]}